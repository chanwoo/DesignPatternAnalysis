public class CH.ifa.draw.samples.javadraw.BouncingDrawing extends CH.ifa.draw.standard.StandardDrawing implements CH.ifa.draw.util.Animatable
{
    private static final long serialVersionUID;
    private int bouncingDrawingSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = -8566272817418441758L;
        <CH.ifa.draw.samples.javadraw.BouncingDrawing: long serialVersionUID> = temp$0;
        return;
    }

    public synchronized CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.javadraw.BouncingDrawing this;
        CH.ifa.draw.framework.Figure figure, temp$3;
        boolean temp$0, temp$1;
        CH.ifa.draw.samples.javadraw.AnimationDecorator temp$2;

        this := @this: CH.ifa.draw.samples.javadraw.BouncingDrawing;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = figure instanceof CH.ifa.draw.samples.javadraw.AnimationDecorator;
        if temp$0 == 0 goto label0;

        goto label2;

     label0:
        nop;
        temp$1 = figure instanceof CH.ifa.draw.framework.ConnectionFigure;
        if temp$1 == 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = new CH.ifa.draw.samples.javadraw.AnimationDecorator;
        specialinvoke temp$2.<CH.ifa.draw.samples.javadraw.AnimationDecorator: void <init>(CH.ifa.draw.framework.Figure)>(figure);
        figure = temp$2;

     label2:
        nop;
        temp$3 = specialinvoke this.<CH.ifa.draw.standard.StandardDrawing: CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)>(figure);
        return temp$3;
    }

    public synchronized CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.javadraw.BouncingDrawing this;
        CH.ifa.draw.framework.Figure figure, f, temp$0, temp$3;
        boolean temp$1;
        CH.ifa.draw.samples.javadraw.AnimationDecorator temp$2;

        this := @this: CH.ifa.draw.samples.javadraw.BouncingDrawing;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = specialinvoke this.<CH.ifa.draw.standard.StandardDrawing: CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)>(figure);
        f = temp$0;
        temp$1 = f instanceof CH.ifa.draw.samples.javadraw.AnimationDecorator;
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = (CH.ifa.draw.samples.javadraw.AnimationDecorator) f;
        temp$3 = virtualinvoke temp$2.<CH.ifa.draw.samples.javadraw.AnimationDecorator: CH.ifa.draw.framework.Figure peelDecoration()>();
        return temp$3;

     label1:
        nop;
        return f;
    }

    public synchronized CH.ifa.draw.framework.Figure replace(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.javadraw.BouncingDrawing this;
        CH.ifa.draw.framework.Figure figure, replacement, temp$3;
        boolean temp$0, temp$1;
        CH.ifa.draw.samples.javadraw.AnimationDecorator temp$2;

        this := @this: CH.ifa.draw.samples.javadraw.BouncingDrawing;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        replacement := @parameter1: CH.ifa.draw.framework.Figure;
        temp$0 = replacement instanceof CH.ifa.draw.samples.javadraw.AnimationDecorator;
        if temp$0 == 0 goto label0;

        goto label2;

     label0:
        nop;
        temp$1 = replacement instanceof CH.ifa.draw.framework.ConnectionFigure;
        if temp$1 == 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = new CH.ifa.draw.samples.javadraw.AnimationDecorator;
        specialinvoke temp$2.<CH.ifa.draw.samples.javadraw.AnimationDecorator: void <init>(CH.ifa.draw.framework.Figure)>(replacement);
        replacement = temp$2;

     label2:
        nop;
        temp$3 = specialinvoke this.<CH.ifa.draw.standard.StandardDrawing: CH.ifa.draw.framework.Figure replace(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(figure, replacement);
        return temp$3;
    }

    public void animationStep()
    {
        CH.ifa.draw.samples.javadraw.BouncingDrawing this;
        java.util.Enumeration k;
        CH.ifa.draw.framework.FigureEnumeration temp$0;
        boolean temp$1, temp$3;
        CH.ifa.draw.framework.Figure f;
        java.lang.Object temp$2;
        CH.ifa.draw.samples.javadraw.AnimationDecorator temp$4;

        this := @this: CH.ifa.draw.samples.javadraw.BouncingDrawing;
        temp$0 = virtualinvoke this.<CH.ifa.draw.samples.javadraw.BouncingDrawing: CH.ifa.draw.framework.FigureEnumeration figures()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label4;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<java.util.Enumeration: java.lang.Object nextElement()>();
        f = (CH.ifa.draw.framework.Figure) temp$2;
        temp$3 = f instanceof CH.ifa.draw.framework.ConnectionFigure;
        if temp$3 == 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$4 = (CH.ifa.draw.samples.javadraw.AnimationDecorator) f;
        virtualinvoke temp$4.<CH.ifa.draw.samples.javadraw.AnimationDecorator: void animationStep()>();

     label3:
        nop;
        goto label0;

     label4:
        nop;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.samples.javadraw.BouncingDrawing this;
        int temp$0;

        this := @this: CH.ifa.draw.samples.javadraw.BouncingDrawing;
        specialinvoke this.<CH.ifa.draw.standard.StandardDrawing: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.samples.javadraw.BouncingDrawing: int bouncingDrawingSerializedDataVersion> = temp$0;
        return;
    }
}
