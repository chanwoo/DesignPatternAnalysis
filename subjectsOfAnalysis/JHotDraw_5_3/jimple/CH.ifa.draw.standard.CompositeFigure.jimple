public abstract class CH.ifa.draw.standard.CompositeFigure extends CH.ifa.draw.standard.AbstractFigure implements CH.ifa.draw.framework.FigureChangeListener
{
    protected java.util.Vector fFigures;
    private static final long serialVersionUID;
    private int compositeFigureSerializedDataVersion;
    private CH.ifa.draw.standard.QuadTree _theQuadTree;
    protected int _nLowestZ;
    protected int _nHighestZ;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = 7408153435700021866L;
        <CH.ifa.draw.standard.CompositeFigure: long serialVersionUID> = temp$0;
        return;
    }

    protected void <init>()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int temp$0, temp$2, temp$3;
        java.util.Vector temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        specialinvoke this.<CH.ifa.draw.standard.AbstractFigure: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.standard.CompositeFigure: int compositeFigureSerializedDataVersion> = temp$0;
        temp$1 = new java.util.Vector;
        specialinvoke temp$1.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures> = temp$1;
        temp$2 = 0;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nLowestZ> = temp$2;
        temp$3 = 0;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ> = temp$3;
        return;
    }

    public CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure;
        java.util.Vector temp$0, temp$4;
        boolean temp$1;
        int temp$2, temp$3;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ>;
        temp$3 = temp$2 + 1;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ> = temp$3;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$3);
        temp$4 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$4.<java.util.Vector: void addElement(java.lang.Object)>(figure);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void addToContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _addToQuadTree(CH.ifa.draw.framework.Figure)>(figure);

     label1:
        nop;
        return figure;
    }

    public void addAll(java.util.Vector)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.util.Vector newFigures;
        CH.ifa.draw.standard.FigureEnumerator temp$0;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        newFigures := @parameter0: java.util.Vector;
        temp$0 = new CH.ifa.draw.standard.FigureEnumerator;
        specialinvoke temp$0.<CH.ifa.draw.standard.FigureEnumerator: void <init>(java.util.Vector)>(newFigures);
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void addAll(CH.ifa.draw.framework.FigureEnumeration)>(temp$0);
        return;
    }

    public void addAll(CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureEnumeration fe;
        boolean temp$0;
        CH.ifa.draw.framework.Figure temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;

     label0:
        nop;
        temp$0 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)>(temp$1);
        goto label0;

     label2:
        nop;
        return;
    }

    public CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure, temp$0;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure orphan(CH.ifa.draw.framework.Figure)>(figure);
        return temp$0;
    }

    public void removeAll(java.util.Vector)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.util.Vector figures;
        CH.ifa.draw.standard.FigureEnumerator temp$0;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figures := @parameter0: java.util.Vector;
        temp$0 = new CH.ifa.draw.standard.FigureEnumerator;
        specialinvoke temp$0.<CH.ifa.draw.standard.FigureEnumerator: void <init>(java.util.Vector)>(figures);
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void removeAll(CH.ifa.draw.framework.FigureEnumeration)>(temp$0);
        return;
    }

    public void removeAll(CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureEnumeration fe;
        boolean temp$0;
        CH.ifa.draw.framework.Figure temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;

     label0:
        nop;
        temp$0 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)>(temp$1);
        goto label0;

     label2:
        nop;
        return;
    }

    public void removeAll()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure figure, temp$2;
        java.util.Vector temp$3;
        int temp$4, temp$5;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void removeFromContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        goto label0;

     label2:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$3.<java.util.Vector: void removeAllElements()>();
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _clearQuadTree()>();
        temp$4 = 0;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nLowestZ> = temp$4;
        temp$5 = 0;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ> = temp$5;
        return;
    }

    public synchronized CH.ifa.draw.framework.Figure orphan(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure;
        java.util.Vector temp$0, temp$2;
        boolean temp$1, temp$3;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void removeFromContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: boolean removeElement(java.lang.Object)>(figure);
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _removeFromQuadTree(CH.ifa.draw.framework.Figure)>(figure);

     label1:
        nop;
        return figure;
    }

    public void orphanAll(java.util.Vector)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.util.Vector newFigures;
        CH.ifa.draw.standard.FigureEnumerator temp$0;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        newFigures := @parameter0: java.util.Vector;
        temp$0 = new CH.ifa.draw.standard.FigureEnumerator;
        specialinvoke temp$0.<CH.ifa.draw.standard.FigureEnumerator: void <init>(java.util.Vector)>(newFigures);
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void orphanAll(CH.ifa.draw.framework.FigureEnumeration)>(temp$0);
        return;
    }

    public void orphanAll(CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureEnumeration fe;
        boolean temp$0;
        CH.ifa.draw.framework.Figure temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;

     label0:
        nop;
        temp$0 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure orphan(CH.ifa.draw.framework.Figure)>(temp$1);
        goto label0;

     label2:
        nop;
        return;
    }

    public synchronized CH.ifa.draw.framework.Figure replace(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure, replacement;
        int index, temp$1, temp$2;
        java.util.Vector temp$0, temp$3;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        replacement := @parameter1: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int indexOf(java.lang.Object)>(figure);
        index = temp$1;
        if index != -1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: int getZValue()>();
        interfaceinvoke replacement.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$2);
        interfaceinvoke replacement.<CH.ifa.draw.framework.Figure: void addToContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void removeFromContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        temp$3 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$3.<java.util.Vector: void setElementAt(java.lang.Object,int)>(replacement, index);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void changed()>();
        interfaceinvoke replacement.<CH.ifa.draw.framework.Figure: void changed()>();

     label1:
        nop;
        return replacement;
    }

    public synchronized void sendToBack(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure;
        java.util.Vector temp$0, temp$2, temp$4;
        boolean temp$1, temp$3;
        int temp$5, temp$6, temp$7;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: boolean removeElement(java.lang.Object)>(figure);
        temp$4 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(figure, 0);
        temp$5 = this.<CH.ifa.draw.standard.CompositeFigure: int _nLowestZ>;
        temp$6 = temp$5 + -1;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nLowestZ> = temp$6;
        temp$7 = this.<CH.ifa.draw.standard.CompositeFigure: int _nLowestZ>;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$7);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void changed()>();

     label1:
        nop;
        return;
    }

    public synchronized void bringToFront(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure;
        java.util.Vector temp$0, temp$2, temp$4;
        boolean temp$1, temp$3;
        int temp$5, temp$6, temp$7;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: boolean removeElement(java.lang.Object)>(figure);
        temp$4 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$4.<java.util.Vector: void addElement(java.lang.Object)>(figure);
        temp$5 = this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ>;
        temp$6 = temp$5 + 1;
        this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ> = temp$6;
        temp$7 = this.<CH.ifa.draw.standard.CompositeFigure: int _nHighestZ>;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$7);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void changed()>();

     label1:
        nop;
        return;
    }

    public void sendToLayer(CH.ifa.draw.framework.Figure, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure, layerFigure, temp$7;
        int layerNr, temp$3, temp$5, temp$6, layerFigureZValue, temp$8, figureLayer, temp$9, temp$10, temp$11, temp$12;
        java.util.Vector temp$0, temp$2, temp$4, temp$13, temp$15;
        boolean temp$1, temp$14;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        layerNr := @parameter1: int;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label8;

        goto label0;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: int size()>();
        if layerNr >= temp$3 goto label1;

        goto label2;

     label1:
        nop;
        temp$4 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$5 = virtualinvoke temp$4.<java.util.Vector: int size()>();
        temp$6 = temp$5 - 1;
        layerNr = temp$6;

     label2:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure getFigureFromLayer(int)>(layerNr);
        layerFigure = temp$7;
        temp$8 = interfaceinvoke layerFigure.<CH.ifa.draw.framework.Figure: int getZValue()>();
        layerFigureZValue = temp$8;
        temp$9 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: int getLayer(CH.ifa.draw.framework.Figure)>(figure);
        figureLayer = temp$9;
        if figureLayer < layerNr goto label3;

        goto label4;

     label3:
        nop;
        temp$10 = figureLayer;
        temp$11 = temp$10 + 1;
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void assignFiguresToPredecessorZValue(int,int)>(temp$11, layerNr);
        goto label7;

     label4:
        nop;
        if figureLayer > layerNr goto label5;

        goto label6;

     label5:
        nop;
        temp$12 = figureLayer - 1;
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void assignFiguresToSuccessorZValue(int,int)>(layerNr, temp$12);

     label6:
        nop;

     label7:
        nop;
        temp$13 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$14 = virtualinvoke temp$13.<java.util.Vector: boolean removeElement(java.lang.Object)>(figure);
        temp$15 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        virtualinvoke temp$15.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(figure, layerNr);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(layerFigureZValue);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void changed()>();

     label8:
        nop;
        return;
    }

    private final void assignFiguresToPredecessorZValue(int, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int lowerBound, upperBound, temp$1, temp$3, temp$4, i, temp$8, temp$10, temp$11, temp$12;
        java.util.Vector temp$0, temp$2, temp$5, temp$7;
        CH.ifa.draw.framework.Figure currentFigure, predecessorFigure;
        java.lang.Object temp$6, temp$9;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        lowerBound := @parameter0: int;
        upperBound := @parameter1: int;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if upperBound >= temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: int size()>();
        temp$4 = temp$3 - 1;
        upperBound = temp$4;

     label1:
        nop;
        i = upperBound;

     label2:
        nop;
        if i >= lowerBound goto label3;

        goto label4;

     label3:
        nop;
        temp$5 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$6 = virtualinvoke temp$5.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        currentFigure = (CH.ifa.draw.framework.Figure) temp$6;
        temp$7 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$8 = i - 1;
        temp$9 = virtualinvoke temp$7.<java.util.Vector: java.lang.Object elementAt(int)>(temp$8);
        predecessorFigure = (CH.ifa.draw.framework.Figure) temp$9;
        temp$10 = interfaceinvoke predecessorFigure.<CH.ifa.draw.framework.Figure: int getZValue()>();
        interfaceinvoke currentFigure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$10);
        nop;
        temp$11 = i;
        temp$12 = temp$11 + -1;
        i = temp$12;
        goto label2;

     label4:
        nop;
        return;
    }

    private final void assignFiguresToSuccessorZValue(int, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int lowerBound, upperBound, temp$1, temp$3, temp$4, i, temp$8, temp$9, temp$11, temp$12, temp$13;
        java.util.Vector temp$0, temp$2, temp$5, temp$7;
        CH.ifa.draw.framework.Figure currentFigure, successorFigure;
        java.lang.Object temp$6, temp$10;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        lowerBound := @parameter0: int;
        upperBound := @parameter1: int;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if upperBound >= temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: int size()>();
        temp$4 = temp$3 - 1;
        upperBound = temp$4;

     label1:
        nop;
        i = upperBound;

     label2:
        nop;
        if i >= lowerBound goto label3;

        goto label4;

     label3:
        nop;
        temp$5 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$6 = virtualinvoke temp$5.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        currentFigure = (CH.ifa.draw.framework.Figure) temp$6;
        temp$7 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$8 = i;
        temp$9 = temp$8 + 1;
        temp$10 = virtualinvoke temp$7.<java.util.Vector: java.lang.Object elementAt(int)>(temp$9);
        successorFigure = (CH.ifa.draw.framework.Figure) temp$10;
        temp$11 = interfaceinvoke successorFigure.<CH.ifa.draw.framework.Figure: int getZValue()>();
        interfaceinvoke currentFigure.<CH.ifa.draw.framework.Figure: void setZValue(int)>(temp$11);
        nop;
        temp$12 = i;
        temp$13 = temp$12 + -1;
        i = temp$13;
        goto label2;

     label4:
        nop;
        return;
    }

    public int getLayer(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure;
        java.util.Vector temp$0, temp$3;
        boolean temp$1;
        int temp$2, temp$4;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = -1;
        return temp$2;

     label1:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: int indexOf(java.lang.Object)>(figure);
        return temp$4;
    }

    public CH.ifa.draw.framework.Figure getFigureFromLayer(int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int layerNr, temp$1;
        java.util.Vector temp$0, temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.Figure temp$4, temp$5;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        layerNr := @parameter0: int;
        if layerNr >= 0 goto label0;

        goto label2;

     label0:
        nop;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if layerNr < temp$1 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: java.lang.Object elementAt(int)>(layerNr);
        temp$4 = (CH.ifa.draw.framework.Figure) temp$3;
        return temp$4;

     label2:
        nop;
        temp$5 = null;
        return temp$5;
    }

    public void draw(java.awt.Graphics)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Graphics g;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        g := @parameter0: java.awt.Graphics;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        interfaceinvoke temp$2.<CH.ifa.draw.framework.Figure: void draw(java.awt.Graphics)>(g);
        goto label0;

     label2:
        nop;
        return;
    }

    public void draw(java.awt.Graphics, CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Graphics g;
        CH.ifa.draw.framework.FigureEnumeration fe;
        boolean temp$0;
        CH.ifa.draw.framework.Figure temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        g := @parameter0: java.awt.Graphics;
        fe := @parameter1: CH.ifa.draw.framework.FigureEnumeration;

     label0:
        nop;
        temp$0 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        interfaceinvoke temp$1.<CH.ifa.draw.framework.Figure: void draw(java.awt.Graphics)>(g);
        goto label0;

     label2:
        nop;
        return;
    }

    public CH.ifa.draw.framework.Figure figureAt(int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int i;
        java.util.Vector temp$0;
        java.lang.Object temp$1;
        CH.ifa.draw.framework.Figure temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        i := @parameter0: int;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        temp$2 = (CH.ifa.draw.framework.Figure) temp$1;
        return temp$2;
    }

    public final CH.ifa.draw.framework.FigureEnumeration figures()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.standard.FigureEnumerator temp$0;
        java.util.Vector temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        temp$0 = new CH.ifa.draw.standard.FigureEnumerator;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: java.lang.Object clone()>();
        temp$3 = (java.util.Vector) temp$2;
        specialinvoke temp$0.<CH.ifa.draw.standard.FigureEnumerator: void <init>(java.util.Vector)>(temp$3);
        return temp$0;
    }

    public CH.ifa.draw.framework.FigureEnumeration figures(java.awt.Rectangle)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Rectangle viewRectangle;
        CH.ifa.draw.standard.QuadTree temp$0, temp$1;
        java.util.Vector v, temp$4, v2, temp$5, v3, temp$11;
        CH.ifa.draw.util.Bounds temp$2;
        java.awt.geom.Rectangle2D temp$3;
        java.util.Enumeration e, temp$6, e, temp$12;
        boolean temp$7, temp$13;
        CH.ifa.draw.framework.Figure f, temp$15;
        java.lang.Object temp$8, temp$14;
        CH.ifa.draw.standard.OrderedFigureElement temp$9, ofe;
        int temp$10;
        CH.ifa.draw.standard.FigureEnumerator temp$16;
        CH.ifa.draw.framework.FigureEnumeration temp$17;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        viewRectangle := @parameter0: java.awt.Rectangle;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        if temp$0 != null goto label0;

        goto label7;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        temp$2 = new CH.ifa.draw.util.Bounds;
        specialinvoke temp$2.<CH.ifa.draw.util.Bounds: void <init>(java.awt.geom.Rectangle2D)>(viewRectangle);
        temp$3 = virtualinvoke temp$2.<CH.ifa.draw.util.Bounds: java.awt.geom.Rectangle2D asRectangle2D()>();
        temp$4 = virtualinvoke temp$1.<CH.ifa.draw.standard.QuadTree: java.util.Vector getAllWithin(java.awt.geom.Rectangle2D)>(temp$3);
        v = temp$4;
        temp$5 = new java.util.Vector;
        specialinvoke temp$5.<java.util.Vector: void <init>()>();
        v2 = temp$5;
        temp$6 = virtualinvoke v.<java.util.Vector: java.util.Enumeration elements()>();
        e = temp$6;

     label1:
        nop;
        temp$7 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$7 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$8 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>();
        f = (CH.ifa.draw.framework.Figure) temp$8;
        temp$9 = new CH.ifa.draw.standard.OrderedFigureElement;
        temp$10 = interfaceinvoke f.<CH.ifa.draw.framework.Figure: int getZValue()>();
        specialinvoke temp$9.<CH.ifa.draw.standard.OrderedFigureElement: void <init>(CH.ifa.draw.framework.Figure,int)>(f, temp$10);
        virtualinvoke v2.<java.util.Vector: void addElement(java.lang.Object)>(temp$9);
        nop;
        goto label1;

     label3:
        nop;
        staticinvoke <java.util.Collections: void sort(java.util.List)>(v2);
        temp$11 = new java.util.Vector;
        specialinvoke temp$11.<java.util.Vector: void <init>()>();
        v3 = temp$11;
        temp$12 = virtualinvoke v2.<java.util.Vector: java.util.Enumeration elements()>();
        e = temp$12;

     label4:
        nop;
        temp$13 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$13 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$14 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>();
        ofe = (CH.ifa.draw.standard.OrderedFigureElement) temp$14;
        temp$15 = virtualinvoke ofe.<CH.ifa.draw.standard.OrderedFigureElement: CH.ifa.draw.framework.Figure getFigure()>();
        virtualinvoke v3.<java.util.Vector: void addElement(java.lang.Object)>(temp$15);
        nop;
        goto label4;

     label6:
        nop;
        temp$16 = new CH.ifa.draw.standard.FigureEnumerator;
        specialinvoke temp$16.<CH.ifa.draw.standard.FigureEnumerator: void <init>(java.util.Vector)>(v3);
        return temp$16;

     label7:
        nop;
        temp$17 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        return temp$17;
    }

    public int figureCount()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.util.Vector temp$0;
        int temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        return temp$1;
    }

    public final CH.ifa.draw.framework.FigureEnumeration figuresReverse()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.standard.ReverseFigureEnumerator temp$0;
        java.util.Vector temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        temp$0 = new CH.ifa.draw.standard.ReverseFigureEnumerator;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: java.lang.Object clone()>();
        temp$3 = (java.util.Vector) temp$2;
        specialinvoke temp$0.<CH.ifa.draw.standard.ReverseFigureEnumerator: void <init>(java.util.Vector)>(temp$3);
        return temp$0;
    }

    public CH.ifa.draw.framework.Figure findFigure(int, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int x, y;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1, temp$3;
        CH.ifa.draw.framework.Figure figure, temp$2, temp$4;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label4;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        temp$3 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean containsPoint(int,int)>(x, y);
        if temp$3 == 0 goto label3;

        goto label2;

     label2:
        nop;
        return figure;

     label3:
        nop;
        goto label0;

     label4:
        nop;
        temp$4 = null;
        return temp$4;
    }

    public CH.ifa.draw.framework.Figure findFigure(java.awt.Rectangle)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Rectangle r, fr, temp$3;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1, temp$4;
        CH.ifa.draw.framework.Figure figure, temp$2, temp$5;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        r := @parameter0: java.awt.Rectangle;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label4;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        temp$3 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        fr = temp$3;
        temp$4 = virtualinvoke r.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(fr);
        if temp$4 == 0 goto label3;

        goto label2;

     label2:
        nop;
        return figure;

     label3:
        nop;
        goto label0;

     label4:
        nop;
        temp$5 = null;
        return temp$5;
    }

    public CH.ifa.draw.framework.Figure findFigureWithout(int, int, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int x, y;
        CH.ifa.draw.framework.Figure without, temp$0, figure, temp$3, temp$6;
        CH.ifa.draw.framework.FigureEnumeration k, temp$1;
        boolean temp$2, temp$4, temp$5;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        x := @parameter0: int;
        y := @parameter1: int;
        without := @parameter2: CH.ifa.draw.framework.Figure;
        if without == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure findFigure(int,int)>(x, y);
        return temp$0;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$1;

     label2:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label7;

        goto label3;

     label3:
        nop;
        temp$3 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$3;
        temp$4 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean containsPoint(int,int)>(x, y);
        if temp$4 == 0 goto label6;

        goto label4;

     label4:
        nop;
        temp$5 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(without);
        if temp$5 == 0 goto label5;

        goto label6;

        goto label5;

     label5:
        nop;
        return figure;

     label6:
        nop;
        goto label2;

     label7:
        nop;
        temp$6 = null;
        return temp$6;
    }

    public CH.ifa.draw.framework.Figure findFigure(java.awt.Rectangle, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Rectangle r, fr, temp$4;
        CH.ifa.draw.framework.Figure without, temp$0, figure, temp$3, temp$7;
        CH.ifa.draw.framework.FigureEnumeration k, temp$1;
        boolean temp$2, temp$5, temp$6;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        r := @parameter0: java.awt.Rectangle;
        without := @parameter1: CH.ifa.draw.framework.Figure;
        if without == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure findFigure(java.awt.Rectangle)>(r);
        return temp$0;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$1;

     label2:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label7;

        goto label3;

     label3:
        nop;
        temp$3 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$3;
        temp$4 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        fr = temp$4;
        temp$5 = virtualinvoke r.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(fr);
        if temp$5 == 0 goto label6;

        goto label4;

     label4:
        nop;
        temp$6 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(without);
        if temp$6 == 0 goto label5;

        goto label6;

        goto label5;

     label5:
        nop;
        return figure;

     label6:
        nop;
        goto label2;

     label7:
        nop;
        temp$7 = null;
        return temp$7;
    }

    public CH.ifa.draw.framework.Figure findFigureInside(int, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int x, y;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure figure, temp$2, temp$3, temp$4;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label4;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$3 = interfaceinvoke temp$2.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.Figure findFigureInside(int,int)>(x, y);
        figure = temp$3;
        if figure != null goto label2;

        goto label3;

     label2:
        nop;
        return figure;

     label3:
        nop;
        goto label0;

     label4:
        nop;
        temp$4 = null;
        return temp$4;
    }

    public CH.ifa.draw.framework.Figure findFigureInsideWithout(int, int, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int x, y;
        CH.ifa.draw.framework.Figure without, figure, temp$2, found, temp$3, temp$4;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        x := @parameter0: int;
        y := @parameter1: int;
        without := @parameter2: CH.ifa.draw.framework.Figure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label6;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        if figure != without goto label2;

        goto label5;

     label2:
        nop;
        temp$3 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.Figure findFigureInside(int,int)>(x, y);
        found = temp$3;
        if found != null goto label3;

        goto label4;

     label3:
        nop;
        return found;

     label4:
        nop;

     label5:
        nop;
        goto label0;

     label6:
        nop;
        temp$4 = null;
        return temp$4;
    }

    public boolean includes(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure figure, f, temp$4;
        boolean temp$0, temp$1, temp$3, temp$5, temp$6, temp$7;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = specialinvoke this.<CH.ifa.draw.standard.AbstractFigure: boolean includes(CH.ifa.draw.framework.Figure)>(figure);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = 1;
        return temp$1;

     label1:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$2;

     label2:
        nop;
        temp$3 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$3 == 0 goto label6;

        goto label3;

     label3:
        nop;
        temp$4 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        f = temp$4;
        temp$5 = interfaceinvoke f.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(figure);
        if temp$5 == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$6 = 1;
        return temp$6;

     label5:
        nop;
        goto label2;

     label6:
        nop;
        temp$7 = 0;
        return temp$7;
    }

    protected void basicMoveBy(int, int)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        int x, y;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        interfaceinvoke temp$2.<CH.ifa.draw.framework.Figure: void moveBy(int,int)>(x, y);
        goto label0;

     label2:
        nop;
        return;
    }

    public void release()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure figure, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        specialinvoke this.<CH.ifa.draw.standard.AbstractFigure: void release()>();
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void release()>();
        goto label0;

     label2:
        nop;
        return;
    }

    public void figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        CH.ifa.draw.framework.FigureChangeListener temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        interfaceinvoke temp$1.<CH.ifa.draw.framework.FigureChangeListener: void figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)>(e);

     label1:
        nop;
        return;
    }

    public void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureChangeEvent e, temp$2;
        CH.ifa.draw.framework.FigureChangeListener temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        temp$2 = new CH.ifa.draw.framework.FigureChangeEvent;
        specialinvoke temp$2.<CH.ifa.draw.framework.FigureChangeEvent: void <init>(CH.ifa.draw.framework.Figure)>(this);
        interfaceinvoke temp$1.<CH.ifa.draw.framework.FigureChangeListener: void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)>(temp$2);

     label1:
        nop;
        return;
    }

    public void figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        CH.ifa.draw.framework.FigureChangeListener temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        interfaceinvoke temp$1.<CH.ifa.draw.framework.FigureChangeListener: void figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)>(e);

     label1:
        nop;
        return;
    }

    public void figureChanged(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        CH.ifa.draw.framework.Figure temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke e.<CH.ifa.draw.framework.FigureChangeEvent: CH.ifa.draw.framework.Figure getFigure()>();
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _removeFromQuadTree(CH.ifa.draw.framework.Figure)>(temp$0);
        temp$1 = virtualinvoke e.<CH.ifa.draw.framework.FigureChangeEvent: CH.ifa.draw.framework.Figure getFigure()>();
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _addToQuadTree(CH.ifa.draw.framework.Figure)>(temp$1);
        return;
    }

    public void figureRemoved(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.FigureChangeEvent e;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        return;
    }

    public void write(CH.ifa.draw.util.StorableOutput)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.util.StorableOutput dw;
        int temp$0;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$1;
        boolean temp$2;
        CH.ifa.draw.framework.Figure temp$3;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        dw := @parameter0: CH.ifa.draw.util.StorableOutput;
        specialinvoke this.<CH.ifa.draw.standard.AbstractFigure: void write(CH.ifa.draw.util.StorableOutput)>(dw);
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: int figureCount()>();
        virtualinvoke dw.<CH.ifa.draw.util.StorableOutput: void writeInt(int)>(temp$0);
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        virtualinvoke dw.<CH.ifa.draw.util.StorableOutput: void writeStorable(CH.ifa.draw.util.Storable)>(temp$3);
        goto label0;

     label2:
        nop;
        return;
    }

    public void read(CH.ifa.draw.util.StorableInput) throws java.io.IOException
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.util.StorableInput dr;
        int size, temp$0, i, temp$5, temp$6;
        java.util.Vector temp$1;
        CH.ifa.draw.util.Storable temp$2;
        CH.ifa.draw.framework.Figure temp$3, temp$4;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        dr := @parameter0: CH.ifa.draw.util.StorableInput;
        specialinvoke this.<CH.ifa.draw.standard.AbstractFigure: void read(CH.ifa.draw.util.StorableInput)>(dr);
        temp$0 = virtualinvoke dr.<CH.ifa.draw.util.StorableInput: int readInt()>();
        size = temp$0;
        temp$1 = new java.util.Vector;
        specialinvoke temp$1.<java.util.Vector: void <init>(int)>(size);
        this.<CH.ifa.draw.standard.CompositeFigure: java.util.Vector fFigures> = temp$1;
        i = 0;

     label0:
        nop;
        if i < size goto label1;

        goto label2;

     label1:
        nop;
        temp$2 = virtualinvoke dr.<CH.ifa.draw.util.StorableInput: CH.ifa.draw.util.Storable readStorable()>();
        temp$3 = (CH.ifa.draw.framework.Figure) temp$2;
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)>(temp$3);
        nop;
        temp$5 = i;
        temp$6 = temp$5 + 1;
        i = temp$6;
        goto label0;

     label2:
        nop;
        return;
    }

    private final void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.io.ObjectInputStream s;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.Figure figure, temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        s := @parameter0: java.io.ObjectInputStream;
        virtualinvoke s.<java.io.ObjectInputStream: void defaultReadObject()>();
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void addToContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        goto label0;

     label2:
        nop;
        return;
    }

    public void init(java.awt.Rectangle)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        java.awt.Rectangle viewRectangle;
        CH.ifa.draw.standard.QuadTree temp$0;
        CH.ifa.draw.util.Bounds temp$1;
        java.awt.geom.Rectangle2D temp$2;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$3;
        boolean temp$4;
        CH.ifa.draw.framework.Figure temp$5;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        viewRectangle := @parameter0: java.awt.Rectangle;
        temp$0 = new CH.ifa.draw.standard.QuadTree;
        temp$1 = new CH.ifa.draw.util.Bounds;
        specialinvoke temp$1.<CH.ifa.draw.util.Bounds: void <init>(java.awt.geom.Rectangle2D)>(viewRectangle);
        temp$2 = virtualinvoke temp$1.<CH.ifa.draw.util.Bounds: java.awt.geom.Rectangle2D asRectangle2D()>();
        specialinvoke temp$0.<CH.ifa.draw.standard.QuadTree: void <init>(java.awt.geom.Rectangle2D)>(temp$2);
        this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree> = temp$0;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.framework.FigureEnumeration figures()>();
        fe = temp$3;

     label0:
        nop;
        temp$4 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$4 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$5 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        virtualinvoke this.<CH.ifa.draw.standard.CompositeFigure: void _addToQuadTree(CH.ifa.draw.framework.Figure)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    private final void _addToQuadTree(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.standard.QuadTree temp$0, temp$1;
        CH.ifa.draw.util.Bounds temp$2;
        java.awt.Rectangle temp$3;
        java.awt.geom.Rectangle2D temp$4;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        f := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        temp$2 = new CH.ifa.draw.util.Bounds;
        temp$3 = interfaceinvoke f.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        specialinvoke temp$2.<CH.ifa.draw.util.Bounds: void <init>(java.awt.geom.Rectangle2D)>(temp$3);
        temp$4 = virtualinvoke temp$2.<CH.ifa.draw.util.Bounds: java.awt.geom.Rectangle2D asRectangle2D()>();
        virtualinvoke temp$1.<CH.ifa.draw.standard.QuadTree: void add(java.lang.Object,java.awt.geom.Rectangle2D)>(f, temp$4);

     label1:
        nop;
        return;
    }

    private final void _removeFromQuadTree(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.standard.QuadTree temp$0, temp$1;
        java.lang.Object temp$2;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        f := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        temp$2 = virtualinvoke temp$1.<CH.ifa.draw.standard.QuadTree: java.lang.Object remove(java.lang.Object)>(f);

     label1:
        nop;
        return;
    }

    private final void _clearQuadTree()
    {
        CH.ifa.draw.standard.CompositeFigure this;
        CH.ifa.draw.standard.QuadTree temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.CompositeFigure;
        temp$0 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.CompositeFigure: CH.ifa.draw.standard.QuadTree _theQuadTree>;
        virtualinvoke temp$1.<CH.ifa.draw.standard.QuadTree: void clear()>();

     label1:
        nop;
        return;
    }
}
