public class CH.ifa.draw.util.ColorMap extends java.lang.Object
{
    static CH.ifa.draw.util.ColorEntry[] fMap;

    static void <clinit>()
    {
        CH.ifa.draw.util.ColorEntry[] temp$0;
        CH.ifa.draw.util.ColorEntry temp$1, temp$3, temp$5, temp$7, temp$9, temp$11, temp$13, temp$15, temp$17, temp$19, temp$21, temp$23, temp$25, temp$27, temp$29;
        java.awt.Color temp$2, temp$4, temp$6, temp$8, temp$10, temp$12, temp$14, temp$16, temp$18, temp$20, temp$22, temp$24, temp$26, temp$28, temp$30;

        temp$0 = newarray (CH.ifa.draw.util.ColorEntry)[15];
        temp$1 = new CH.ifa.draw.util.ColorEntry;
        temp$2 = <java.awt.Color: java.awt.Color black>;
        specialinvoke temp$1.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Black", temp$2);
        temp$0[0] = temp$1;
        temp$3 = new CH.ifa.draw.util.ColorEntry;
        temp$4 = <java.awt.Color: java.awt.Color blue>;
        specialinvoke temp$3.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Blue", temp$4);
        temp$0[1] = temp$3;
        temp$5 = new CH.ifa.draw.util.ColorEntry;
        temp$6 = <java.awt.Color: java.awt.Color green>;
        specialinvoke temp$5.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Green", temp$6);
        temp$0[2] = temp$5;
        temp$7 = new CH.ifa.draw.util.ColorEntry;
        temp$8 = <java.awt.Color: java.awt.Color red>;
        specialinvoke temp$7.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Red", temp$8);
        temp$0[3] = temp$7;
        temp$9 = new CH.ifa.draw.util.ColorEntry;
        temp$10 = <java.awt.Color: java.awt.Color pink>;
        specialinvoke temp$9.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Pink", temp$10);
        temp$0[4] = temp$9;
        temp$11 = new CH.ifa.draw.util.ColorEntry;
        temp$12 = <java.awt.Color: java.awt.Color magenta>;
        specialinvoke temp$11.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Magenta", temp$12);
        temp$0[5] = temp$11;
        temp$13 = new CH.ifa.draw.util.ColorEntry;
        temp$14 = <java.awt.Color: java.awt.Color orange>;
        specialinvoke temp$13.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Orange", temp$14);
        temp$0[6] = temp$13;
        temp$15 = new CH.ifa.draw.util.ColorEntry;
        temp$16 = <java.awt.Color: java.awt.Color yellow>;
        specialinvoke temp$15.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Yellow", temp$16);
        temp$0[7] = temp$15;
        temp$17 = new CH.ifa.draw.util.ColorEntry;
        temp$18 = new java.awt.Color;
        specialinvoke temp$18.<java.awt.Color: void <init>(int)>(15452062);
        specialinvoke temp$17.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("New Tan", temp$18);
        temp$0[8] = temp$17;
        temp$19 = new CH.ifa.draw.util.ColorEntry;
        temp$20 = new java.awt.Color;
        specialinvoke temp$20.<java.awt.Color: void <init>(int)>(7396243);
        specialinvoke temp$19.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Aquamarine", temp$20);
        temp$0[9] = temp$19;
        temp$21 = new CH.ifa.draw.util.ColorEntry;
        temp$22 = new java.awt.Color;
        specialinvoke temp$22.<java.awt.Color: void <init>(int)>(2330216);
        specialinvoke temp$21.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Sea Green", temp$22);
        temp$0[10] = temp$21;
        temp$23 = new CH.ifa.draw.util.ColorEntry;
        temp$24 = <java.awt.Color: java.awt.Color darkGray>;
        specialinvoke temp$23.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Dark Gray", temp$24);
        temp$0[11] = temp$23;
        temp$25 = new CH.ifa.draw.util.ColorEntry;
        temp$26 = <java.awt.Color: java.awt.Color lightGray>;
        specialinvoke temp$25.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("Light Gray", temp$26);
        temp$0[12] = temp$25;
        temp$27 = new CH.ifa.draw.util.ColorEntry;
        temp$28 = <java.awt.Color: java.awt.Color white>;
        specialinvoke temp$27.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("White", temp$28);
        temp$0[13] = temp$27;
        temp$29 = new CH.ifa.draw.util.ColorEntry;
        temp$30 = new java.awt.Color;
        specialinvoke temp$30.<java.awt.Color: void <init>(int)>(16762782);
        specialinvoke temp$29.<CH.ifa.draw.util.ColorEntry: void <init>(java.lang.String,java.awt.Color)>("None", temp$30);
        temp$0[14] = temp$29;
        <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap> = temp$0;
        return;
    }

    public static int size()
    {
        CH.ifa.draw.util.ColorEntry[] temp$0;
        int temp$1;

        temp$0 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$1 = lengthof temp$0;
        return temp$1;
    }

    public static java.awt.Color color(int)
    {
        int index, temp$0, temp$2;
        CH.ifa.draw.util.ColorEntry[] temp$1;
        CH.ifa.draw.util.ColorEntry temp$3;
        java.awt.Color temp$4;
        java.lang.ArrayIndexOutOfBoundsException temp$5;
        java.lang.StringBuffer temp$6;
        java.lang.String temp$7;

        index := @parameter0: int;
        temp$0 = staticinvoke <CH.ifa.draw.util.ColorMap: int size()>();
        if index < temp$0 goto label0;

        goto label2;

     label0:
        nop;
        if index >= 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$2 = index;
        temp$3 = temp$1[temp$2];
        temp$4 = temp$3.<CH.ifa.draw.util.ColorEntry: java.awt.Color fColor>;
        return temp$4;

     label2:
        nop;
        temp$5 = new java.lang.ArrayIndexOutOfBoundsException;
        temp$6 = new java.lang.StringBuffer;
        specialinvoke temp$6.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Color index: ");
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(index);
        temp$7 = virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$5.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>(temp$7);
        throw temp$5;
    }

    public static java.awt.Color color(java.lang.String)
    {
        java.lang.String name, temp$5;
        int i, temp$1, temp$3, temp$8, temp$11, temp$12;
        CH.ifa.draw.util.ColorEntry[] temp$0, temp$2, temp$7;
        CH.ifa.draw.util.ColorEntry temp$4, temp$9;
        boolean temp$6;
        java.awt.Color temp$10, temp$13;

        name := @parameter0: java.lang.String;
        i = 0;

     label0:
        nop;
        temp$0 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$1 = lengthof temp$0;
        if i < temp$1 goto label1;

        goto label4;

     label1:
        nop;
        temp$2 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$3 = i;
        temp$4 = temp$2[temp$3];
        temp$5 = temp$4.<CH.ifa.draw.util.ColorEntry: java.lang.String fName>;
        temp$6 = virtualinvoke temp$5.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if temp$6 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$7 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$8 = i;
        temp$9 = temp$7[temp$8];
        temp$10 = temp$9.<CH.ifa.draw.util.ColorEntry: java.awt.Color fColor>;
        return temp$10;

     label3:
        nop;
        nop;
        temp$11 = i;
        temp$12 = temp$11 + 1;
        i = temp$12;
        goto label0;

     label4:
        nop;
        temp$13 = <java.awt.Color: java.awt.Color black>;
        return temp$13;
    }

    public static java.lang.String name(int)
    {
        int index, temp$0, temp$2;
        CH.ifa.draw.util.ColorEntry[] temp$1;
        CH.ifa.draw.util.ColorEntry temp$3;
        java.lang.String temp$4, temp$7;
        java.lang.ArrayIndexOutOfBoundsException temp$5;
        java.lang.StringBuffer temp$6;

        index := @parameter0: int;
        temp$0 = staticinvoke <CH.ifa.draw.util.ColorMap: int size()>();
        if index < temp$0 goto label0;

        goto label2;

     label0:
        nop;
        if index >= 0 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$2 = index;
        temp$3 = temp$1[temp$2];
        temp$4 = temp$3.<CH.ifa.draw.util.ColorEntry: java.lang.String fName>;
        return temp$4;

     label2:
        nop;
        temp$5 = new java.lang.ArrayIndexOutOfBoundsException;
        temp$6 = new java.lang.StringBuffer;
        specialinvoke temp$6.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Color index: ");
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(index);
        temp$7 = virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke temp$5.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>(temp$7);
        throw temp$5;
    }

    public static int colorIndex(java.awt.Color)
    {
        java.awt.Color color, temp$5;
        int i, temp$1, temp$3, temp$7, temp$8, temp$9;
        CH.ifa.draw.util.ColorEntry[] temp$0, temp$2;
        CH.ifa.draw.util.ColorEntry temp$4;
        boolean temp$6;

        color := @parameter0: java.awt.Color;
        i = 0;

     label0:
        nop;
        temp$0 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$1 = lengthof temp$0;
        if i < temp$1 goto label1;

        goto label4;

     label1:
        nop;
        temp$2 = <CH.ifa.draw.util.ColorMap: CH.ifa.draw.util.ColorEntry[] fMap>;
        temp$3 = i;
        temp$4 = temp$2[temp$3];
        temp$5 = temp$4.<CH.ifa.draw.util.ColorEntry: java.awt.Color fColor>;
        temp$6 = virtualinvoke temp$5.<java.awt.Color: boolean equals(java.lang.Object)>(color);
        if temp$6 == 0 goto label3;

        goto label2;

     label2:
        nop;
        return i;

     label3:
        nop;
        nop;
        temp$7 = i;
        temp$8 = temp$7 + 1;
        i = temp$8;
        goto label0;

     label4:
        nop;
        temp$9 = 0;
        return temp$9;
    }

    public static boolean isTransparent(java.awt.Color)
    {
        java.awt.Color color, temp$0;
        boolean temp$1;

        color := @parameter0: java.awt.Color;
        temp$0 = staticinvoke <CH.ifa.draw.util.ColorMap: java.awt.Color color(java.lang.String)>("None");
        temp$1 = virtualinvoke color.<java.awt.Color: boolean equals(java.lang.Object)>(temp$0);
        return temp$1;
    }

    public void <init>()
    {
        CH.ifa.draw.util.ColorMap this;

        this := @this: CH.ifa.draw.util.ColorMap;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
