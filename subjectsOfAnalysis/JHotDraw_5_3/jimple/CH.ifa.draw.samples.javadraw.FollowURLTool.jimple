class CH.ifa.draw.samples.javadraw.FollowURLTool extends CH.ifa.draw.standard.AbstractTool
{
    private javax.swing.JApplet fApplet;

    void <init>(CH.ifa.draw.framework.DrawingEditor, javax.swing.JApplet)
    {
        CH.ifa.draw.samples.javadraw.FollowURLTool this;
        CH.ifa.draw.framework.DrawingEditor newDrawingEditor;
        javax.swing.JApplet applet;

        this := @this: CH.ifa.draw.samples.javadraw.FollowURLTool;
        newDrawingEditor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        applet := @parameter1: javax.swing.JApplet;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void <init>(CH.ifa.draw.framework.DrawingEditor)>(newDrawingEditor);
        this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet> = applet;
        return;
    }

    public void mouseMove(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.samples.javadraw.FollowURLTool this;
        java.awt.event.MouseEvent e;
        int x, y;
        java.lang.String urlstring, temp$3;
        CH.ifa.draw.framework.Figure figure, temp$1;
        CH.ifa.draw.framework.Drawing temp$0;
        java.lang.Object temp$2;
        javax.swing.JApplet temp$4, temp$5;

        this := @this: CH.ifa.draw.samples.javadraw.FollowURLTool;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        urlstring = null;
        temp$0 = virtualinvoke this.<CH.ifa.draw.samples.javadraw.FollowURLTool: CH.ifa.draw.framework.Drawing drawing()>();
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure findFigureInside(int,int)>(x, y);
        figure = temp$1;
        if figure != null goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: java.lang.Object getAttribute(java.lang.String)>("URL");
        temp$3 = (java.lang.String) temp$2;
        urlstring = temp$3;

     label1:
        nop;
        if urlstring != null goto label2;

        goto label3;

     label2:
        nop;
        temp$4 = this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet>;
        virtualinvoke temp$4.<javax.swing.JApplet: void showStatus(java.lang.String)>(urlstring);
        goto label4;

     label3:
        nop;
        temp$5 = this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet>;
        virtualinvoke temp$5.<javax.swing.JApplet: void showStatus(java.lang.String)>("");

     label4:
        nop;
        return;
    }

    public void mouseUp(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.samples.javadraw.FollowURLTool this;
        java.awt.event.MouseEvent e;
        int x, y;
        CH.ifa.draw.framework.Figure figure, temp$1;
        CH.ifa.draw.framework.Drawing temp$0;
        java.lang.String urlstring, temp$9;
        java.lang.Object temp$2;
        java.net.URL url, temp$3, temp$5;
        javax.swing.JApplet temp$4, temp$6, temp$8;
        java.applet.AppletContext temp$7;
        java.net.MalformedURLException exception;

        this := @this: CH.ifa.draw.samples.javadraw.FollowURLTool;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.samples.javadraw.FollowURLTool: CH.ifa.draw.framework.Drawing drawing()>();
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure findFigureInside(int,int)>(x, y);
        figure = temp$1;
        if figure == null goto label0;

        goto label1;

     label0:
        nop;
        return;

     label1:
        nop;
        temp$2 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: java.lang.Object getAttribute(java.lang.String)>("URL");
        urlstring = (java.lang.String) temp$2;
        if urlstring == null goto label2;

        goto label3;

     label2:
        nop;
        return;

     label3:
        nop;

     label4:
        nop;
        temp$3 = new java.net.URL;
        temp$4 = this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet>;
        temp$5 = virtualinvoke temp$4.<javax.swing.JApplet: java.net.URL getDocumentBase()>();
        specialinvoke temp$3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(temp$5, urlstring);
        url = temp$3;
        temp$6 = this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet>;
        temp$7 = virtualinvoke temp$6.<javax.swing.JApplet: java.applet.AppletContext getAppletContext()>();
        interfaceinvoke temp$7.<java.applet.AppletContext: void showDocument(java.net.URL)>(url);
        goto label6;

     label5:
        nop;
        exception := @caughtexception;
        temp$8 = this.<CH.ifa.draw.samples.javadraw.FollowURLTool: javax.swing.JApplet fApplet>;
        temp$9 = virtualinvoke exception.<java.net.MalformedURLException: java.lang.String toString()>();
        virtualinvoke temp$8.<javax.swing.JApplet: void showStatus(java.lang.String)>(temp$9);
        nop;
        goto label6;

     label6:
        nop;
        return;

        catch java.net.MalformedURLException from label4 to label5 with label5;
    }
}
