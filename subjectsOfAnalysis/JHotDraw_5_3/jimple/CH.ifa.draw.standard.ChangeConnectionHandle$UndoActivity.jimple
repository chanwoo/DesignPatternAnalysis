public abstract static class CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity extends CH.ifa.draw.util.UndoableAdapter
{
    private CH.ifa.draw.framework.Connector myOldConnector;

    public void <init>(CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        CH.ifa.draw.framework.DrawingView newView;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        newView := @parameter0: CH.ifa.draw.framework.DrawingView;
        specialinvoke this.<CH.ifa.draw.util.UndoableAdapter: void <init>(CH.ifa.draw.framework.DrawingView)>(newView);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void setUndoable(boolean)>(1);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void setRedoable(boolean)>(1);
        return;
    }

    public boolean undo()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        boolean temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        temp$0 = specialinvoke this.<CH.ifa.draw.util.UndoableAdapter: boolean undo()>();
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = 0;
        return temp$1;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void swapConnectors()>();
        temp$2 = 1;
        return temp$2;
    }

    public boolean redo()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        boolean temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: boolean isRedoable()>();
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = 0;
        return temp$1;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void swapConnectors()>();
        temp$2 = 1;
        return temp$2;
    }

    private final void swapConnectors()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$0;
        boolean temp$1;
        CH.ifa.draw.framework.ConnectionFigure connection;
        CH.ifa.draw.framework.Figure temp$2;
        CH.ifa.draw.framework.Connector temp$3;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: CH.ifa.draw.framework.FigureEnumeration getAffectedFigures()>();
        fe = temp$0;
        temp$1 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        connection = (CH.ifa.draw.framework.ConnectionFigure) temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: CH.ifa.draw.framework.Connector replaceConnector(CH.ifa.draw.framework.ConnectionFigure)>(connection);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void setOldConnector(CH.ifa.draw.framework.Connector)>(temp$3);
        interfaceinvoke connection.<CH.ifa.draw.framework.ConnectionFigure: void updateConnection()>();

     label1:
        nop;
        return;
    }

    protected abstract CH.ifa.draw.framework.Connector replaceConnector(CH.ifa.draw.framework.ConnectionFigure);

    public void setOldConnector(CH.ifa.draw.framework.Connector)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        CH.ifa.draw.framework.Connector newOldConnector;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        newOldConnector := @parameter0: CH.ifa.draw.framework.Connector;
        this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: CH.ifa.draw.framework.Connector myOldConnector> = newOldConnector;
        return;
    }

    public CH.ifa.draw.framework.Connector getOldConnector()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity this;
        CH.ifa.draw.framework.Connector temp$0;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity;
        temp$0 = this.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: CH.ifa.draw.framework.Connector myOldConnector>;
        return temp$0;
    }
}
