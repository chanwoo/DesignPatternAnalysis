public class CH.ifa.draw.util.CommandMenu extends javax.swing.JMenu implements java.awt.event.ActionListener, CH.ifa.draw.util.CommandListener
{
    private java.util.Vector fCommands;

    public void <init>(java.lang.String)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.lang.String name;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.util.CommandMenu;
        name := @parameter0: java.lang.String;
        specialinvoke this.<javax.swing.JMenu: void <init>(java.lang.String)>(name);
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(10);
        this.<CH.ifa.draw.util.CommandMenu: java.util.Vector fCommands> = temp$0;
        return;
    }

    public synchronized void add(CH.ifa.draw.util.Command)
    {
        CH.ifa.draw.util.CommandMenu this;
        CH.ifa.draw.util.Command command;
        javax.swing.JMenuItem temp$0;
        java.lang.String temp$1;

        this := @this: CH.ifa.draw.util.CommandMenu;
        command := @parameter0: CH.ifa.draw.util.Command;
        temp$0 = new javax.swing.JMenuItem;
        temp$1 = interfaceinvoke command.<CH.ifa.draw.util.Command: java.lang.String name()>();
        specialinvoke temp$0.<javax.swing.JMenuItem: void <init>(java.lang.String)>(temp$1);
        virtualinvoke this.<CH.ifa.draw.util.CommandMenu: void addMenuItem(CH.ifa.draw.util.Command,javax.swing.JMenuItem)>(command, temp$0);
        return;
    }

    public synchronized void add(CH.ifa.draw.util.Command, java.awt.MenuShortcut)
    {
        CH.ifa.draw.util.CommandMenu this;
        CH.ifa.draw.util.Command command;
        java.awt.MenuShortcut shortcut;
        javax.swing.JMenuItem temp$0;
        java.lang.String temp$1;
        int temp$2;

        this := @this: CH.ifa.draw.util.CommandMenu;
        command := @parameter0: CH.ifa.draw.util.Command;
        shortcut := @parameter1: java.awt.MenuShortcut;
        temp$0 = new javax.swing.JMenuItem;
        temp$1 = interfaceinvoke command.<CH.ifa.draw.util.Command: java.lang.String name()>();
        temp$2 = virtualinvoke shortcut.<java.awt.MenuShortcut: int getKey()>();
        specialinvoke temp$0.<javax.swing.JMenuItem: void <init>(java.lang.String,int)>(temp$1, temp$2);
        virtualinvoke this.<CH.ifa.draw.util.CommandMenu: void addMenuItem(CH.ifa.draw.util.Command,javax.swing.JMenuItem)>(command, temp$0);
        return;
    }

    public synchronized void addCheckItem(CH.ifa.draw.util.Command)
    {
        CH.ifa.draw.util.CommandMenu this;
        CH.ifa.draw.util.Command command;
        javax.swing.JCheckBoxMenuItem temp$0;
        java.lang.String temp$1;

        this := @this: CH.ifa.draw.util.CommandMenu;
        command := @parameter0: CH.ifa.draw.util.Command;
        temp$0 = new javax.swing.JCheckBoxMenuItem;
        temp$1 = interfaceinvoke command.<CH.ifa.draw.util.Command: java.lang.String name()>();
        specialinvoke temp$0.<javax.swing.JCheckBoxMenuItem: void <init>(java.lang.String)>(temp$1);
        virtualinvoke this.<CH.ifa.draw.util.CommandMenu: void addMenuItem(CH.ifa.draw.util.Command,javax.swing.JMenuItem)>(command, temp$0);
        return;
    }

    protected void addMenuItem(CH.ifa.draw.util.Command, javax.swing.JMenuItem)
    {
        CH.ifa.draw.util.CommandMenu this;
        CH.ifa.draw.util.Command command;
        javax.swing.JMenuItem m, temp$1;
        java.lang.String temp$0;
        java.util.Vector temp$2;

        this := @this: CH.ifa.draw.util.CommandMenu;
        command := @parameter0: CH.ifa.draw.util.Command;
        m := @parameter1: javax.swing.JMenuItem;
        temp$0 = interfaceinvoke command.<CH.ifa.draw.util.Command: java.lang.String name()>();
        virtualinvoke m.<javax.swing.JMenuItem: void setName(java.lang.String)>(temp$0);
        virtualinvoke m.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(this);
        temp$1 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(m);
        temp$2 = this.<CH.ifa.draw.util.CommandMenu: java.util.Vector fCommands>;
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(command);
        interfaceinvoke command.<CH.ifa.draw.util.Command: void addCommandListener(CH.ifa.draw.util.CommandListener)>(this);
        return;
    }

    public synchronized void remove(CH.ifa.draw.util.Command)
    {
        CH.ifa.draw.util.CommandMenu this;
        CH.ifa.draw.util.Command command;
        CH.ifa.draw.framework.JHotDrawRuntimeException temp$0;

        this := @this: CH.ifa.draw.util.CommandMenu;
        command := @parameter0: CH.ifa.draw.util.Command;
        temp$0 = new CH.ifa.draw.framework.JHotDrawRuntimeException;
        specialinvoke temp$0.<CH.ifa.draw.framework.JHotDrawRuntimeException: void <init>(java.lang.String)>("not implemented");
        throw temp$0;

        return;
    }

    public synchronized void remove(java.awt.MenuItem)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.awt.MenuItem item;
        CH.ifa.draw.framework.JHotDrawRuntimeException temp$0;

        this := @this: CH.ifa.draw.util.CommandMenu;
        item := @parameter0: java.awt.MenuItem;
        temp$0 = new CH.ifa.draw.framework.JHotDrawRuntimeException;
        specialinvoke temp$0.<CH.ifa.draw.framework.JHotDrawRuntimeException: void <init>(java.lang.String)>("not implemented");
        throw temp$0;

        return;
    }

    public synchronized void enable(java.lang.String, boolean)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.lang.String name, temp$2;
        boolean state, temp$3;
        int i, temp$0, temp$4, temp$5;
        javax.swing.JMenuItem item, temp$1;

        this := @this: CH.ifa.draw.util.CommandMenu;
        name := @parameter0: java.lang.String;
        state := @parameter1: boolean;
        i = 0;

     label0:
        nop;
        temp$0 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: int getItemCount()>();
        if i < temp$0 goto label1;

        goto label4;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: javax.swing.JMenuItem getItem(int)>(i);
        item = temp$1;
        temp$2 = virtualinvoke item.<javax.swing.JMenuItem: java.lang.String getLabel()>();
        temp$3 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(temp$2);
        if temp$3 == 0 goto label3;

        goto label2;

     label2:
        nop;
        virtualinvoke item.<javax.swing.JMenuItem: void setEnabled(boolean)>(state);
        return;

     label3:
        nop;
        nop;
        temp$4 = i;
        temp$5 = temp$4 + 1;
        i = temp$5;
        goto label0;

     label4:
        nop;
        return;
    }

    public synchronized void checkEnabled()
    {
        CH.ifa.draw.util.CommandMenu this;
        int j, i, temp$0, temp$7, temp$8, temp$9, temp$10;
        java.awt.Component temp$1, temp$5;
        boolean temp$2, temp$6;
        CH.ifa.draw.util.Command cmd;
        java.util.Vector temp$3;
        java.lang.Object temp$4;

        this := @this: CH.ifa.draw.util.CommandMenu;
        j = 0;
        i = 0;

     label0:
        nop;
        temp$0 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: int getMenuComponentCount()>();
        if i < temp$0 goto label1;

        goto label5;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: java.awt.Component getMenuComponent(int)>(i);
        temp$2 = temp$1 instanceof javax.swing.JSeparator;
        if temp$2 == 0 goto label3;

        goto label2;

     label2:
        nop;
        goto label4;

     label3:
        nop;
        temp$3 = this.<CH.ifa.draw.util.CommandMenu: java.util.Vector fCommands>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: java.lang.Object elementAt(int)>(j);
        cmd = (CH.ifa.draw.util.Command) temp$4;
        temp$5 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: java.awt.Component getMenuComponent(int)>(i);
        temp$6 = interfaceinvoke cmd.<CH.ifa.draw.util.Command: boolean isExecutable()>();
        virtualinvoke temp$5.<java.awt.Component: void setEnabled(boolean)>(temp$6);
        temp$7 = j;
        temp$8 = temp$7 + 1;
        j = temp$8;

     label4:
        nop;
        temp$9 = i;
        temp$10 = temp$9 + 1;
        i = temp$10;
        goto label0;

     label5:
        nop;
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.awt.event.ActionEvent e;
        int j, i, temp$1, temp$7, temp$8, temp$9, temp$10;
        java.lang.Object source, temp$0, temp$6;
        javax.swing.JMenuItem item, temp$2;
        java.awt.Component temp$3;
        boolean temp$4;
        CH.ifa.draw.util.Command cmd;
        java.util.Vector temp$5;

        this := @this: CH.ifa.draw.util.CommandMenu;
        e := @parameter0: java.awt.event.ActionEvent;
        j = 0;
        temp$0 = virtualinvoke e.<java.awt.event.ActionEvent: java.lang.Object getSource()>();
        source = temp$0;
        i = 0;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: int getItemCount()>();
        if i < temp$1 goto label1;

        goto label7;

     label1:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: javax.swing.JMenuItem getItem(int)>(i);
        item = temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.util.CommandMenu: java.awt.Component getMenuComponent(int)>(i);
        temp$4 = temp$3 instanceof javax.swing.JSeparator;
        if temp$4 == 0 goto label3;

        goto label2;

     label2:
        nop;
        goto label6;

     label3:
        nop;
        if source == item goto label4;

        goto label5;

     label4:
        nop;
        temp$5 = this.<CH.ifa.draw.util.CommandMenu: java.util.Vector fCommands>;
        temp$6 = virtualinvoke temp$5.<java.util.Vector: java.lang.Object elementAt(int)>(j);
        cmd = (CH.ifa.draw.util.Command) temp$6;
        interfaceinvoke cmd.<CH.ifa.draw.util.Command: void execute()>();
        goto label7;

     label5:
        nop;
        temp$7 = j;
        temp$8 = temp$7 + 1;
        j = temp$8;

     label6:
        nop;
        temp$9 = i;
        temp$10 = temp$9 + 1;
        i = temp$10;
        goto label0;

     label7:
        nop;
        return;
    }

    public void commandExecuted(java.util.EventObject)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.util.EventObject commandEvent;

        this := @this: CH.ifa.draw.util.CommandMenu;
        commandEvent := @parameter0: java.util.EventObject;
        return;
    }

    public void commandExecutable(java.util.EventObject)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.util.EventObject commandEvent;

        this := @this: CH.ifa.draw.util.CommandMenu;
        commandEvent := @parameter0: java.util.EventObject;
        return;
    }

    public void commandNotExecutable(java.util.EventObject)
    {
        CH.ifa.draw.util.CommandMenu this;
        java.util.EventObject commandEvent;

        this := @this: CH.ifa.draw.util.CommandMenu;
        commandEvent := @parameter0: java.util.EventObject;
        return;
    }
}
