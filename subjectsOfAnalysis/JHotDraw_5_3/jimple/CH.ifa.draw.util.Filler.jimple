public class CH.ifa.draw.util.Filler extends javax.swing.JPanel
{
    private int fWidth;
    private int fHeight;
    private java.awt.Color fBackground;

    public void <init>(int, int)
    {
        CH.ifa.draw.util.Filler this;
        int width, height;

        this := @this: CH.ifa.draw.util.Filler;
        width := @parameter0: int;
        height := @parameter1: int;
        specialinvoke this.<CH.ifa.draw.util.Filler: void <init>(int,int,java.awt.Color)>(width, height, null);
        return;
    }

    public void <init>(int, int, java.awt.Color)
    {
        CH.ifa.draw.util.Filler this;
        int width, height;
        java.awt.Color background;

        this := @this: CH.ifa.draw.util.Filler;
        width := @parameter0: int;
        height := @parameter1: int;
        background := @parameter2: java.awt.Color;
        specialinvoke this.<javax.swing.JPanel: void <init>()>();
        this.<CH.ifa.draw.util.Filler: int fWidth> = width;
        this.<CH.ifa.draw.util.Filler: int fHeight> = height;
        this.<CH.ifa.draw.util.Filler: java.awt.Color fBackground> = background;
        return;
    }

    public java.awt.Dimension getMinimumSize()
    {
        CH.ifa.draw.util.Filler this;
        java.awt.Dimension temp$0;
        int temp$1, temp$2;

        this := @this: CH.ifa.draw.util.Filler;
        temp$0 = new java.awt.Dimension;
        temp$1 = this.<CH.ifa.draw.util.Filler: int fWidth>;
        temp$2 = this.<CH.ifa.draw.util.Filler: int fHeight>;
        specialinvoke temp$0.<java.awt.Dimension: void <init>(int,int)>(temp$1, temp$2);
        return temp$0;
    }

    public java.awt.Dimension getPreferredSize()
    {
        CH.ifa.draw.util.Filler this;
        java.awt.Dimension temp$0;

        this := @this: CH.ifa.draw.util.Filler;
        temp$0 = virtualinvoke this.<CH.ifa.draw.util.Filler: java.awt.Dimension getMinimumSize()>();
        return temp$0;
    }

    public java.awt.Color getBackground()
    {
        CH.ifa.draw.util.Filler this;
        java.awt.Color temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.util.Filler;
        temp$0 = this.<CH.ifa.draw.util.Filler: java.awt.Color fBackground>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.util.Filler: java.awt.Color fBackground>;
        return temp$1;

     label1:
        nop;
        temp$2 = specialinvoke this.<javax.swing.JPanel: java.awt.Color getBackground()>();
        return temp$2;
    }
}
