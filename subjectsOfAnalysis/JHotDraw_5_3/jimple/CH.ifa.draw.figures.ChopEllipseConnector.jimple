public class CH.ifa.draw.figures.ChopEllipseConnector extends CH.ifa.draw.standard.ChopBoxConnector
{
    private static final long serialVersionUID;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = -3165091511154766610L;
        <CH.ifa.draw.figures.ChopEllipseConnector: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.figures.ChopEllipseConnector this;

        this := @this: CH.ifa.draw.figures.ChopEllipseConnector;
        specialinvoke this.<CH.ifa.draw.standard.ChopBoxConnector: void <init>()>();
        return;
    }

    public void <init>(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.figures.ChopEllipseConnector this;
        CH.ifa.draw.framework.Figure owner;

        this := @this: CH.ifa.draw.figures.ChopEllipseConnector;
        owner := @parameter0: CH.ifa.draw.framework.Figure;
        specialinvoke this.<CH.ifa.draw.standard.ChopBoxConnector: void <init>(CH.ifa.draw.framework.Figure)>(owner);
        return;
    }

    protected java.awt.Point chop(CH.ifa.draw.framework.Figure, java.awt.Point)
    {
        CH.ifa.draw.figures.ChopEllipseConnector this;
        CH.ifa.draw.framework.Figure target;
        java.awt.Point 'from', temp$2;
        java.awt.Rectangle r, temp$0;
        double angle, temp$1;

        this := @this: CH.ifa.draw.figures.ChopEllipseConnector;
        target := @parameter0: CH.ifa.draw.framework.Figure;
        'from' := @parameter1: java.awt.Point;
        temp$0 = interfaceinvoke target.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        r = temp$0;
        temp$1 = staticinvoke <CH.ifa.draw.util.Geom: double pointToAngle(java.awt.Rectangle,java.awt.Point)>(r, 'from');
        angle = temp$1;
        temp$2 = staticinvoke <CH.ifa.draw.util.Geom: java.awt.Point ovalAngleToPoint(java.awt.Rectangle,double)>(r, angle);
        return temp$2;
    }
}
