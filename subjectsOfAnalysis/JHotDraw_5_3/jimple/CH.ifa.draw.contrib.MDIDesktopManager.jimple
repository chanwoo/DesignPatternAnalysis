class CH.ifa.draw.contrib.MDIDesktopManager extends javax.swing.DefaultDesktopManager
{
    private CH.ifa.draw.contrib.MDIDesktopPane desktop;

    public void <init>(CH.ifa.draw.contrib.MDIDesktopPane)
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        CH.ifa.draw.contrib.MDIDesktopPane desktop;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        desktop := @parameter0: CH.ifa.draw.contrib.MDIDesktopPane;
        specialinvoke this.<javax.swing.DefaultDesktopManager: void <init>()>();
        this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop> = desktop;
        return;
    }

    public void endResizingFrame(javax.swing.JComponent)
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        javax.swing.JComponent f;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        f := @parameter0: javax.swing.JComponent;
        specialinvoke this.<javax.swing.DefaultDesktopManager: void endResizingFrame(javax.swing.JComponent)>(f);
        virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: void resizeDesktop()>();
        return;
    }

    public void endDraggingFrame(javax.swing.JComponent)
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        javax.swing.JComponent f;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        f := @parameter0: javax.swing.JComponent;
        specialinvoke this.<javax.swing.DefaultDesktopManager: void endDraggingFrame(javax.swing.JComponent)>(f);
        virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: void resizeDesktop()>();
        return;
    }

    public void setNormalSize()
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        javax.swing.JScrollPane scrollPane, temp$0;
        int x, y, temp$6, temp$9, temp$13, temp$16;
        java.awt.Insets scrollInsets, temp$1;
        java.awt.Dimension d, temp$3;
        java.awt.Rectangle temp$2;
        javax.swing.border.Border temp$4;
        double temp$5, temp$7, temp$8, temp$10, temp$11, temp$12, temp$14, temp$15, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22;
        CH.ifa.draw.contrib.MDIDesktopPane temp$23;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        temp$0 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: javax.swing.JScrollPane getScrollPane()>();
        scrollPane = temp$0;
        x = 0;
        y = 0;
        temp$1 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: java.awt.Insets getScrollPaneInsets()>();
        scrollInsets = temp$1;
        if scrollPane != null goto label0;

        goto label3;

     label0:
        nop;
        temp$2 = virtualinvoke scrollPane.<javax.swing.JScrollPane: java.awt.Rectangle getVisibleRect()>();
        temp$3 = virtualinvoke temp$2.<java.awt.Rectangle: java.awt.Dimension getSize()>();
        d = temp$3;
        temp$4 = virtualinvoke scrollPane.<javax.swing.JScrollPane: javax.swing.border.Border getBorder()>();
        if temp$4 != null goto label1;

        goto label2;

     label1:
        nop;
        temp$5 = virtualinvoke d.<java.awt.Dimension: double getWidth()>();
        temp$6 = scrollInsets.<java.awt.Insets: int left>;
        temp$7 = (double) temp$6;
        temp$8 = temp$5 - temp$7;
        temp$9 = scrollInsets.<java.awt.Insets: int right>;
        temp$10 = (double) temp$9;
        temp$11 = temp$8 - temp$10;
        temp$12 = virtualinvoke d.<java.awt.Dimension: double getHeight()>();
        temp$13 = scrollInsets.<java.awt.Insets: int top>;
        temp$14 = (double) temp$13;
        temp$15 = temp$12 - temp$14;
        temp$16 = scrollInsets.<java.awt.Insets: int bottom>;
        temp$17 = (double) temp$16;
        temp$18 = temp$15 - temp$17;
        virtualinvoke d.<java.awt.Dimension: void setSize(double,double)>(temp$11, temp$18);

     label2:
        nop;
        temp$19 = virtualinvoke d.<java.awt.Dimension: double getWidth()>();
        temp$20 = temp$19 - 20.0;
        temp$21 = virtualinvoke d.<java.awt.Dimension: double getHeight()>();
        temp$22 = temp$21 - 20.0;
        virtualinvoke d.<java.awt.Dimension: void setSize(double,double)>(temp$20, temp$22);
        temp$23 = this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        virtualinvoke temp$23.<CH.ifa.draw.contrib.MDIDesktopPane: void setAllSize(java.awt.Dimension)>(d);
        virtualinvoke scrollPane.<javax.swing.JScrollPane: void invalidate()>();
        virtualinvoke scrollPane.<javax.swing.JScrollPane: void validate()>();

     label3:
        nop;
        return;
    }

    private final java.awt.Insets getScrollPaneInsets()
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        javax.swing.JScrollPane scrollPane, temp$0, temp$2;
        java.awt.Insets temp$1, temp$4;
        javax.swing.border.Border temp$3;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        temp$0 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: javax.swing.JScrollPane getScrollPane()>();
        scrollPane = temp$0;
        if scrollPane == null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = new java.awt.Insets;
        specialinvoke temp$1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);
        return temp$1;

     label1:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: javax.swing.JScrollPane getScrollPane()>();
        temp$3 = virtualinvoke temp$2.<javax.swing.JScrollPane: javax.swing.border.Border getBorder()>();
        temp$4 = interfaceinvoke temp$3.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(scrollPane);
        return temp$4;
    }

    public javax.swing.JScrollPane getScrollPane()
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        CH.ifa.draw.contrib.MDIDesktopPane temp$0, temp$3;
        java.awt.Container temp$1, temp$4, temp$5, temp$7;
        boolean temp$2, temp$6;
        javax.swing.JViewport viewPort;
        javax.swing.JScrollPane temp$8, temp$9;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        temp$0 = this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        temp$1 = virtualinvoke temp$0.<CH.ifa.draw.contrib.MDIDesktopPane: java.awt.Container getParent()>();
        temp$2 = temp$1 instanceof javax.swing.JViewport;
        if temp$2 == 0 goto label3;

        goto label0;

     label0:
        nop;
        temp$3 = this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        temp$4 = virtualinvoke temp$3.<CH.ifa.draw.contrib.MDIDesktopPane: java.awt.Container getParent()>();
        viewPort = (javax.swing.JViewport) temp$4;
        temp$5 = virtualinvoke viewPort.<javax.swing.JViewport: java.awt.Container getParent()>();
        temp$6 = temp$5 instanceof javax.swing.JScrollPane;
        if temp$6 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$7 = virtualinvoke viewPort.<javax.swing.JViewport: java.awt.Container getParent()>();
        temp$8 = (javax.swing.JScrollPane) temp$7;
        return temp$8;

     label2:
        nop;

     label3:
        nop;
        temp$9 = null;
        return temp$9;
    }

    protected void resizeDesktop()
    {
        CH.ifa.draw.contrib.MDIDesktopManager this;
        int x, y, i, temp$4, temp$6, temp$8, temp$9, temp$11, temp$13, temp$14, temp$16, temp$18, temp$19, temp$21, temp$23, temp$24, temp$26, temp$28, temp$29, temp$31, temp$33, temp$34, temp$36, temp$38, temp$39, temp$41, temp$43, temp$44, temp$45, temp$46, temp$51, temp$54, temp$58, temp$61, temp$66, temp$68, temp$69, temp$72, temp$74, temp$75;
        javax.swing.JScrollPane scrollPane, temp$0;
        java.awt.Insets scrollInsets, temp$1;
        javax.swing.JInternalFrame[] allFrames, temp$3, temp$5, temp$10, temp$15, temp$20, temp$25, temp$30, temp$35, temp$40;
        CH.ifa.draw.contrib.MDIDesktopPane temp$2, temp$76;
        javax.swing.JInternalFrame temp$7, temp$12, temp$17, temp$22, temp$27, temp$32, temp$37, temp$42;
        java.awt.Dimension d, temp$48;
        java.awt.Rectangle temp$47;
        javax.swing.border.Border temp$49;
        double temp$50, temp$52, temp$53, temp$55, temp$56, temp$57, temp$59, temp$60, temp$62, temp$63, temp$64, temp$65, temp$67, temp$70, temp$71, temp$73;

        this := @this: CH.ifa.draw.contrib.MDIDesktopManager;
        x = 0;
        y = 0;
        temp$0 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: javax.swing.JScrollPane getScrollPane()>();
        scrollPane = temp$0;
        temp$1 = virtualinvoke this.<CH.ifa.draw.contrib.MDIDesktopManager: java.awt.Insets getScrollPaneInsets()>();
        scrollInsets = temp$1;
        if scrollPane != null goto label0;

        goto label14;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        temp$3 = virtualinvoke temp$2.<CH.ifa.draw.contrib.MDIDesktopPane: javax.swing.JInternalFrame[] getAllFrames()>();
        allFrames = temp$3;
        i = 0;

     label1:
        nop;
        temp$4 = lengthof allFrames;
        if i < temp$4 goto label2;

        goto label7;

     label2:
        nop;
        temp$5 = allFrames;
        temp$6 = i;
        temp$7 = temp$5[temp$6];
        temp$8 = virtualinvoke temp$7.<javax.swing.JInternalFrame: int getX()>();
        temp$9 = temp$8;
        temp$10 = allFrames;
        temp$11 = i;
        temp$12 = temp$10[temp$11];
        temp$13 = virtualinvoke temp$12.<javax.swing.JInternalFrame: int getWidth()>();
        temp$14 = temp$9 + temp$13;
        if temp$14 > x goto label3;

        goto label4;

     label3:
        nop;
        temp$15 = allFrames;
        temp$16 = i;
        temp$17 = temp$15[temp$16];
        temp$18 = virtualinvoke temp$17.<javax.swing.JInternalFrame: int getX()>();
        temp$19 = temp$18;
        temp$20 = allFrames;
        temp$21 = i;
        temp$22 = temp$20[temp$21];
        temp$23 = virtualinvoke temp$22.<javax.swing.JInternalFrame: int getWidth()>();
        temp$24 = temp$19 + temp$23;
        x = temp$24;

     label4:
        nop;
        temp$25 = allFrames;
        temp$26 = i;
        temp$27 = temp$25[temp$26];
        temp$28 = virtualinvoke temp$27.<javax.swing.JInternalFrame: int getY()>();
        temp$29 = temp$28;
        temp$30 = allFrames;
        temp$31 = i;
        temp$32 = temp$30[temp$31];
        temp$33 = virtualinvoke temp$32.<javax.swing.JInternalFrame: int getHeight()>();
        temp$34 = temp$29 + temp$33;
        if temp$34 > y goto label5;

        goto label6;

     label5:
        nop;
        temp$35 = allFrames;
        temp$36 = i;
        temp$37 = temp$35[temp$36];
        temp$38 = virtualinvoke temp$37.<javax.swing.JInternalFrame: int getY()>();
        temp$39 = temp$38;
        temp$40 = allFrames;
        temp$41 = i;
        temp$42 = temp$40[temp$41];
        temp$43 = virtualinvoke temp$42.<javax.swing.JInternalFrame: int getHeight()>();
        temp$44 = temp$39 + temp$43;
        y = temp$44;

     label6:
        nop;
        nop;
        temp$45 = i;
        temp$46 = temp$45 + 1;
        i = temp$46;
        goto label1;

     label7:
        nop;
        temp$47 = virtualinvoke scrollPane.<javax.swing.JScrollPane: java.awt.Rectangle getVisibleRect()>();
        temp$48 = virtualinvoke temp$47.<java.awt.Rectangle: java.awt.Dimension getSize()>();
        d = temp$48;
        temp$49 = virtualinvoke scrollPane.<javax.swing.JScrollPane: javax.swing.border.Border getBorder()>();
        if temp$49 != null goto label8;

        goto label9;

     label8:
        nop;
        temp$50 = virtualinvoke d.<java.awt.Dimension: double getWidth()>();
        temp$51 = scrollInsets.<java.awt.Insets: int left>;
        temp$52 = (double) temp$51;
        temp$53 = temp$50 - temp$52;
        temp$54 = scrollInsets.<java.awt.Insets: int right>;
        temp$55 = (double) temp$54;
        temp$56 = temp$53 - temp$55;
        temp$57 = virtualinvoke d.<java.awt.Dimension: double getHeight()>();
        temp$58 = scrollInsets.<java.awt.Insets: int top>;
        temp$59 = (double) temp$58;
        temp$60 = temp$57 - temp$59;
        temp$61 = scrollInsets.<java.awt.Insets: int bottom>;
        temp$62 = (double) temp$61;
        temp$63 = temp$60 - temp$62;
        virtualinvoke d.<java.awt.Dimension: void setSize(double,double)>(temp$56, temp$63);

     label9:
        nop;
        temp$64 = virtualinvoke d.<java.awt.Dimension: double getWidth()>();
        temp$65 = (double) x;
        temp$66 = temp$65 cmpg temp$64;
        if temp$66 > 0 goto label11;

        goto label10;

     label10:
        nop;
        temp$67 = virtualinvoke d.<java.awt.Dimension: double getWidth()>();
        temp$68 = (int) temp$67;
        temp$69 = temp$68 - 20;
        x = temp$69;

     label11:
        nop;
        temp$70 = virtualinvoke d.<java.awt.Dimension: double getHeight()>();
        temp$71 = (double) y;
        temp$72 = temp$71 cmpg temp$70;
        if temp$72 > 0 goto label13;

        goto label12;

     label12:
        nop;
        temp$73 = virtualinvoke d.<java.awt.Dimension: double getHeight()>();
        temp$74 = (int) temp$73;
        temp$75 = temp$74 - 20;
        y = temp$75;

     label13:
        nop;
        temp$76 = this.<CH.ifa.draw.contrib.MDIDesktopManager: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        virtualinvoke temp$76.<CH.ifa.draw.contrib.MDIDesktopPane: void setAllSize(int,int)>(x, y);
        virtualinvoke scrollPane.<javax.swing.JScrollPane: void invalidate()>();
        virtualinvoke scrollPane.<javax.swing.JScrollPane: void validate()>();

     label14:
        nop;
        return;
    }
}
