public abstract class CH.ifa.draw.standard.AbstractConnector extends java.lang.Object implements CH.ifa.draw.framework.Connector
{
    private CH.ifa.draw.framework.Figure fOwner;
    private static final long serialVersionUID;
    private int abstractConnectorSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = -5170007865562687545L;
        <CH.ifa.draw.standard.AbstractConnector: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.standard.AbstractConnector this;
        int temp$0;
        CH.ifa.draw.framework.Figure temp$1;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.standard.AbstractConnector: int abstractConnectorSerializedDataVersion> = temp$0;
        temp$1 = null;
        this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure fOwner> = temp$1;
        return;
    }

    public void <init>(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.Figure owner;
        int temp$0;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        owner := @parameter0: CH.ifa.draw.framework.Figure;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.standard.AbstractConnector: int abstractConnectorSerializedDataVersion> = temp$0;
        this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure fOwner> = owner;
        return;
    }

    public CH.ifa.draw.framework.Figure owner()
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.Figure temp$0;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        temp$0 = this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure fOwner>;
        return temp$0;
    }

    public java.awt.Point findStart(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.ConnectionFigure connection;
        java.awt.Point temp$0;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        connection := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.AbstractConnector: java.awt.Point findPoint(CH.ifa.draw.framework.ConnectionFigure)>(connection);
        return temp$0;
    }

    public java.awt.Point findEnd(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.ConnectionFigure connection;
        java.awt.Point temp$0;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        connection := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.AbstractConnector: java.awt.Point findPoint(CH.ifa.draw.framework.ConnectionFigure)>(connection);
        return temp$0;
    }

    protected java.awt.Point findPoint(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.ConnectionFigure connection;
        java.awt.Rectangle temp$0;
        java.awt.Point temp$1;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        connection := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.AbstractConnector: java.awt.Rectangle displayBox()>();
        temp$1 = staticinvoke <CH.ifa.draw.util.Geom: java.awt.Point center(java.awt.Rectangle)>(temp$0);
        return temp$1;
    }

    public java.awt.Rectangle displayBox()
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.framework.Figure temp$0;
        java.awt.Rectangle temp$1;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure owner()>();
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        return temp$1;
    }

    public boolean containsPoint(int, int)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        int x, y;
        CH.ifa.draw.framework.Figure temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure owner()>();
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.Figure: boolean containsPoint(int,int)>(x, y);
        return temp$1;
    }

    public void draw(java.awt.Graphics)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public void write(CH.ifa.draw.util.StorableOutput)
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.util.StorableOutput dw;
        CH.ifa.draw.framework.Figure temp$0;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        dw := @parameter0: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure fOwner>;
        virtualinvoke dw.<CH.ifa.draw.util.StorableOutput: void writeStorable(CH.ifa.draw.util.Storable)>(temp$0);
        return;
    }

    public void read(CH.ifa.draw.util.StorableInput) throws java.io.IOException
    {
        CH.ifa.draw.standard.AbstractConnector this;
        CH.ifa.draw.util.StorableInput dr;
        CH.ifa.draw.util.Storable temp$0;
        CH.ifa.draw.framework.Figure temp$1;

        this := @this: CH.ifa.draw.standard.AbstractConnector;
        dr := @parameter0: CH.ifa.draw.util.StorableInput;
        temp$0 = virtualinvoke dr.<CH.ifa.draw.util.StorableInput: CH.ifa.draw.util.Storable readStorable()>();
        temp$1 = (CH.ifa.draw.framework.Figure) temp$0;
        this.<CH.ifa.draw.standard.AbstractConnector: CH.ifa.draw.framework.Figure fOwner> = temp$1;
        return;
    }
}
