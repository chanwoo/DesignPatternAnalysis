public class CH.ifa.draw.standard.HandleTracker extends CH.ifa.draw.standard.AbstractTool
{
    private CH.ifa.draw.framework.Handle fAnchorHandle;

    public void <init>(CH.ifa.draw.framework.DrawingEditor, CH.ifa.draw.framework.Handle)
    {
        CH.ifa.draw.standard.HandleTracker this;
        CH.ifa.draw.framework.DrawingEditor newDrawingEditor;
        CH.ifa.draw.framework.Handle anchorHandle;

        this := @this: CH.ifa.draw.standard.HandleTracker;
        newDrawingEditor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        anchorHandle := @parameter1: CH.ifa.draw.framework.Handle;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void <init>(CH.ifa.draw.framework.DrawingEditor)>(newDrawingEditor);
        this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle> = anchorHandle;
        return;
    }

    public void mouseDown(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.HandleTracker this;
        java.awt.event.MouseEvent e;
        int x, y;
        CH.ifa.draw.framework.Handle temp$0;
        CH.ifa.draw.framework.DrawingView temp$1;

        this := @this: CH.ifa.draw.standard.HandleTracker;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void mouseDown(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$0 = this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle>;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)>(x, y, temp$1);
        return;
    }

    public void mouseDrag(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.HandleTracker this;
        java.awt.event.MouseEvent e;
        int x, y, temp$1, temp$2;
        CH.ifa.draw.framework.Handle temp$0;
        CH.ifa.draw.framework.DrawingView temp$3;

        this := @this: CH.ifa.draw.standard.HandleTracker;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void mouseDrag(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$0 = this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle>;
        temp$1 = this.<CH.ifa.draw.standard.HandleTracker: int fAnchorX>;
        temp$2 = this.<CH.ifa.draw.standard.HandleTracker: int fAnchorY>;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)>(x, y, temp$1, temp$2, temp$3);
        return;
    }

    public void mouseUp(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.HandleTracker this;
        java.awt.event.MouseEvent e;
        int x, y, temp$1, temp$2;
        CH.ifa.draw.framework.Handle temp$0;
        CH.ifa.draw.framework.DrawingView temp$3;

        this := @this: CH.ifa.draw.standard.HandleTracker;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void mouseUp(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$0 = this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle>;
        temp$1 = this.<CH.ifa.draw.standard.HandleTracker: int fAnchorX>;
        temp$2 = this.<CH.ifa.draw.standard.HandleTracker: int fAnchorY>;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)>(x, y, temp$1, temp$2, temp$3);
        return;
    }

    public void activate()
    {
        CH.ifa.draw.standard.HandleTracker this;

        this := @this: CH.ifa.draw.standard.HandleTracker;
        return;
    }
}
