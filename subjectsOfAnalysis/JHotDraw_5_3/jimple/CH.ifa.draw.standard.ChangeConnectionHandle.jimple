public abstract class CH.ifa.draw.standard.ChangeConnectionHandle extends CH.ifa.draw.standard.AbstractHandle
{
    private CH.ifa.draw.framework.Connector fOriginalTarget;
    private CH.ifa.draw.framework.Figure myTarget;
    private CH.ifa.draw.framework.ConnectionFigure myConnection;
    private java.awt.Point fStart;

    protected void <init>(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.Figure owner, temp$0;
        CH.ifa.draw.framework.ConnectionFigure temp$1;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        owner := @parameter0: CH.ifa.draw.framework.Figure;
        specialinvoke this.<CH.ifa.draw.standard.AbstractHandle: void <init>(CH.ifa.draw.framework.Figure)>(owner);
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$1 = (CH.ifa.draw.framework.ConnectionFigure) temp$0;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setConnection(CH.ifa.draw.framework.ConnectionFigure)>(temp$1);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setTargetFigure(CH.ifa.draw.framework.Figure)>(null);
        return;
    }

    protected abstract CH.ifa.draw.framework.Connector target();

    protected abstract void disconnect();

    protected abstract void connect(CH.ifa.draw.framework.Connector);

    protected abstract void setPoint(int, int);

    protected CH.ifa.draw.framework.Connector source()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.Connector temp$0, temp$2, temp$4, temp$6;
        CH.ifa.draw.framework.ConnectionFigure temp$1, temp$3, temp$5;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector target()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$2 = interfaceinvoke temp$1.<CH.ifa.draw.framework.ConnectionFigure: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$0 == temp$2 goto label0;

        goto label1;

     label0:
        nop;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$4 = interfaceinvoke temp$3.<CH.ifa.draw.framework.ConnectionFigure: CH.ifa.draw.framework.Connector getEndConnector()>();
        return temp$4;

     label1:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$6 = interfaceinvoke temp$5.<CH.ifa.draw.framework.ConnectionFigure: CH.ifa.draw.framework.Connector getStartConnector()>();
        return temp$6;
    }

    public void invokeStart(int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.framework.Connector temp$0, temp$5;
        java.awt.Point temp$1;
        CH.ifa.draw.util.Undoable temp$2, temp$3;
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity temp$4;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        view := @parameter2: CH.ifa.draw.framework.DrawingView;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector target()>();
        this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector fOriginalTarget> = temp$0;
        temp$1 = new java.awt.Point;
        specialinvoke temp$1.<java.awt.Point: void <init>(int,int)>(x, y);
        this.<CH.ifa.draw.standard.ChangeConnectionHandle: java.awt.Point fStart> = temp$1;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.util.Undoable createUndoActivity(CH.ifa.draw.framework.DrawingView)>(view);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setUndoActivity(CH.ifa.draw.util.Undoable)>(temp$2);
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$4 = (CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity) temp$3;
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector target()>();
        virtualinvoke temp$4.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: void setOldConnector(CH.ifa.draw.framework.Connector)>(temp$5);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void disconnect()>();
        return;
    }

    public void invokeStep(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y, anchorX, anchorY, temp$8, temp$9, temp$14, temp$15;
        CH.ifa.draw.framework.DrawingView view;
        java.awt.Point p, temp$0, temp$13;
        CH.ifa.draw.framework.Figure f, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7;
        CH.ifa.draw.framework.Drawing temp$1, temp$10;
        CH.ifa.draw.framework.Connector target, temp$11;
        java.awt.Rectangle temp$12;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = new java.awt.Point;
        specialinvoke temp$0.<java.awt.Point: void <init>(int,int)>(x, y);
        p = temp$0;
        temp$1 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure findConnectableFigure(int,int,CH.ifa.draw.framework.Drawing)>(x, y, temp$1);
        f = temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        if f != temp$3 goto label0;

        goto label5;

     label0:
        nop;
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        if temp$4 != null goto label1;

        goto label2;

     label1:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        interfaceinvoke temp$5.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(0);

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setTargetFigure(CH.ifa.draw.framework.Figure)>(f);
        temp$6 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        if temp$6 != null goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        interfaceinvoke temp$7.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(1);

     label4:
        nop;

     label5:
        nop;
        temp$8 = p.<java.awt.Point: int x>;
        temp$9 = p.<java.awt.Point: int y>;
        temp$10 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$11 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector findConnectionTarget(int,int,CH.ifa.draw.framework.Drawing)>(temp$8, temp$9, temp$10);
        target = temp$11;
        if target != null goto label6;

        goto label7;

     label6:
        nop;
        temp$12 = interfaceinvoke target.<CH.ifa.draw.framework.Connector: java.awt.Rectangle displayBox()>();
        temp$13 = staticinvoke <CH.ifa.draw.util.Geom: java.awt.Point center(java.awt.Rectangle)>(temp$12);
        p = temp$13;

     label7:
        nop;
        temp$14 = p.<java.awt.Point: int x>;
        temp$15 = p.<java.awt.Point: int y>;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setPoint(int,int)>(temp$14, temp$15);
        return;
    }

    public void invokeEnd(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y, anchorX, anchorY;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.framework.Connector target, temp$1, temp$2, oldConnector, temp$6, temp$7, temp$9;
        CH.ifa.draw.framework.Drawing temp$0;
        CH.ifa.draw.framework.ConnectionFigure temp$3, temp$13;
        CH.ifa.draw.util.Undoable temp$4, temp$11;
        CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity temp$5;
        CH.ifa.draw.framework.Figure temp$8, temp$10, temp$14, temp$15;
        CH.ifa.draw.standard.SingleFigureEnumerator temp$12;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector findConnectionTarget(int,int,CH.ifa.draw.framework.Drawing)>(x, y, temp$0);
        target = temp$1;
        if target == null goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector fOriginalTarget>;
        target = temp$2;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setPoint(int,int)>(x, y);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void connect(CH.ifa.draw.framework.Connector)>(target);
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        interfaceinvoke temp$3.<CH.ifa.draw.framework.ConnectionFigure: void updateConnection()>();
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$5 = (CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity) temp$4;
        temp$6 = virtualinvoke temp$5.<CH.ifa.draw.standard.ChangeConnectionHandle$UndoActivity: CH.ifa.draw.framework.Connector getOldConnector()>();
        oldConnector = temp$6;
        if oldConnector == null goto label4;

        goto label2;

     label2:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector target()>();
        if temp$7 == null goto label4;

        goto label3;

        goto label3;

     label3:
        nop;
        temp$8 = interfaceinvoke oldConnector.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        temp$9 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector target()>();
        temp$10 = interfaceinvoke temp$9.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        if temp$8 == temp$10 goto label4;

        goto label5;

        goto label5;

     label4:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setUndoActivity(CH.ifa.draw.util.Undoable)>(null);
        goto label6;

     label5:
        nop;
        temp$11 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$12 = new CH.ifa.draw.standard.SingleFigureEnumerator;
        temp$13 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        specialinvoke temp$12.<CH.ifa.draw.standard.SingleFigureEnumerator: void <init>(CH.ifa.draw.framework.Figure)>(temp$13);
        interfaceinvoke temp$11.<CH.ifa.draw.util.Undoable: void setAffectedFigures(CH.ifa.draw.framework.FigureEnumeration)>(temp$12);

     label6:
        nop;
        temp$14 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        if temp$14 != null goto label7;

        goto label8;

     label7:
        nop;
        temp$15 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure getTargetFigure()>();
        interfaceinvoke temp$15.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(0);
        virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: void setTargetFigure(CH.ifa.draw.framework.Figure)>(null);

     label8:
        nop;
        return;
    }

    private final CH.ifa.draw.framework.Connector findConnectionTarget(int, int, CH.ifa.draw.framework.Drawing)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Drawing drawing;
        CH.ifa.draw.framework.Figure target, temp$0, temp$3, temp$7;
        boolean temp$1, temp$4, temp$8;
        CH.ifa.draw.framework.Connector temp$2, temp$6, temp$9, temp$10;
        CH.ifa.draw.framework.ConnectionFigure temp$5;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        drawing := @parameter2: CH.ifa.draw.framework.Drawing;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure findConnectableFigure(int,int,CH.ifa.draw.framework.Drawing)>(x, y, drawing);
        target = temp$0;
        if target != null goto label0;

        goto label5;

     label0:
        nop;
        temp$1 = interfaceinvoke target.<CH.ifa.draw.framework.Figure: boolean canConnect()>();
        if temp$1 == 0 goto label5;

        goto label1;

        goto label1;

     label1:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector fOriginalTarget>;
        if target != temp$2 goto label2;

        goto label5;

        goto label2;

     label2:
        nop;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$4 = interfaceinvoke target.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(temp$3);
        if temp$4 == 0 goto label3;

        goto label5;

        goto label3;

     label3:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$6 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector source()>();
        temp$7 = interfaceinvoke temp$6.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        temp$8 = interfaceinvoke temp$5.<CH.ifa.draw.framework.ConnectionFigure: boolean canConnect(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(temp$7, target);
        if temp$8 == 0 goto label5;

        goto label4;

        goto label4;

     label4:
        nop;
        temp$9 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Connector findConnector(int,int,CH.ifa.draw.framework.Figure)>(x, y, target);
        return temp$9;

     label5:
        nop;
        temp$10 = null;
        return temp$10;
    }

    protected CH.ifa.draw.framework.Connector findConnector(int, int, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.framework.Connector temp$0;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        f := @parameter2: CH.ifa.draw.framework.Figure;
        temp$0 = interfaceinvoke f.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.Connector connectorAt(int,int)>(x, y);
        return temp$0;
    }

    public void draw(java.awt.Graphics)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        java.awt.Graphics g;
        java.awt.Rectangle r, temp$0;
        java.awt.Color temp$1, temp$6;
        int temp$2, temp$3, temp$4, temp$5, temp$7, temp$8, temp$9, temp$10;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        g := @parameter0: java.awt.Graphics;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: java.awt.Rectangle displayBox()>();
        r = temp$0;
        temp$1 = <java.awt.Color: java.awt.Color green>;
        virtualinvoke g.<java.awt.Graphics: void setColor(java.awt.Color)>(temp$1);
        temp$2 = r.<java.awt.Rectangle: int x>;
        temp$3 = r.<java.awt.Rectangle: int y>;
        temp$4 = r.<java.awt.Rectangle: int width>;
        temp$5 = r.<java.awt.Rectangle: int height>;
        virtualinvoke g.<java.awt.Graphics: void fillRect(int,int,int,int)>(temp$2, temp$3, temp$4, temp$5);
        temp$6 = <java.awt.Color: java.awt.Color black>;
        virtualinvoke g.<java.awt.Graphics: void setColor(java.awt.Color)>(temp$6);
        temp$7 = r.<java.awt.Rectangle: int x>;
        temp$8 = r.<java.awt.Rectangle: int y>;
        temp$9 = r.<java.awt.Rectangle: int width>;
        temp$10 = r.<java.awt.Rectangle: int height>;
        virtualinvoke g.<java.awt.Graphics: void drawRect(int,int,int,int)>(temp$7, temp$8, temp$9, temp$10);
        return;
    }

    private final CH.ifa.draw.framework.Figure findConnectableFigure(int, int, CH.ifa.draw.framework.Drawing)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Drawing drawing;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1, temp$4, temp$5, temp$6;
        CH.ifa.draw.framework.Figure figure, temp$2, temp$7;
        CH.ifa.draw.framework.ConnectionFigure temp$3;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        drawing := @parameter2: CH.ifa.draw.framework.Drawing;
        temp$0 = interfaceinvoke drawing.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label7;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$4 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(temp$3);
        if temp$4 == 0 goto label2;

        goto label6;

     label2:
        nop;
        temp$5 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean canConnect()>();
        if temp$5 == 0 goto label6;

        goto label3;

        goto label3;

     label3:
        nop;
        temp$6 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean containsPoint(int,int)>(x, y);
        if temp$6 == 0 goto label5;

        goto label4;

     label4:
        nop;
        return figure;

     label5:
        nop;

     label6:
        nop;
        goto label0;

     label7:
        nop;
        temp$7 = null;
        return temp$7;
    }

    protected void setConnection(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.ConnectionFigure newConnection;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        newConnection := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure myConnection> = newConnection;
        return;
    }

    protected CH.ifa.draw.framework.ConnectionFigure getConnection()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.ConnectionFigure temp$0;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        temp$0 = this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.ConnectionFigure myConnection>;
        return temp$0;
    }

    protected void setTargetFigure(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.Figure newTarget;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        newTarget := @parameter0: CH.ifa.draw.framework.Figure;
        this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure myTarget> = newTarget;
        return;
    }

    protected CH.ifa.draw.framework.Figure getTargetFigure()
    {
        CH.ifa.draw.standard.ChangeConnectionHandle this;
        CH.ifa.draw.framework.Figure temp$0;

        this := @this: CH.ifa.draw.standard.ChangeConnectionHandle;
        temp$0 = this.<CH.ifa.draw.standard.ChangeConnectionHandle: CH.ifa.draw.framework.Figure myTarget>;
        return temp$0;
    }

    protected abstract CH.ifa.draw.util.Undoable createUndoActivity(CH.ifa.draw.framework.DrawingView);
}
