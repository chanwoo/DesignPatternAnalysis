public class CH.ifa.draw.standard.SelectionTool extends CH.ifa.draw.standard.AbstractTool
{
    private CH.ifa.draw.framework.Tool fChild;

    public void <init>(CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.standard.SelectionTool this;
        CH.ifa.draw.framework.DrawingEditor newDrawingEditor;
        CH.ifa.draw.framework.Tool temp$0;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        newDrawingEditor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void <init>(CH.ifa.draw.framework.DrawingEditor)>(newDrawingEditor);
        temp$0 = null;
        this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild> = temp$0;
        return;
    }

    public void mouseDown(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.SelectionTool this;
        java.awt.event.MouseEvent e;
        int x, y, temp$3, temp$4, temp$9, temp$10;
        CH.ifa.draw.framework.Tool temp$0, temp$7, temp$12, temp$15, temp$16, temp$17;
        CH.ifa.draw.framework.DrawingView temp$1, temp$2, temp$6, temp$14;
        CH.ifa.draw.framework.Handle handle, temp$5;
        CH.ifa.draw.framework.Figure figure, temp$11;
        CH.ifa.draw.framework.Drawing temp$8;
        boolean temp$13;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        temp$0 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        return;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$1.<CH.ifa.draw.framework.DrawingView: void freezeView()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        temp$3 = virtualinvoke e.<java.awt.event.MouseEvent: int getX()>();
        temp$4 = virtualinvoke e.<java.awt.event.MouseEvent: int getY()>();
        temp$5 = interfaceinvoke temp$2.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Handle findHandle(int,int)>(temp$3, temp$4);
        handle = temp$5;
        if handle != null goto label2;

        goto label3;

     label2:
        nop;
        temp$6 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)>(temp$6, handle);
        this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild> = temp$7;
        goto label9;

     label3:
        nop;
        temp$8 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Drawing drawing()>();
        temp$9 = virtualinvoke e.<java.awt.event.MouseEvent: int getX()>();
        temp$10 = virtualinvoke e.<java.awt.event.MouseEvent: int getY()>();
        temp$11 = interfaceinvoke temp$8.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure findFigure(int,int)>(temp$9, temp$10);
        figure = temp$11;
        if figure != null goto label4;

        goto label5;

     label4:
        nop;
        temp$12 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createDragTracker(CH.ifa.draw.framework.Figure)>(figure);
        this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild> = temp$12;
        goto label8;

     label5:
        nop;
        temp$13 = virtualinvoke e.<java.awt.event.MouseEvent: boolean isShiftDown()>();
        if temp$13 == 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$14 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$14.<CH.ifa.draw.framework.DrawingView: void clearSelection()>();

     label7:
        nop;
        temp$15 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createAreaTracker()>();
        this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild> = temp$15;

     label8:
        nop;

     label9:
        nop;
        temp$16 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        interfaceinvoke temp$16.<CH.ifa.draw.framework.Tool: void mouseDown(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$17 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        interfaceinvoke temp$17.<CH.ifa.draw.framework.Tool: void activate()>();
        return;
    }

    public void mouseMove(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.SelectionTool this;
        java.awt.event.MouseEvent evt;
        int x, y, temp$0, temp$1;
        CH.ifa.draw.framework.DrawingView temp$2;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        evt := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        temp$0 = virtualinvoke evt.<java.awt.event.MouseEvent: int getX()>();
        temp$1 = virtualinvoke evt.<java.awt.event.MouseEvent: int getY()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        staticinvoke <CH.ifa.draw.contrib.DragNDropTool: void setCursor(int,int,CH.ifa.draw.framework.DrawingView)>(temp$0, temp$1, temp$2);
        return;
    }

    public void mouseDrag(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.SelectionTool this;
        java.awt.event.MouseEvent e;
        int x, y;
        CH.ifa.draw.framework.Tool temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        temp$0 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        interfaceinvoke temp$1.<CH.ifa.draw.framework.Tool: void mouseDrag(java.awt.event.MouseEvent,int,int)>(e, x, y);

     label1:
        nop;
        return;
    }

    public void mouseUp(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.SelectionTool this;
        java.awt.event.MouseEvent e;
        int x, y;
        CH.ifa.draw.framework.DrawingView temp$0;
        CH.ifa.draw.framework.Tool temp$1, temp$2, temp$3, temp$4;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.DrawingView: void unfreezeView()>();
        temp$1 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        if temp$1 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        interfaceinvoke temp$2.<CH.ifa.draw.framework.Tool: void mouseUp(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$3 = this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild>;
        interfaceinvoke temp$3.<CH.ifa.draw.framework.Tool: void deactivate()>();
        temp$4 = null;
        this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool fChild> = temp$4;

     label1:
        nop;
        return;
    }

    protected CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView, CH.ifa.draw.framework.Handle)
    {
        CH.ifa.draw.standard.SelectionTool this;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.framework.Handle handle;
        CH.ifa.draw.standard.HandleTracker temp$0;
        CH.ifa.draw.framework.DrawingEditor temp$1;
        CH.ifa.draw.util.UndoableHandle temp$2;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        view := @parameter0: CH.ifa.draw.framework.DrawingView;
        handle := @parameter1: CH.ifa.draw.framework.Handle;
        temp$0 = new CH.ifa.draw.standard.HandleTracker;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingEditor editor()>();
        temp$2 = new CH.ifa.draw.util.UndoableHandle;
        specialinvoke temp$2.<CH.ifa.draw.util.UndoableHandle: void <init>(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)>(handle, view);
        specialinvoke temp$0.<CH.ifa.draw.standard.HandleTracker: void <init>(CH.ifa.draw.framework.DrawingEditor,CH.ifa.draw.framework.Handle)>(temp$1, temp$2);
        return temp$0;
    }

    protected CH.ifa.draw.framework.Tool createDragTracker(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.SelectionTool this;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.util.UndoableTool temp$0;
        CH.ifa.draw.standard.DragTracker temp$1;
        CH.ifa.draw.framework.DrawingEditor temp$2;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        f := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = new CH.ifa.draw.util.UndoableTool;
        temp$1 = new CH.ifa.draw.standard.DragTracker;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingEditor editor()>();
        specialinvoke temp$1.<CH.ifa.draw.standard.DragTracker: void <init>(CH.ifa.draw.framework.DrawingEditor,CH.ifa.draw.framework.Figure)>(temp$2, f);
        specialinvoke temp$0.<CH.ifa.draw.util.UndoableTool: void <init>(CH.ifa.draw.framework.Tool)>(temp$1);
        return temp$0;
    }

    protected CH.ifa.draw.framework.Tool createAreaTracker()
    {
        CH.ifa.draw.standard.SelectionTool this;
        CH.ifa.draw.standard.SelectAreaTracker temp$0;
        CH.ifa.draw.framework.DrawingEditor temp$1;

        this := @this: CH.ifa.draw.standard.SelectionTool;
        temp$0 = new CH.ifa.draw.standard.SelectAreaTracker;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.DrawingEditor editor()>();
        specialinvoke temp$0.<CH.ifa.draw.standard.SelectAreaTracker: void <init>(CH.ifa.draw.framework.DrawingEditor)>(temp$1);
        return temp$0;
    }
}
