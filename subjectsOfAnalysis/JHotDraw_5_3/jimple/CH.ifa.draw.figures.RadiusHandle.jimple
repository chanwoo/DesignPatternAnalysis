class CH.ifa.draw.figures.RadiusHandle extends CH.ifa.draw.standard.AbstractHandle
{
    private static final int OFFSET;

    static void <clinit>()
    {
        int temp$0;

        temp$0 = 4;
        <CH.ifa.draw.figures.RadiusHandle: int OFFSET> = temp$0;
        return;
    }

    public void <init>(CH.ifa.draw.figures.RoundRectangleFigure)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        CH.ifa.draw.figures.RoundRectangleFigure owner;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        owner := @parameter0: CH.ifa.draw.figures.RoundRectangleFigure;
        specialinvoke this.<CH.ifa.draw.standard.AbstractHandle: void <init>(CH.ifa.draw.framework.Figure)>(owner);
        return;
    }

    public void invokeStart(int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        int x, y;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.util.Undoable temp$0, temp$1, temp$4;
        CH.ifa.draw.standard.SingleFigureEnumerator temp$2;
        CH.ifa.draw.framework.Figure temp$3, temp$6;
        CH.ifa.draw.figures.RadiusHandle$UndoActivity temp$5;
        CH.ifa.draw.figures.RoundRectangleFigure temp$7;
        java.awt.Point temp$8;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        view := @parameter2: CH.ifa.draw.framework.DrawingView;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.util.Undoable createUndoActivity(CH.ifa.draw.framework.DrawingView)>(view);
        virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: void setUndoActivity(CH.ifa.draw.util.Undoable)>(temp$0);
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$2 = new CH.ifa.draw.standard.SingleFigureEnumerator;
        temp$3 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.framework.Figure owner()>();
        specialinvoke temp$2.<CH.ifa.draw.standard.SingleFigureEnumerator: void <init>(CH.ifa.draw.framework.Figure)>(temp$3);
        interfaceinvoke temp$1.<CH.ifa.draw.util.Undoable: void setAffectedFigures(CH.ifa.draw.framework.FigureEnumeration)>(temp$2);
        temp$4 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$5 = (CH.ifa.draw.figures.RadiusHandle$UndoActivity) temp$4;
        temp$6 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$7 = (CH.ifa.draw.figures.RoundRectangleFigure) temp$6;
        temp$8 = virtualinvoke temp$7.<CH.ifa.draw.figures.RoundRectangleFigure: java.awt.Point getArc()>();
        virtualinvoke temp$5.<CH.ifa.draw.figures.RadiusHandle$UndoActivity: void setOldRadius(java.awt.Point)>(temp$8);
        return;
    }

    public void invokeStep(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        int x, y, anchorX, anchorY, dx, temp$0, dy, temp$1, rx, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, ry, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.figures.RoundRectangleFigure owner;
        CH.ifa.draw.framework.Figure temp$2;
        java.awt.Rectangle r, temp$3;
        java.awt.Point originalRadius, temp$6;
        CH.ifa.draw.util.Undoable temp$4;
        CH.ifa.draw.figures.RadiusHandle$UndoActivity temp$5;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = x - anchorX;
        dx = temp$0;
        temp$1 = y - anchorY;
        dy = temp$1;
        temp$2 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.framework.Figure owner()>();
        owner = (CH.ifa.draw.figures.RoundRectangleFigure) temp$2;
        temp$3 = virtualinvoke owner.<CH.ifa.draw.figures.RoundRectangleFigure: java.awt.Rectangle displayBox()>();
        r = temp$3;
        temp$4 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$5 = (CH.ifa.draw.figures.RadiusHandle$UndoActivity) temp$4;
        temp$6 = virtualinvoke temp$5.<CH.ifa.draw.figures.RadiusHandle$UndoActivity: java.awt.Point getOldRadius()>();
        originalRadius = temp$6;
        temp$7 = r.<java.awt.Rectangle: int width>;
        temp$8 = originalRadius.<java.awt.Point: int x>;
        temp$9 = temp$8 / 2;
        temp$10 = temp$9;
        temp$11 = temp$10 + dx;
        temp$12 = 2 * temp$11;
        temp$13 = staticinvoke <CH.ifa.draw.util.Geom: int range(int,int,int)>(0, temp$7, temp$12);
        rx = temp$13;
        temp$14 = r.<java.awt.Rectangle: int height>;
        temp$15 = originalRadius.<java.awt.Point: int y>;
        temp$16 = temp$15 / 2;
        temp$17 = temp$16;
        temp$18 = temp$17 + dy;
        temp$19 = 2 * temp$18;
        temp$20 = staticinvoke <CH.ifa.draw.util.Geom: int range(int,int,int)>(0, temp$14, temp$19);
        ry = temp$20;
        virtualinvoke owner.<CH.ifa.draw.figures.RoundRectangleFigure: void setArc(int,int)>(rx, ry);
        return;
    }

    public void invokeEnd(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        int x, y, anchorX, anchorY, temp$6, temp$7, temp$8, temp$9;
        CH.ifa.draw.framework.DrawingView view;
        java.awt.Point currentRadius, temp$2, originalRadius, temp$5;
        CH.ifa.draw.framework.Figure temp$0;
        CH.ifa.draw.figures.RoundRectangleFigure temp$1;
        CH.ifa.draw.util.Undoable temp$3;
        CH.ifa.draw.figures.RadiusHandle$UndoActivity temp$4;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$1 = (CH.ifa.draw.figures.RoundRectangleFigure) temp$0;
        temp$2 = virtualinvoke temp$1.<CH.ifa.draw.figures.RoundRectangleFigure: java.awt.Point getArc()>();
        currentRadius = temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$4 = (CH.ifa.draw.figures.RadiusHandle$UndoActivity) temp$3;
        temp$5 = virtualinvoke temp$4.<CH.ifa.draw.figures.RadiusHandle$UndoActivity: java.awt.Point getOldRadius()>();
        originalRadius = temp$5;
        temp$6 = currentRadius.<java.awt.Point: int x>;
        temp$7 = originalRadius.<java.awt.Point: int x>;
        if temp$6 == temp$7 goto label0;

        goto label2;

     label0:
        nop;
        temp$8 = currentRadius.<java.awt.Point: int y>;
        temp$9 = originalRadius.<java.awt.Point: int y>;
        if temp$8 == temp$9 goto label1;

        goto label2;

        goto label1;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: void setUndoActivity(CH.ifa.draw.util.Undoable)>(null);

     label2:
        nop;
        return;
    }

    public java.awt.Point locate()
    {
        CH.ifa.draw.figures.RadiusHandle this;
        CH.ifa.draw.figures.RoundRectangleFigure owner;
        CH.ifa.draw.framework.Figure temp$0;
        java.awt.Point radius, temp$1, temp$3;
        java.awt.Rectangle r, temp$2;
        int temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: CH.ifa.draw.framework.Figure owner()>();
        owner = (CH.ifa.draw.figures.RoundRectangleFigure) temp$0;
        temp$1 = virtualinvoke owner.<CH.ifa.draw.figures.RoundRectangleFigure: java.awt.Point getArc()>();
        radius = temp$1;
        temp$2 = virtualinvoke owner.<CH.ifa.draw.figures.RoundRectangleFigure: java.awt.Rectangle displayBox()>();
        r = temp$2;
        temp$3 = new java.awt.Point;
        temp$4 = r.<java.awt.Rectangle: int x>;
        temp$5 = radius.<java.awt.Point: int x>;
        temp$6 = temp$5 / 2;
        temp$7 = temp$4 + temp$6;
        temp$8 = temp$7 + 4;
        temp$9 = r.<java.awt.Rectangle: int y>;
        temp$10 = radius.<java.awt.Point: int y>;
        temp$11 = temp$10 / 2;
        temp$12 = temp$9 + temp$11;
        temp$13 = temp$12 + 4;
        specialinvoke temp$3.<java.awt.Point: void <init>(int,int)>(temp$8, temp$13);
        return temp$3;
    }

    public void draw(java.awt.Graphics)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        java.awt.Graphics g;
        java.awt.Rectangle r, temp$0;
        java.awt.Color temp$1, temp$6;
        int temp$2, temp$3, temp$4, temp$5, temp$7, temp$8, temp$9, temp$10;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        g := @parameter0: java.awt.Graphics;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.RadiusHandle: java.awt.Rectangle displayBox()>();
        r = temp$0;
        temp$1 = <java.awt.Color: java.awt.Color yellow>;
        virtualinvoke g.<java.awt.Graphics: void setColor(java.awt.Color)>(temp$1);
        temp$2 = r.<java.awt.Rectangle: int x>;
        temp$3 = r.<java.awt.Rectangle: int y>;
        temp$4 = r.<java.awt.Rectangle: int width>;
        temp$5 = r.<java.awt.Rectangle: int height>;
        virtualinvoke g.<java.awt.Graphics: void fillOval(int,int,int,int)>(temp$2, temp$3, temp$4, temp$5);
        temp$6 = <java.awt.Color: java.awt.Color black>;
        virtualinvoke g.<java.awt.Graphics: void setColor(java.awt.Color)>(temp$6);
        temp$7 = r.<java.awt.Rectangle: int x>;
        temp$8 = r.<java.awt.Rectangle: int y>;
        temp$9 = r.<java.awt.Rectangle: int width>;
        temp$10 = r.<java.awt.Rectangle: int height>;
        virtualinvoke g.<java.awt.Graphics: void drawOval(int,int,int,int)>(temp$7, temp$8, temp$9, temp$10);
        return;
    }

    protected CH.ifa.draw.util.Undoable createUndoActivity(CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.figures.RadiusHandle this;
        CH.ifa.draw.framework.DrawingView newView;
        CH.ifa.draw.figures.RadiusHandle$UndoActivity temp$0;

        this := @this: CH.ifa.draw.figures.RadiusHandle;
        newView := @parameter0: CH.ifa.draw.framework.DrawingView;
        temp$0 = new CH.ifa.draw.figures.RadiusHandle$UndoActivity;
        specialinvoke temp$0.<CH.ifa.draw.figures.RadiusHandle$UndoActivity: void <init>(CH.ifa.draw.framework.DrawingView)>(newView);
        return temp$0;
    }
}
