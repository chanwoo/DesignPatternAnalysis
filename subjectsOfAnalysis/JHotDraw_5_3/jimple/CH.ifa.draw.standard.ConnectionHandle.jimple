public class CH.ifa.draw.standard.ConnectionHandle extends CH.ifa.draw.standard.LocatorHandle
{
    private CH.ifa.draw.framework.ConnectionFigure myConnection;
    private CH.ifa.draw.framework.ConnectionFigure fPrototype;
    private CH.ifa.draw.framework.Figure fTarget;

    public void <init>(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Locator, CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        CH.ifa.draw.framework.Figure owner, temp$0;
        CH.ifa.draw.framework.Locator l;
        CH.ifa.draw.framework.ConnectionFigure prototype;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        owner := @parameter0: CH.ifa.draw.framework.Figure;
        l := @parameter1: CH.ifa.draw.framework.Locator;
        prototype := @parameter2: CH.ifa.draw.framework.ConnectionFigure;
        specialinvoke this.<CH.ifa.draw.standard.LocatorHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(owner, l);
        temp$0 = null;
        this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget> = temp$0;
        this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure fPrototype> = prototype;
        return;
    }

    public void invokeStart(int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y, temp$3, temp$4, temp$6, temp$7;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.framework.ConnectionFigure temp$0, temp$2, temp$5, temp$9;
        java.awt.Point p, temp$1;
        CH.ifa.draw.framework.Drawing temp$8;
        CH.ifa.draw.framework.Figure temp$10;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        view := @parameter2: CH.ifa.draw.framework.DrawingView;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure createConnection()>();
        virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: void setConnection(CH.ifa.draw.framework.ConnectionFigure)>(temp$0);
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: java.awt.Point locate()>();
        p = temp$1;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$3 = p.<java.awt.Point: int x>;
        temp$4 = p.<java.awt.Point: int y>;
        interfaceinvoke temp$2.<CH.ifa.draw.framework.ConnectionFigure: void startPoint(int,int)>(temp$3, temp$4);
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$6 = p.<java.awt.Point: int x>;
        temp$7 = p.<java.awt.Point: int y>;
        interfaceinvoke temp$5.<CH.ifa.draw.framework.ConnectionFigure: void endPoint(int,int)>(temp$6, temp$7);
        temp$8 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$9 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$10 = interfaceinvoke temp$8.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)>(temp$9);
        return;
    }

    public void invokeStep(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y, anchorX, anchorY, temp$8, temp$9, temp$15, temp$16;
        CH.ifa.draw.framework.DrawingView view;
        java.awt.Point p, temp$0, temp$13;
        CH.ifa.draw.framework.Figure f, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7;
        CH.ifa.draw.framework.Drawing temp$1, temp$10;
        CH.ifa.draw.framework.Connector target, temp$11;
        java.awt.Rectangle temp$12;
        CH.ifa.draw.framework.ConnectionFigure temp$14;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = new java.awt.Point;
        specialinvoke temp$0.<java.awt.Point: void <init>(int,int)>(x, y);
        p = temp$0;
        temp$1 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure findConnectableFigure(int,int,CH.ifa.draw.framework.Drawing)>(x, y, temp$1);
        f = temp$2;
        temp$3 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        if f != temp$3 goto label0;

        goto label5;

     label0:
        nop;
        temp$4 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        if temp$4 != null goto label1;

        goto label2;

     label1:
        nop;
        temp$5 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        interfaceinvoke temp$5.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(0);

     label2:
        nop;
        this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget> = f;
        temp$6 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        if temp$6 != null goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        interfaceinvoke temp$7.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(1);

     label4:
        nop;

     label5:
        nop;
        temp$8 = p.<java.awt.Point: int x>;
        temp$9 = p.<java.awt.Point: int y>;
        temp$10 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$11 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Connector findConnectionTarget(int,int,CH.ifa.draw.framework.Drawing)>(temp$8, temp$9, temp$10);
        target = temp$11;
        if target != null goto label6;

        goto label7;

     label6:
        nop;
        temp$12 = interfaceinvoke target.<CH.ifa.draw.framework.Connector: java.awt.Rectangle displayBox()>();
        temp$13 = staticinvoke <CH.ifa.draw.util.Geom: java.awt.Point center(java.awt.Rectangle)>(temp$12);
        p = temp$13;

     label7:
        nop;
        temp$14 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$15 = p.<java.awt.Point: int x>;
        temp$16 = p.<java.awt.Point: int y>;
        interfaceinvoke temp$14.<CH.ifa.draw.framework.ConnectionFigure: void endPoint(int,int)>(temp$15, temp$16);
        return;
    }

    public void invokeEnd(int, int, int, int, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y, anchorX, anchorY;
        CH.ifa.draw.framework.DrawingView view;
        CH.ifa.draw.framework.Connector target, temp$1, temp$3;
        CH.ifa.draw.framework.Drawing temp$0, temp$6;
        CH.ifa.draw.framework.ConnectionFigure temp$2, temp$4, temp$5, temp$7;
        CH.ifa.draw.framework.Figure temp$8, temp$9, temp$10, temp$11;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        anchorX := @parameter2: int;
        anchorY := @parameter3: int;
        view := @parameter4: CH.ifa.draw.framework.DrawingView;
        temp$0 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Connector findConnectionTarget(int,int,CH.ifa.draw.framework.Drawing)>(x, y, temp$0);
        target = temp$1;
        if target != null goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Connector startConnector()>();
        interfaceinvoke temp$2.<CH.ifa.draw.framework.ConnectionFigure: void connectStart(CH.ifa.draw.framework.Connector)>(temp$3);
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ConnectionFigure: void connectEnd(CH.ifa.draw.framework.Connector)>(target);
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        interfaceinvoke temp$5.<CH.ifa.draw.framework.ConnectionFigure: void updateConnection()>();
        goto label2;

     label1:
        nop;
        temp$6 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$8 = interfaceinvoke temp$6.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)>(temp$7);

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: void setConnection(CH.ifa.draw.framework.ConnectionFigure)>(null);
        temp$9 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        if temp$9 != null goto label3;

        goto label4;

     label3:
        nop;
        temp$10 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget>;
        interfaceinvoke temp$10.<CH.ifa.draw.framework.Figure: void connectorVisibility(boolean)>(0);
        temp$11 = null;
        this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure fTarget> = temp$11;

     label4:
        nop;
        return;
    }

    private final CH.ifa.draw.framework.Connector startConnector()
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        java.awt.Point p, temp$0;
        CH.ifa.draw.framework.Figure temp$1;
        int temp$2, temp$3;
        CH.ifa.draw.framework.Connector temp$4;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: java.awt.Point locate()>();
        p = temp$0;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$2 = p.<java.awt.Point: int x>;
        temp$3 = p.<java.awt.Point: int y>;
        temp$4 = interfaceinvoke temp$1.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.Connector connectorAt(int,int)>(temp$2, temp$3);
        return temp$4;
    }

    protected CH.ifa.draw.framework.ConnectionFigure createConnection()
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        CH.ifa.draw.framework.ConnectionFigure temp$0, temp$2;
        java.lang.Object temp$1;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        temp$0 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure fPrototype>;
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.ConnectionFigure: java.lang.Object clone()>();
        temp$2 = (CH.ifa.draw.framework.ConnectionFigure) temp$1;
        return temp$2;
    }

    protected CH.ifa.draw.framework.Connector findConnectionTarget(int, int, CH.ifa.draw.framework.Drawing)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Drawing drawing;
        CH.ifa.draw.framework.Figure target, temp$0, temp$2, temp$5;
        boolean temp$1, temp$3, temp$6;
        CH.ifa.draw.framework.ConnectionFigure temp$4;
        CH.ifa.draw.framework.Connector temp$7, temp$8;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        drawing := @parameter2: CH.ifa.draw.framework.Drawing;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure findConnectableFigure(int,int,CH.ifa.draw.framework.Drawing)>(x, y, drawing);
        target = temp$0;
        if target != null goto label0;

        goto label4;

     label0:
        nop;
        temp$1 = interfaceinvoke target.<CH.ifa.draw.framework.Figure: boolean canConnect()>();
        if temp$1 == 0 goto label4;

        goto label1;

        goto label1;

     label1:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$3 = interfaceinvoke target.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(temp$2);
        if temp$3 == 0 goto label2;

        goto label4;

        goto label2;

     label2:
        nop;
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Figure owner()>();
        temp$6 = interfaceinvoke temp$4.<CH.ifa.draw.framework.ConnectionFigure: boolean canConnect(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(temp$5, target);
        if temp$6 == 0 goto label4;

        goto label3;

        goto label3;

     label3:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.Connector findConnector(int,int,CH.ifa.draw.framework.Figure)>(x, y, target);
        return temp$7;

     label4:
        nop;
        temp$8 = null;
        return temp$8;
    }

    private final CH.ifa.draw.framework.Figure findConnectableFigure(int, int, CH.ifa.draw.framework.Drawing)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Drawing drawing;
        CH.ifa.draw.framework.FigureEnumeration k, temp$0;
        boolean temp$1, temp$4, temp$5, temp$6;
        CH.ifa.draw.framework.Figure figure, temp$2, temp$7;
        CH.ifa.draw.framework.ConnectionFigure temp$3;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        drawing := @parameter2: CH.ifa.draw.framework.Drawing;
        temp$0 = interfaceinvoke drawing.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.FigureEnumeration figuresReverse()>();
        k = temp$0;

     label0:
        nop;
        temp$1 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$1 == 0 goto label6;

        goto label1;

     label1:
        nop;
        temp$2 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        figure = temp$2;
        temp$3 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure getConnection()>();
        temp$4 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean includes(CH.ifa.draw.framework.Figure)>(temp$3);
        if temp$4 == 0 goto label2;

        goto label5;

     label2:
        nop;
        temp$5 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean canConnect()>();
        if temp$5 == 0 goto label5;

        goto label3;

        goto label3;

     label3:
        nop;
        temp$6 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: boolean containsPoint(int,int)>(x, y);
        if temp$6 == 0 goto label5;

        goto label4;

        goto label4;

     label4:
        nop;
        return figure;

     label5:
        nop;
        goto label0;

     label6:
        nop;
        temp$7 = null;
        return temp$7;
    }

    protected CH.ifa.draw.framework.Connector findConnector(int, int, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        int x, y;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.framework.Connector temp$0;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        x := @parameter0: int;
        y := @parameter1: int;
        f := @parameter2: CH.ifa.draw.framework.Figure;
        temp$0 = interfaceinvoke f.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.Connector connectorAt(int,int)>(x, y);
        return temp$0;
    }

    public void draw(java.awt.Graphics)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        java.awt.Graphics g;
        java.awt.Rectangle r, temp$0;
        java.awt.Color temp$1;
        int temp$2, temp$3, temp$4, temp$5;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        g := @parameter0: java.awt.Graphics;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.ConnectionHandle: java.awt.Rectangle displayBox()>();
        r = temp$0;
        temp$1 = <java.awt.Color: java.awt.Color blue>;
        virtualinvoke g.<java.awt.Graphics: void setColor(java.awt.Color)>(temp$1);
        temp$2 = r.<java.awt.Rectangle: int x>;
        temp$3 = r.<java.awt.Rectangle: int y>;
        temp$4 = r.<java.awt.Rectangle: int width>;
        temp$5 = r.<java.awt.Rectangle: int height>;
        virtualinvoke g.<java.awt.Graphics: void drawOval(int,int,int,int)>(temp$2, temp$3, temp$4, temp$5);
        return;
    }

    protected void setConnection(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        CH.ifa.draw.framework.ConnectionFigure newConnection;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        newConnection := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure myConnection> = newConnection;
        return;
    }

    protected CH.ifa.draw.framework.ConnectionFigure getConnection()
    {
        CH.ifa.draw.standard.ConnectionHandle this;
        CH.ifa.draw.framework.ConnectionFigure temp$0;

        this := @this: CH.ifa.draw.standard.ConnectionHandle;
        temp$0 = this.<CH.ifa.draw.standard.ConnectionHandle: CH.ifa.draw.framework.ConnectionFigure myConnection>;
        return temp$0;
    }
}
