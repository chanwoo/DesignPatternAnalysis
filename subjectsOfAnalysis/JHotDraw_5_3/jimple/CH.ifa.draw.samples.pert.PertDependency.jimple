public class CH.ifa.draw.samples.pert.PertDependency extends CH.ifa.draw.figures.LineConnection
{
    private static final long serialVersionUID;
    private int pertDependencySerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = -7959500008698525009L;
        <CH.ifa.draw.samples.pert.PertDependency: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.samples.pert.PertDependency this;
        int temp$0;
        CH.ifa.draw.figures.ArrowTip temp$1;

        this := @this: CH.ifa.draw.samples.pert.PertDependency;
        specialinvoke this.<CH.ifa.draw.figures.LineConnection: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.samples.pert.PertDependency: int pertDependencySerializedDataVersion> = temp$0;
        temp$1 = new CH.ifa.draw.figures.ArrowTip;
        specialinvoke temp$1.<CH.ifa.draw.figures.ArrowTip: void <init>()>();
        virtualinvoke this.<CH.ifa.draw.samples.pert.PertDependency: void setEndDecoration(CH.ifa.draw.figures.LineDecoration)>(temp$1);
        virtualinvoke this.<CH.ifa.draw.samples.pert.PertDependency: void setStartDecoration(CH.ifa.draw.figures.LineDecoration)>(null);
        return;
    }

    public void handleConnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.pert.PertDependency this;
        CH.ifa.draw.framework.Figure start, end;
        CH.ifa.draw.samples.pert.PertFigure source, target;
        boolean temp$0;
        java.awt.Color temp$1;

        this := @this: CH.ifa.draw.samples.pert.PertDependency;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        source = (CH.ifa.draw.samples.pert.PertFigure) start;
        target = (CH.ifa.draw.samples.pert.PertFigure) end;
        temp$0 = virtualinvoke source.<CH.ifa.draw.samples.pert.PertFigure: boolean hasCycle(CH.ifa.draw.framework.Figure)>(target);
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = <java.awt.Color: java.awt.Color red>;
        virtualinvoke this.<CH.ifa.draw.samples.pert.PertDependency: void setAttribute(java.lang.String,java.lang.Object)>("FrameColor", temp$1);
        goto label2;

     label1:
        nop;
        virtualinvoke target.<CH.ifa.draw.samples.pert.PertFigure: void addPreTask(CH.ifa.draw.samples.pert.PertFigure)>(source);
        virtualinvoke source.<CH.ifa.draw.samples.pert.PertFigure: void addPostTask(CH.ifa.draw.samples.pert.PertFigure)>(target);
        virtualinvoke source.<CH.ifa.draw.samples.pert.PertFigure: void notifyPostTasks()>();

     label2:
        nop;
        return;
    }

    public void handleDisconnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.pert.PertDependency this;
        CH.ifa.draw.framework.Figure start, end;
        CH.ifa.draw.samples.pert.PertFigure source, target;

        this := @this: CH.ifa.draw.samples.pert.PertDependency;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        source = (CH.ifa.draw.samples.pert.PertFigure) start;
        target = (CH.ifa.draw.samples.pert.PertFigure) end;
        if target != null goto label0;

        goto label1;

     label0:
        nop;
        virtualinvoke target.<CH.ifa.draw.samples.pert.PertFigure: void removePreTask(CH.ifa.draw.samples.pert.PertFigure)>(source);
        virtualinvoke target.<CH.ifa.draw.samples.pert.PertFigure: void updateDurations()>();

     label1:
        nop;
        if source != null goto label2;

        goto label3;

     label2:
        nop;
        virtualinvoke source.<CH.ifa.draw.samples.pert.PertFigure: void removePostTask(CH.ifa.draw.samples.pert.PertFigure)>(target);

     label3:
        nop;
        return;
    }

    public boolean canConnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.samples.pert.PertDependency this;
        CH.ifa.draw.framework.Figure start, end;
        boolean temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.samples.pert.PertDependency;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        temp$0 = start instanceof CH.ifa.draw.samples.pert.PertFigure;
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = end instanceof CH.ifa.draw.samples.pert.PertFigure;
        if temp$1 == 0 goto label1;

        goto label2;

        goto label2;

     label1:
        nop;
        temp$2 = 0;
        goto label3;

     label2:
        nop;
        temp$2 = 1;

     label3:
        nop;
        return temp$2;
    }

    public java.util.Vector handles()
    {
        CH.ifa.draw.samples.pert.PertDependency this;
        java.util.Vector handles, temp$0;
        CH.ifa.draw.standard.NullHandle temp$1;
        CH.ifa.draw.framework.Locator temp$2;

        this := @this: CH.ifa.draw.samples.pert.PertDependency;
        temp$0 = specialinvoke this.<CH.ifa.draw.figures.LineConnection: java.util.Vector handles()>();
        handles = temp$0;
        temp$1 = new CH.ifa.draw.standard.NullHandle;
        temp$2 = staticinvoke <CH.ifa.draw.figures.PolyLineFigure: CH.ifa.draw.framework.Locator locator(int)>(0);
        specialinvoke temp$1.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$2);
        virtualinvoke handles.<java.util.Vector: void setElementAt(java.lang.Object,int)>(temp$1, 0);
        return handles;
    }
}
