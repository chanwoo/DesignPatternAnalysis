public class CH.ifa.draw.standard.BufferedUpdateStrategy extends java.lang.Object implements CH.ifa.draw.framework.Painter
{
    private java.awt.Image fOffscreen;
    private int fImagewidth;
    private int fImageheight;
    private static final long serialVersionUID;
    private int bufferedUpdateSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = 6489532222954612824L;
        <CH.ifa.draw.standard.BufferedUpdateStrategy: long serialVersionUID> = temp$0;
        return;
    }

    public void draw(java.awt.Graphics, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.standard.BufferedUpdateStrategy this;
        java.awt.Graphics g, g2, temp$12;
        CH.ifa.draw.framework.DrawingView view;
        java.awt.Dimension d, temp$0;
        java.awt.Image temp$1, temp$8, temp$11, temp$13;
        int temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$9, temp$10;
        boolean temp$14;

        this := @this: CH.ifa.draw.standard.BufferedUpdateStrategy;
        g := @parameter0: java.awt.Graphics;
        view := @parameter1: CH.ifa.draw.framework.DrawingView;
        temp$0 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: java.awt.Dimension getSize()>();
        d = temp$0;
        temp$1 = this.<CH.ifa.draw.standard.BufferedUpdateStrategy: java.awt.Image fOffscreen>;
        if temp$1 == null goto label2;

        goto label0;

     label0:
        nop;
        temp$2 = d.<java.awt.Dimension: int width>;
        temp$3 = this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImagewidth>;
        if temp$2 != temp$3 goto label2;

        goto label1;

        goto label1;

     label1:
        nop;
        temp$4 = d.<java.awt.Dimension: int height>;
        temp$5 = this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImageheight>;
        if temp$4 != temp$5 goto label2;

        goto label3;

        goto label3;

     label2:
        nop;
        temp$6 = d.<java.awt.Dimension: int width>;
        temp$7 = d.<java.awt.Dimension: int height>;
        temp$8 = interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: java.awt.Image createImage(int,int)>(temp$6, temp$7);
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: java.awt.Image fOffscreen> = temp$8;
        temp$9 = d.<java.awt.Dimension: int width>;
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImagewidth> = temp$9;
        temp$10 = d.<java.awt.Dimension: int height>;
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImageheight> = temp$10;

     label3:
        nop;
        temp$11 = this.<CH.ifa.draw.standard.BufferedUpdateStrategy: java.awt.Image fOffscreen>;
        temp$12 = virtualinvoke temp$11.<java.awt.Image: java.awt.Graphics getGraphics()>();
        g2 = temp$12;
        interfaceinvoke view.<CH.ifa.draw.framework.DrawingView: void drawAll(java.awt.Graphics)>(g2);
        temp$13 = this.<CH.ifa.draw.standard.BufferedUpdateStrategy: java.awt.Image fOffscreen>;
        temp$14 = virtualinvoke g.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(temp$13, 0, 0, view);
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.standard.BufferedUpdateStrategy this;
        int temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.BufferedUpdateStrategy;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = -1;
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImagewidth> = temp$0;
        temp$1 = -1;
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int fImageheight> = temp$1;
        temp$2 = 1;
        this.<CH.ifa.draw.standard.BufferedUpdateStrategy: int bufferedUpdateSerializedDataVersion> = temp$2;
        return;
    }
}
