public class CH.ifa.draw.samples.javadraw.Animator extends java.lang.Thread
{
    private CH.ifa.draw.framework.DrawingView fView;
    private CH.ifa.draw.util.Animatable fAnimatable;
    private boolean fIsRunning;
    private static final int DELAY;

    static void <clinit>()
    {
        int temp$0;

        temp$0 = 62;
        <CH.ifa.draw.samples.javadraw.Animator: int DELAY> = temp$0;
        return;
    }

    public void <init>(CH.ifa.draw.util.Animatable, CH.ifa.draw.framework.DrawingView)
    {
        CH.ifa.draw.samples.javadraw.Animator this;
        CH.ifa.draw.util.Animatable animatable;
        CH.ifa.draw.framework.DrawingView view;

        this := @this: CH.ifa.draw.samples.javadraw.Animator;
        animatable := @parameter0: CH.ifa.draw.util.Animatable;
        view := @parameter1: CH.ifa.draw.framework.DrawingView;
        specialinvoke this.<java.lang.Thread: void <init>(java.lang.String)>("Animator");
        this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.framework.DrawingView fView> = view;
        this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.util.Animatable fAnimatable> = animatable;
        return;
    }

    public void start()
    {
        CH.ifa.draw.samples.javadraw.Animator this;
        boolean temp$0;

        this := @this: CH.ifa.draw.samples.javadraw.Animator;
        specialinvoke this.<java.lang.Thread: void start()>();
        temp$0 = 1;
        this.<CH.ifa.draw.samples.javadraw.Animator: boolean fIsRunning> = temp$0;
        return;
    }

    public void end()
    {
        CH.ifa.draw.samples.javadraw.Animator this;
        boolean temp$0;

        this := @this: CH.ifa.draw.samples.javadraw.Animator;
        temp$0 = 0;
        this.<CH.ifa.draw.samples.javadraw.Animator: boolean fIsRunning> = temp$0;
        return;
    }

    public void run()
    {
        CH.ifa.draw.samples.javadraw.Animator this;
        boolean temp$0;
        long tm, temp$1, temp$6, temp$7, temp$8, temp$9, temp$10;
        CH.ifa.draw.framework.DrawingView temp$2, temp$4, temp$5;
        CH.ifa.draw.util.Animatable temp$3;
        java.lang.InterruptedException e;

        this := @this: CH.ifa.draw.samples.javadraw.Animator;

     label0:
        nop;
        temp$0 = this.<CH.ifa.draw.samples.javadraw.Animator: boolean fIsRunning>;
        if temp$0 == 0 goto label5;

        goto label1;

     label1:
        nop;
        temp$1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        tm = temp$1;
        temp$2 = this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.framework.DrawingView fView>;
        interfaceinvoke temp$2.<CH.ifa.draw.framework.DrawingView: void freezeView()>();
        temp$3 = this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.util.Animatable fAnimatable>;
        interfaceinvoke temp$3.<CH.ifa.draw.util.Animatable: void animationStep()>();
        temp$4 = this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.framework.DrawingView fView>;
        interfaceinvoke temp$4.<CH.ifa.draw.framework.DrawingView: void checkDamage()>();
        temp$5 = this.<CH.ifa.draw.samples.javadraw.Animator: CH.ifa.draw.framework.DrawingView fView>;
        interfaceinvoke temp$5.<CH.ifa.draw.framework.DrawingView: void unfreezeView()>();

     label2:
        nop;
        temp$6 = tm;
        temp$7 = temp$6 + 62L;
        tm = temp$7;
        temp$8 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        temp$9 = tm - temp$8;
        temp$10 = staticinvoke <java.lang.Math: long max(long,long)>(0L, temp$9);
        staticinvoke <java.lang.Thread: void sleep(long)>(temp$10);
        goto label4;

     label3:
        nop;
        e := @caughtexception;
        nop;
        goto label5;

     label4:
        nop;
        goto label0;

     label5:
        nop;
        return;

        catch java.lang.InterruptedException from label2 to label3 with label3;
    }
}
