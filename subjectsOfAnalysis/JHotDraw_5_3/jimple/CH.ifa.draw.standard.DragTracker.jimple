public class CH.ifa.draw.standard.DragTracker extends CH.ifa.draw.standard.AbstractTool
{
    private CH.ifa.draw.framework.Figure fAnchorFigure;
    private int fLastX;
    private int fLastY;
    private boolean fMoved;

    public void <init>(CH.ifa.draw.framework.DrawingEditor, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.DragTracker this;
        CH.ifa.draw.framework.DrawingEditor newDrawingEditor;
        CH.ifa.draw.framework.Figure anchor;
        boolean temp$0;

        this := @this: CH.ifa.draw.standard.DragTracker;
        newDrawingEditor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        anchor := @parameter1: CH.ifa.draw.framework.Figure;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void <init>(CH.ifa.draw.framework.DrawingEditor)>(newDrawingEditor);
        temp$0 = 0;
        this.<CH.ifa.draw.standard.DragTracker: boolean fMoved> = temp$0;
        this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.Figure fAnchorFigure> = anchor;
        return;
    }

    public void mouseDown(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.DragTracker this;
        java.awt.event.MouseEvent e;
        int x, y;
        boolean temp$0, temp$6;
        CH.ifa.draw.framework.DrawingView temp$1, temp$4, temp$7, temp$8;
        CH.ifa.draw.framework.Figure temp$2, temp$3, temp$5, temp$9;

        this := @this: CH.ifa.draw.standard.DragTracker;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void mouseDown(java.awt.event.MouseEvent,int,int)>(e, x, y);
        this.<CH.ifa.draw.standard.DragTracker: int fLastX> = x;
        this.<CH.ifa.draw.standard.DragTracker: int fLastY> = y;
        temp$0 = virtualinvoke e.<java.awt.event.MouseEvent: boolean isShiftDown()>();
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        temp$2 = this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.Figure fAnchorFigure>;
        interfaceinvoke temp$1.<CH.ifa.draw.framework.DrawingView: void toggleSelection(CH.ifa.draw.framework.Figure)>(temp$2);
        temp$3 = null;
        this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.Figure fAnchorFigure> = temp$3;
        goto label4;

     label1:
        nop;
        temp$4 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        temp$5 = this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.Figure fAnchorFigure>;
        temp$6 = interfaceinvoke temp$4.<CH.ifa.draw.framework.DrawingView: boolean isFigureSelected(CH.ifa.draw.framework.Figure)>(temp$5);
        if temp$6 == 0 goto label2;

        goto label3;

     label2:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$7.<CH.ifa.draw.framework.DrawingView: void clearSelection()>();
        temp$8 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        temp$9 = this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.Figure fAnchorFigure>;
        interfaceinvoke temp$8.<CH.ifa.draw.framework.DrawingView: void addToSelection(CH.ifa.draw.framework.Figure)>(temp$9);

     label3:
        nop;

     label4:
        nop;
        return;
    }

    public void mouseDrag(java.awt.event.MouseEvent, int, int)
    {
        CH.ifa.draw.standard.DragTracker this;
        java.awt.event.MouseEvent e;
        int x, y, temp$0, temp$1, temp$2, temp$3, temp$4, temp$5, temp$12, temp$13, temp$14, temp$15;
        boolean temp$6, temp$7, temp$10;
        CH.ifa.draw.framework.FigureEnumeration figures, temp$9;
        CH.ifa.draw.util.Undoable temp$8;
        CH.ifa.draw.framework.Figure temp$11;

        this := @this: CH.ifa.draw.standard.DragTracker;
        e := @parameter0: java.awt.event.MouseEvent;
        x := @parameter1: int;
        y := @parameter2: int;
        specialinvoke this.<CH.ifa.draw.standard.AbstractTool: void mouseDrag(java.awt.event.MouseEvent,int,int)>(e, x, y);
        temp$0 = this.<CH.ifa.draw.standard.DragTracker: int fAnchorX>;
        temp$1 = x - temp$0;
        temp$2 = staticinvoke <java.lang.Math: int abs(int)>(temp$1);
        if temp$2 > 4 goto label2;

        goto label0;

     label0:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.DragTracker: int fAnchorY>;
        temp$4 = y - temp$3;
        temp$5 = staticinvoke <java.lang.Math: int abs(int)>(temp$4);
        if temp$5 > 4 goto label2;

        goto label1;

        goto label1;

     label1:
        nop;
        temp$6 = 0;
        goto label3;

     label2:
        nop;
        temp$6 = 1;

     label3:
        nop;
        this.<CH.ifa.draw.standard.DragTracker: boolean fMoved> = temp$6;
        temp$7 = this.<CH.ifa.draw.standard.DragTracker: boolean fMoved>;
        if temp$7 == 0 goto label8;

        goto label4;

     label4:
        nop;
        temp$8 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$9 = interfaceinvoke temp$8.<CH.ifa.draw.util.Undoable: CH.ifa.draw.framework.FigureEnumeration getAffectedFigures()>();
        figures = temp$9;

     label5:
        nop;
        temp$10 = interfaceinvoke figures.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$10 == 0 goto label7;

        goto label6;

     label6:
        nop;
        temp$11 = interfaceinvoke figures.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$12 = this.<CH.ifa.draw.standard.DragTracker: int fLastX>;
        temp$13 = x - temp$12;
        temp$14 = this.<CH.ifa.draw.standard.DragTracker: int fLastY>;
        temp$15 = y - temp$14;
        interfaceinvoke temp$11.<CH.ifa.draw.framework.Figure: void moveBy(int,int)>(temp$13, temp$15);
        goto label5;

     label7:
        nop;

     label8:
        nop;
        this.<CH.ifa.draw.standard.DragTracker: int fLastX> = x;
        this.<CH.ifa.draw.standard.DragTracker: int fLastY> = y;
        return;
    }

    public void activate()
    {
        CH.ifa.draw.standard.DragTracker this;
        CH.ifa.draw.util.Undoable temp$0, temp$1;
        CH.ifa.draw.framework.DrawingView temp$2;
        CH.ifa.draw.framework.FigureEnumeration temp$3;

        this := @this: CH.ifa.draw.standard.DragTracker;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.util.Undoable createUndoActivity()>();
        virtualinvoke this.<CH.ifa.draw.standard.DragTracker: void setUndoActivity(CH.ifa.draw.util.Undoable)>(temp$0);
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        temp$3 = interfaceinvoke temp$2.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.FigureEnumeration selectionElements()>();
        interfaceinvoke temp$1.<CH.ifa.draw.util.Undoable: void setAffectedFigures(CH.ifa.draw.framework.FigureEnumeration)>(temp$3);
        return;
    }

    public void deactivate()
    {
        CH.ifa.draw.standard.DragTracker this;
        boolean temp$0;
        CH.ifa.draw.util.Undoable temp$1;
        CH.ifa.draw.standard.DragTracker$UndoActivity temp$2;
        java.awt.Point temp$3;
        int temp$4, temp$5;

        this := @this: CH.ifa.draw.standard.DragTracker;
        temp$0 = this.<CH.ifa.draw.standard.DragTracker: boolean fMoved>;
        if temp$0 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.util.Undoable getUndoActivity()>();
        temp$2 = (CH.ifa.draw.standard.DragTracker$UndoActivity) temp$1;
        temp$3 = new java.awt.Point;
        temp$4 = this.<CH.ifa.draw.standard.DragTracker: int fLastX>;
        temp$5 = this.<CH.ifa.draw.standard.DragTracker: int fLastY>;
        specialinvoke temp$3.<java.awt.Point: void <init>(int,int)>(temp$4, temp$5);
        virtualinvoke temp$2.<CH.ifa.draw.standard.DragTracker$UndoActivity: void setBackupPoint(java.awt.Point)>(temp$3);
        goto label2;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.DragTracker: void setUndoActivity(CH.ifa.draw.util.Undoable)>(null);

     label2:
        nop;
        return;
    }

    protected CH.ifa.draw.util.Undoable createUndoActivity()
    {
        CH.ifa.draw.standard.DragTracker this;
        CH.ifa.draw.standard.DragTracker$UndoActivity temp$0;
        CH.ifa.draw.framework.DrawingView temp$1;
        java.awt.Point temp$2;
        int temp$3, temp$4;

        this := @this: CH.ifa.draw.standard.DragTracker;
        temp$0 = new CH.ifa.draw.standard.DragTracker$UndoActivity;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.DragTracker: CH.ifa.draw.framework.DrawingView view()>();
        temp$2 = new java.awt.Point;
        temp$3 = this.<CH.ifa.draw.standard.DragTracker: int fLastX>;
        temp$4 = this.<CH.ifa.draw.standard.DragTracker: int fLastY>;
        specialinvoke temp$2.<java.awt.Point: void <init>(int,int)>(temp$3, temp$4);
        specialinvoke temp$0.<CH.ifa.draw.standard.DragTracker$UndoActivity: void <init>(CH.ifa.draw.framework.DrawingView,java.awt.Point)>(temp$1, temp$2);
        return temp$0;
    }
}
