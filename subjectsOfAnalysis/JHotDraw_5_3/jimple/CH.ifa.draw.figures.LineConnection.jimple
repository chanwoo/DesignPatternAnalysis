public class CH.ifa.draw.figures.LineConnection extends CH.ifa.draw.figures.PolyLineFigure implements CH.ifa.draw.framework.ConnectionFigure
{
    protected CH.ifa.draw.framework.Connector myStartConnector;
    protected CH.ifa.draw.framework.Connector myEndConnector;
    private static final long serialVersionUID;
    private int lineConnectionSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = 6883731614578414801L;
        <CH.ifa.draw.figures.LineConnection: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.figures.LineConnection this;
        int temp$0;
        CH.ifa.draw.figures.ArrowTip temp$1, temp$2;

        this := @this: CH.ifa.draw.figures.LineConnection;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void <init>(int)>(4);
        temp$0 = 1;
        this.<CH.ifa.draw.figures.LineConnection: int lineConnectionSerializedDataVersion> = temp$0;
        temp$1 = new CH.ifa.draw.figures.ArrowTip;
        specialinvoke temp$1.<CH.ifa.draw.figures.ArrowTip: void <init>()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setStartDecoration(CH.ifa.draw.figures.LineDecoration)>(temp$1);
        temp$2 = new CH.ifa.draw.figures.ArrowTip;
        specialinvoke temp$2.<CH.ifa.draw.figures.ArrowTip: void <init>()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setEndDecoration(CH.ifa.draw.figures.LineDecoration)>(temp$2);
        return;
    }

    public boolean canConnect()
    {
        CH.ifa.draw.figures.LineConnection this;
        boolean temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = 0;
        return temp$0;
    }

    protected void basicMoveBy(int, int)
    {
        CH.ifa.draw.figures.LineConnection this;
        int dx, dy, i, temp$1, temp$2, temp$6, temp$7;
        java.util.Vector temp$0, temp$3;
        java.lang.Object temp$4;
        java.awt.Point temp$5;

        this := @this: CH.ifa.draw.figures.LineConnection;
        dx := @parameter0: int;
        dy := @parameter1: int;
        i = 1;

     label0:
        nop;
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        temp$2 = temp$1 - 1;
        if i < temp$2 goto label1;

        goto label2;

     label1:
        nop;
        temp$3 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        temp$5 = (java.awt.Point) temp$4;
        virtualinvoke temp$5.<java.awt.Point: void translate(int,int)>(dx, dy);
        nop;
        temp$6 = i;
        temp$7 = temp$6 + 1;
        i = temp$7;
        goto label0;

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void updateConnection()>();
        return;
    }

    public void connectStart(CH.ifa.draw.framework.Connector)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector newStartConnector;
        CH.ifa.draw.framework.Figure temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        newStartConnector := @parameter0: CH.ifa.draw.framework.Connector;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setStartConnector(CH.ifa.draw.framework.Connector)>(newStartConnector);
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Figure: void addFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);
        return;
    }

    public void connectEnd(CH.ifa.draw.framework.Connector)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector newEndConnector;
        CH.ifa.draw.framework.Figure temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.figures.LineConnection;
        newEndConnector := @parameter0: CH.ifa.draw.framework.Connector;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setEndConnector(CH.ifa.draw.framework.Connector)>(newEndConnector);
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Figure: void addFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        temp$2 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void handleConnect(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(temp$1, temp$2);
        return;
    }

    public void disconnectStart()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        interfaceinvoke temp$0.<CH.ifa.draw.framework.Figure: void removeFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setStartConnector(CH.ifa.draw.framework.Connector)>(null);
        return;
    }

    public void disconnectEnd()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void handleDisconnect(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(temp$0, temp$1);
        temp$2 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        interfaceinvoke temp$2.<CH.ifa.draw.framework.Figure: void removeFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void setEndConnector(CH.ifa.draw.framework.Connector)>(null);
        return;
    }

    public boolean connectsSame(CH.ifa.draw.framework.ConnectionFigure)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.ConnectionFigure other;
        CH.ifa.draw.framework.Connector temp$0, temp$1, temp$2, temp$3;
        boolean temp$4;

        this := @this: CH.ifa.draw.figures.LineConnection;
        other := @parameter0: CH.ifa.draw.framework.ConnectionFigure;
        temp$0 = interfaceinvoke other.<CH.ifa.draw.framework.ConnectionFigure: CH.ifa.draw.framework.Connector getStartConnector()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$0 == temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = interfaceinvoke other.<CH.ifa.draw.framework.ConnectionFigure: CH.ifa.draw.framework.Connector getEndConnector()>();
        temp$3 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        if temp$2 == temp$3 goto label2;

        goto label1;

        goto label2;

     label1:
        nop;
        temp$4 = 0;
        goto label3;

     label2:
        nop;
        temp$4 = 1;

     label3:
        nop;
        return temp$4;
    }

    protected void handleDisconnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure start, end;

        this := @this: CH.ifa.draw.figures.LineConnection;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        return;
    }

    protected void handleConnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure start, end;

        this := @this: CH.ifa.draw.figures.LineConnection;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        return;
    }

    public CH.ifa.draw.framework.Figure startFigure()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector temp$0, temp$1;
        CH.ifa.draw.framework.Figure temp$2, temp$3;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        temp$2 = interfaceinvoke temp$1.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        return temp$2;

     label1:
        nop;
        temp$3 = null;
        return temp$3;
    }

    public CH.ifa.draw.framework.Figure endFigure()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector temp$0, temp$1;
        CH.ifa.draw.framework.Figure temp$2, temp$3;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        temp$2 = interfaceinvoke temp$1.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        return temp$2;

     label1:
        nop;
        temp$3 = null;
        return temp$3;
    }

    protected void setStartConnector(CH.ifa.draw.framework.Connector)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector newStartConnector;

        this := @this: CH.ifa.draw.figures.LineConnection;
        newStartConnector := @parameter0: CH.ifa.draw.framework.Connector;
        this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector myStartConnector> = newStartConnector;
        return;
    }

    public CH.ifa.draw.framework.Connector getStartConnector()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector myStartConnector>;
        return temp$0;
    }

    protected void setEndConnector(CH.ifa.draw.framework.Connector)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector newEndConnector;

        this := @this: CH.ifa.draw.figures.LineConnection;
        newEndConnector := @parameter0: CH.ifa.draw.framework.Connector;
        this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector myEndConnector> = newEndConnector;
        return;
    }

    public CH.ifa.draw.framework.Connector getEndConnector()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector myEndConnector>;
        return temp$0;
    }

    public boolean canConnect(CH.ifa.draw.framework.Figure, CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure start, end;
        boolean temp$0;

        this := @this: CH.ifa.draw.figures.LineConnection;
        start := @parameter0: CH.ifa.draw.framework.Figure;
        end := @parameter1: CH.ifa.draw.framework.Figure;
        temp$0 = 1;
        return temp$0;
    }

    public void startPoint(int, int)
    {
        CH.ifa.draw.figures.LineConnection this;
        int x, y, temp$1;
        java.util.Vector temp$0, temp$2, temp$4;
        java.awt.Point temp$3, temp$5;

        this := @this: CH.ifa.draw.figures.LineConnection;
        x := @parameter0: int;
        y := @parameter1: int;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void willChange()>();
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$3 = new java.awt.Point;
        specialinvoke temp$3.<java.awt.Point: void <init>(int,int)>(x, y);
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(temp$3);
        goto label2;

     label1:
        nop;
        temp$4 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$5 = new java.awt.Point;
        specialinvoke temp$5.<java.awt.Point: void <init>(int,int)>(x, y);
        virtualinvoke temp$4.<java.util.Vector: void setElementAt(java.lang.Object,int)>(temp$5, 0);

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void changed()>();
        return;
    }

    public void endPoint(int, int)
    {
        CH.ifa.draw.figures.LineConnection this;
        int x, y, temp$1, temp$7, temp$8;
        java.util.Vector temp$0, temp$2, temp$4, temp$6;
        java.awt.Point temp$3, temp$5;

        this := @this: CH.ifa.draw.figures.LineConnection;
        x := @parameter0: int;
        y := @parameter1: int;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void willChange()>();
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if temp$1 < 2 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$3 = new java.awt.Point;
        specialinvoke temp$3.<java.awt.Point: void <init>(int,int)>(x, y);
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(temp$3);
        goto label2;

     label1:
        nop;
        temp$4 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$5 = new java.awt.Point;
        specialinvoke temp$5.<java.awt.Point: void <init>(int,int)>(x, y);
        temp$6 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$7 = virtualinvoke temp$6.<java.util.Vector: int size()>();
        temp$8 = temp$7 - 1;
        virtualinvoke temp$4.<java.util.Vector: void setElementAt(java.lang.Object,int)>(temp$5, temp$8);

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void changed()>();
        return;
    }

    public java.awt.Point startPoint()
    {
        CH.ifa.draw.figures.LineConnection this;
        java.awt.Point p, temp$2;
        java.util.Vector temp$0;
        java.lang.Object temp$1;
        int temp$3, temp$4;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.lang.Object firstElement()>();
        p = (java.awt.Point) temp$1;
        temp$2 = new java.awt.Point;
        temp$3 = p.<java.awt.Point: int x>;
        temp$4 = p.<java.awt.Point: int y>;
        specialinvoke temp$2.<java.awt.Point: void <init>(int,int)>(temp$3, temp$4);
        return temp$2;
    }

    public java.awt.Point endPoint()
    {
        CH.ifa.draw.figures.LineConnection this;
        java.awt.Point p, temp$2;
        java.util.Vector temp$0;
        java.lang.Object temp$1;
        int temp$3, temp$4;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.lang.Object lastElement()>();
        p = (java.awt.Point) temp$1;
        temp$2 = new java.awt.Point;
        temp$3 = p.<java.awt.Point: int x>;
        temp$4 = p.<java.awt.Point: int y>;
        specialinvoke temp$2.<java.awt.Point: void <init>(int,int)>(temp$3, temp$4);
        return temp$2;
    }

    public java.util.Vector handles()
    {
        CH.ifa.draw.figures.LineConnection this;
        java.util.Vector handles, temp$0, temp$1, temp$4;
        int temp$2, i, temp$5, temp$6, temp$9, temp$10;
        CH.ifa.draw.standard.ChangeConnectionStartHandle temp$3;
        CH.ifa.draw.figures.PolyLineHandle temp$7;
        CH.ifa.draw.framework.Locator temp$8;
        CH.ifa.draw.standard.ChangeConnectionEndHandle temp$11;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = new java.util.Vector;
        temp$1 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: int size()>();
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(temp$2);
        handles = temp$0;
        temp$3 = new CH.ifa.draw.standard.ChangeConnectionStartHandle;
        specialinvoke temp$3.<CH.ifa.draw.standard.ChangeConnectionStartHandle: void <init>(CH.ifa.draw.framework.Figure)>(this);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$3);
        i = 1;

     label0:
        nop;
        temp$4 = this.<CH.ifa.draw.figures.LineConnection: java.util.Vector fPoints>;
        temp$5 = virtualinvoke temp$4.<java.util.Vector: int size()>();
        temp$6 = temp$5 - 1;
        if i < temp$6 goto label1;

        goto label2;

     label1:
        nop;
        temp$7 = new CH.ifa.draw.figures.PolyLineHandle;
        temp$8 = staticinvoke <CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Locator locator(int)>(i);
        specialinvoke temp$7.<CH.ifa.draw.figures.PolyLineHandle: void <init>(CH.ifa.draw.figures.PolyLineFigure,CH.ifa.draw.framework.Locator,int)>(this, temp$8, i);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$7);
        nop;
        temp$9 = i;
        temp$10 = temp$9 + 1;
        i = temp$10;
        goto label0;

     label2:
        nop;
        temp$11 = new CH.ifa.draw.standard.ChangeConnectionEndHandle;
        specialinvoke temp$11.<CH.ifa.draw.standard.ChangeConnectionEndHandle: void <init>(CH.ifa.draw.framework.Figure)>(this);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$11);
        return handles;
    }

    public void setPointAt(java.awt.Point, int)
    {
        CH.ifa.draw.figures.LineConnection this;
        java.awt.Point p;
        int i;

        this := @this: CH.ifa.draw.figures.LineConnection;
        p := @parameter0: java.awt.Point;
        i := @parameter1: int;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void setPointAt(java.awt.Point,int)>(p, i);
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void layoutConnection()>();
        return;
    }

    public void insertPointAt(java.awt.Point, int)
    {
        CH.ifa.draw.figures.LineConnection this;
        java.awt.Point p;
        int i;

        this := @this: CH.ifa.draw.figures.LineConnection;
        p := @parameter0: java.awt.Point;
        i := @parameter1: int;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void insertPointAt(java.awt.Point,int)>(p, i);
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void layoutConnection()>();
        return;
    }

    public void removePointAt(int)
    {
        CH.ifa.draw.figures.LineConnection this;
        int i;

        this := @this: CH.ifa.draw.figures.LineConnection;
        i := @parameter0: int;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void removePointAt(int)>(i);
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void layoutConnection()>();
        return;
    }

    public void updateConnection()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Connector temp$0, temp$1, temp$5, temp$6;
        java.awt.Point start, temp$2, end, temp$7;
        int temp$3, temp$4, temp$8, temp$9;

        this := @this: CH.ifa.draw.figures.LineConnection;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$0 != null goto label0;

        goto label3;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        temp$2 = interfaceinvoke temp$1.<CH.ifa.draw.framework.Connector: java.awt.Point findStart(CH.ifa.draw.framework.ConnectionFigure)>(this);
        start = temp$2;
        if start != null goto label1;

        goto label2;

     label1:
        nop;
        temp$3 = start.<java.awt.Point: int x>;
        temp$4 = start.<java.awt.Point: int y>;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void startPoint(int,int)>(temp$3, temp$4);

     label2:
        nop;

     label3:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        if temp$5 != null goto label4;

        goto label7;

     label4:
        nop;
        temp$6 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        temp$7 = interfaceinvoke temp$6.<CH.ifa.draw.framework.Connector: java.awt.Point findEnd(CH.ifa.draw.framework.ConnectionFigure)>(this);
        end = temp$7;
        if end != null goto label5;

        goto label6;

     label5:
        nop;
        temp$8 = end.<java.awt.Point: int x>;
        temp$9 = end.<java.awt.Point: int y>;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void endPoint(int,int)>(temp$8, temp$9);

     label6:
        nop;

     label7:
        nop;
        return;
    }

    public void layoutConnection()
    {
        CH.ifa.draw.figures.LineConnection this;

        this := @this: CH.ifa.draw.figures.LineConnection;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void updateConnection()>();
        return;
    }

    public void figureChanged(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.FigureChangeEvent e;

        this := @this: CH.ifa.draw.figures.LineConnection;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void updateConnection()>();
        return;
    }

    public void figureRemoved(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.FigureChangeEvent e, temp$2;
        CH.ifa.draw.framework.FigureChangeListener temp$0, temp$1;

        this := @this: CH.ifa.draw.figures.LineConnection;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.FigureChangeListener listener()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.FigureChangeListener listener()>();
        temp$2 = new CH.ifa.draw.framework.FigureChangeEvent;
        specialinvoke temp$2.<CH.ifa.draw.framework.FigureChangeEvent: void <init>(CH.ifa.draw.framework.Figure)>(this);
        interfaceinvoke temp$1.<CH.ifa.draw.framework.FigureChangeListener: void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)>(temp$2);

     label1:
        nop;
        return;
    }

    public void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.FigureChangeEvent e;

        this := @this: CH.ifa.draw.figures.LineConnection;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        return;
    }

    public void figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.FigureChangeEvent e;

        this := @this: CH.ifa.draw.figures.LineConnection;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        return;
    }

    public void figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.FigureChangeEvent e;

        this := @this: CH.ifa.draw.figures.LineConnection;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        return;
    }

    public void release()
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.framework.Figure temp$0, temp$1, temp$3, temp$5;
        CH.ifa.draw.framework.Connector temp$2, temp$4;

        this := @this: CH.ifa.draw.figures.LineConnection;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void release()>();
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void handleDisconnect(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Figure)>(temp$0, temp$1);
        temp$2 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$2 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$3 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure startFigure()>();
        interfaceinvoke temp$3.<CH.ifa.draw.framework.Figure: void removeFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);

     label1:
        nop;
        temp$4 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        if temp$4 != null goto label2;

        goto label3;

     label2:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Figure endFigure()>();
        interfaceinvoke temp$5.<CH.ifa.draw.framework.Figure: void removeFigureChangeListener(CH.ifa.draw.framework.FigureChangeListener)>(this);

     label3:
        nop;
        return;
    }

    public void write(CH.ifa.draw.util.StorableOutput)
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.util.StorableOutput dw;
        CH.ifa.draw.framework.Connector temp$0, temp$1;

        this := @this: CH.ifa.draw.figures.LineConnection;
        dw := @parameter0: CH.ifa.draw.util.StorableOutput;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void write(CH.ifa.draw.util.StorableOutput)>(dw);
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        virtualinvoke dw.<CH.ifa.draw.util.StorableOutput: void writeStorable(CH.ifa.draw.util.Storable)>(temp$0);
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        virtualinvoke dw.<CH.ifa.draw.util.StorableOutput: void writeStorable(CH.ifa.draw.util.Storable)>(temp$1);
        return;
    }

    public void read(CH.ifa.draw.util.StorableInput) throws java.io.IOException
    {
        CH.ifa.draw.figures.LineConnection this;
        CH.ifa.draw.util.StorableInput dr;
        CH.ifa.draw.framework.Connector start, end;
        CH.ifa.draw.util.Storable temp$0, temp$1;

        this := @this: CH.ifa.draw.figures.LineConnection;
        dr := @parameter0: CH.ifa.draw.util.StorableInput;
        specialinvoke this.<CH.ifa.draw.figures.PolyLineFigure: void read(CH.ifa.draw.util.StorableInput)>(dr);
        temp$0 = virtualinvoke dr.<CH.ifa.draw.util.StorableInput: CH.ifa.draw.util.Storable readStorable()>();
        start = (CH.ifa.draw.framework.Connector) temp$0;
        if start != null goto label0;

        goto label1;

     label0:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void connectStart(CH.ifa.draw.framework.Connector)>(start);

     label1:
        nop;
        temp$1 = virtualinvoke dr.<CH.ifa.draw.util.StorableInput: CH.ifa.draw.util.Storable readStorable()>();
        end = (CH.ifa.draw.framework.Connector) temp$1;
        if end != null goto label2;

        goto label3;

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void connectEnd(CH.ifa.draw.framework.Connector)>(end);

     label3:
        nop;
        if start != null goto label4;

        goto label6;

     label4:
        nop;
        if end != null goto label5;

        goto label6;

        goto label5;

     label5:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void updateConnection()>();

     label6:
        nop;
        return;
    }

    private final void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        CH.ifa.draw.figures.LineConnection this;
        java.io.ObjectInputStream s;
        CH.ifa.draw.framework.Connector temp$0, temp$1, temp$2, temp$3;

        this := @this: CH.ifa.draw.figures.LineConnection;
        s := @parameter0: java.io.ObjectInputStream;
        virtualinvoke s.<java.io.ObjectInputStream: void defaultReadObject()>();
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void connectStart(CH.ifa.draw.framework.Connector)>(temp$1);

     label1:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        if temp$2 != null goto label2;

        goto label3;

     label2:
        nop;
        temp$3 = virtualinvoke this.<CH.ifa.draw.figures.LineConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        virtualinvoke this.<CH.ifa.draw.figures.LineConnection: void connectEnd(CH.ifa.draw.framework.Connector)>(temp$3);

     label3:
        nop;
        return;
    }
}
