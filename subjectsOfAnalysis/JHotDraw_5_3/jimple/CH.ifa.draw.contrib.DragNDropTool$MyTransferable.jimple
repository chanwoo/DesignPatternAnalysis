public class CH.ifa.draw.contrib.DragNDropTool$MyTransferable extends java.lang.Object implements java.awt.datatransfer.Transferable, java.io.Serializable
{
    java.lang.Object o;
    CH.ifa.draw.contrib.DragNDropTool this$0;

    public void <init>(CH.ifa.draw.contrib.DragNDropTool, java.lang.Object)
    {
        CH.ifa.draw.contrib.DragNDropTool$MyTransferable this;
        java.lang.Object o;
        CH.ifa.draw.contrib.DragNDropTool temp$0;

        this := @this: CH.ifa.draw.contrib.DragNDropTool$MyTransferable;
        o := @parameter1: java.lang.Object;
        temp$0 := @parameter0: CH.ifa.draw.contrib.DragNDropTool;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<CH.ifa.draw.contrib.DragNDropTool$MyTransferable: CH.ifa.draw.contrib.DragNDropTool this$0> = temp$0;
        this.<CH.ifa.draw.contrib.DragNDropTool$MyTransferable: java.lang.Object o> = o;
        return;
    }

    public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()
    {
        CH.ifa.draw.contrib.DragNDropTool$MyTransferable this;
        java.awt.datatransfer.DataFlavor[] temp$0;
        java.awt.datatransfer.DataFlavor temp$1;

        this := @this: CH.ifa.draw.contrib.DragNDropTool$MyTransferable;
        temp$0 = newarray (java.awt.datatransfer.DataFlavor)[1];
        temp$1 = <CH.ifa.draw.contrib.DragNDropTool: java.awt.datatransfer.DataFlavor VECTORFlavor>;
        temp$0[0] = temp$1;
        return temp$0;
    }

    public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
    {
        CH.ifa.draw.contrib.DragNDropTool$MyTransferable this;
        java.awt.datatransfer.DataFlavor flavor, temp$0;
        boolean temp$1, temp$2, temp$3;

        this := @this: CH.ifa.draw.contrib.DragNDropTool$MyTransferable;
        flavor := @parameter0: java.awt.datatransfer.DataFlavor;
        temp$0 = <CH.ifa.draw.contrib.DragNDropTool: java.awt.datatransfer.DataFlavor VECTORFlavor>;
        temp$1 = virtualinvoke flavor.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(temp$0);
        if temp$1 == 1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = 1;
        return temp$2;

     label1:
        nop;
        temp$3 = 0;
        return temp$3;
    }

    public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
    {
        CH.ifa.draw.contrib.DragNDropTool$MyTransferable this;
        java.awt.datatransfer.DataFlavor flavor;
        boolean temp$0;
        java.awt.datatransfer.UnsupportedFlavorException temp$1;
        java.lang.Object temp$2;

        this := @this: CH.ifa.draw.contrib.DragNDropTool$MyTransferable;
        flavor := @parameter0: java.awt.datatransfer.DataFlavor;
        temp$0 = virtualinvoke this.<CH.ifa.draw.contrib.DragNDropTool$MyTransferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)>(flavor);
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = new java.awt.datatransfer.UnsupportedFlavorException;
        specialinvoke temp$1.<java.awt.datatransfer.UnsupportedFlavorException: void <init>(java.awt.datatransfer.DataFlavor)>(flavor);
        throw temp$1;

     label1:
        nop;
        temp$2 = this.<CH.ifa.draw.contrib.DragNDropTool$MyTransferable: java.lang.Object o>;
        return temp$2;
    }
}
