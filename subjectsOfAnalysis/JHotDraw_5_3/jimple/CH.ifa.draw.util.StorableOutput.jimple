public class CH.ifa.draw.util.StorableOutput extends java.lang.Object
{
    private java.io.PrintWriter fStream;
    private java.util.Vector fMap;
    private int fIndent;

    public void <init>(java.io.OutputStream)
    {
        CH.ifa.draw.util.StorableOutput this;
        java.io.OutputStream stream;
        java.io.PrintWriter temp$0;
        java.util.Vector temp$1;
        int temp$2;

        this := @this: CH.ifa.draw.util.StorableOutput;
        stream := @parameter0: java.io.OutputStream;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = new java.io.PrintWriter;
        specialinvoke temp$0.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(stream);
        this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream> = temp$0;
        temp$1 = new java.util.Vector;
        specialinvoke temp$1.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.util.StorableOutput: java.util.Vector fMap> = temp$1;
        temp$2 = 0;
        this.<CH.ifa.draw.util.StorableOutput: int fIndent> = temp$2;
        return;
    }

    public void writeStorable(CH.ifa.draw.util.Storable)
    {
        CH.ifa.draw.util.StorableOutput this;
        CH.ifa.draw.util.Storable storable;
        java.io.PrintWriter temp$0, temp$2;
        boolean temp$1;
        java.lang.Class temp$3;
        java.lang.String temp$4;

        this := @this: CH.ifa.draw.util.StorableOutput;
        storable := @parameter0: CH.ifa.draw.util.Storable;
        if storable == null goto label0;

        goto label1;

     label0:
        nop;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(java.lang.String)>("NULL");
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.util.StorableOutput: boolean mapped(CH.ifa.draw.util.Storable)>(storable);
        if temp$1 == 0 goto label3;

        goto label2;

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void writeRef(CH.ifa.draw.util.Storable)>(storable);
        return;

     label3:
        nop;
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void incrementIndent()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void startNewLine()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void map(CH.ifa.draw.util.Storable)>(storable);
        temp$2 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        temp$3 = interfaceinvoke storable.<CH.ifa.draw.util.Storable: java.lang.Class getClass()>();
        temp$4 = virtualinvoke temp$3.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke temp$2.<java.io.PrintWriter: void print(java.lang.String)>(temp$4);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        interfaceinvoke storable.<CH.ifa.draw.util.Storable: void write(CH.ifa.draw.util.StorableOutput)>(this);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void decrementIndent()>();
        return;
    }

    public void writeInt(int)
    {
        CH.ifa.draw.util.StorableOutput this;
        int i;
        java.io.PrintWriter temp$0;

        this := @this: CH.ifa.draw.util.StorableOutput;
        i := @parameter0: int;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(int)>(i);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;
    }

    public void writeColor(java.awt.Color)
    {
        CH.ifa.draw.util.StorableOutput this;
        java.awt.Color c;
        int temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.util.StorableOutput;
        c := @parameter0: java.awt.Color;
        temp$0 = virtualinvoke c.<java.awt.Color: int getRed()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void writeInt(int)>(temp$0);
        temp$1 = virtualinvoke c.<java.awt.Color: int getGreen()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void writeInt(int)>(temp$1);
        temp$2 = virtualinvoke c.<java.awt.Color: int getBlue()>();
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void writeInt(int)>(temp$2);
        return;
    }

    public void writeDouble(double)
    {
        CH.ifa.draw.util.StorableOutput this;
        double d;
        java.io.PrintWriter temp$0;

        this := @this: CH.ifa.draw.util.StorableOutput;
        d := @parameter0: double;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(double)>(d);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;
    }

    public void writeBoolean(boolean)
    {
        CH.ifa.draw.util.StorableOutput this;
        boolean b;
        java.io.PrintWriter temp$0, temp$1;

        this := @this: CH.ifa.draw.util.StorableOutput;
        b := @parameter0: boolean;
        if b == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(int)>(1);
        goto label2;

     label1:
        nop;
        temp$1 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$1.<java.io.PrintWriter: void print(int)>(0);

     label2:
        nop;
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;
    }

    public void writeString(java.lang.String)
    {
        CH.ifa.draw.util.StorableOutput this;
        java.lang.String s;
        java.io.PrintWriter temp$0, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$14;
        int i, temp$1, temp$12, temp$13;
        char c, temp$2;

        this := @this: CH.ifa.draw.util.StorableOutput;
        s := @parameter0: java.lang.String;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(char)>(34);
        i = 0;

     label0:
        nop;
        temp$1 = virtualinvoke s.<java.lang.String: int length()>();
        if i < temp$1 goto label1;

        goto label9;

     label1:
        nop;
        temp$2 = virtualinvoke s.<java.lang.String: char charAt(int)>(i);
        c = temp$2;
        goto label7;

     label2:
        nop;
        temp$3 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$3.<java.io.PrintWriter: void print(char)>(92);
        temp$4 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$4.<java.io.PrintWriter: void print(char)>(110);
        goto label8;

     label3:
        nop;
        temp$5 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$5.<java.io.PrintWriter: void print(char)>(92);
        temp$6 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$6.<java.io.PrintWriter: void print(char)>(34);
        goto label8;

     label4:
        nop;
        temp$7 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$7.<java.io.PrintWriter: void print(char)>(92);
        temp$8 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$8.<java.io.PrintWriter: void print(char)>(92);
        goto label8;

     label5:
        nop;
        temp$9 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$9.<java.io.PrintWriter: void print(char)>(92);
        temp$10 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$10.<java.io.PrintWriter: void print(char)>(9);
        goto label8;

     label6:
        nop;
        temp$11 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$11.<java.io.PrintWriter: void print(char)>(c);
        goto label8;

     label7:
        nop;
        nop;
        lookupswitch(c)
        {
            case 9: goto label5;
            case 10: goto label2;
            case 34: goto label3;
            case 92: goto label4;
            default: goto label6;
        };

     label8:
        nop;
        nop;
        temp$12 = i;
        temp$13 = temp$12 + 1;
        i = temp$13;
        goto label0;

     label9:
        nop;
        temp$14 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$14.<java.io.PrintWriter: void print(char)>(34);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;
    }

    public void close()
    {
        CH.ifa.draw.util.StorableOutput this;
        java.io.PrintWriter temp$0;

        this := @this: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void close()>();
        return;
    }

    private final boolean mapped(CH.ifa.draw.util.Storable)
    {
        CH.ifa.draw.util.StorableOutput this;
        CH.ifa.draw.util.Storable storable;
        java.util.Vector temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.util.StorableOutput;
        storable := @parameter0: CH.ifa.draw.util.Storable;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.util.Vector fMap>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(storable);
        return temp$1;
    }

    private final void map(CH.ifa.draw.util.Storable)
    {
        CH.ifa.draw.util.StorableOutput this;
        CH.ifa.draw.util.Storable storable;
        java.util.Vector temp$0, temp$2;
        boolean temp$1;

        this := @this: CH.ifa.draw.util.StorableOutput;
        storable := @parameter0: CH.ifa.draw.util.Storable;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.util.Vector fMap>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(storable);
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.util.StorableOutput: java.util.Vector fMap>;
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(storable);

     label1:
        nop;
        return;
    }

    private final void writeRef(CH.ifa.draw.util.Storable)
    {
        CH.ifa.draw.util.StorableOutput this;
        CH.ifa.draw.util.Storable storable;
        int ref, temp$1;
        java.util.Vector temp$0;
        java.io.PrintWriter temp$2, temp$3;

        this := @this: CH.ifa.draw.util.StorableOutput;
        storable := @parameter0: CH.ifa.draw.util.Storable;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.util.Vector fMap>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int indexOf(java.lang.Object)>(storable);
        ref = temp$1;
        temp$2 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$2.<java.io.PrintWriter: void print(java.lang.String)>("REF");
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        temp$3 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$3.<java.io.PrintWriter: void print(int)>(ref);
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        return;
    }

    private final void incrementIndent()
    {
        CH.ifa.draw.util.StorableOutput this;
        int temp$0, temp$1;

        this := @this: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: int fIndent>;
        temp$1 = temp$0 + 4;
        this.<CH.ifa.draw.util.StorableOutput: int fIndent> = temp$1;
        return;
    }

    private final void decrementIndent()
    {
        CH.ifa.draw.util.StorableOutput this;
        int temp$0, temp$1, temp$2, temp$3;

        this := @this: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: int fIndent>;
        temp$1 = temp$0 - 4;
        this.<CH.ifa.draw.util.StorableOutput: int fIndent> = temp$1;
        temp$2 = this.<CH.ifa.draw.util.StorableOutput: int fIndent>;
        if temp$2 < 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$3 = 0;
        this.<CH.ifa.draw.util.StorableOutput: int fIndent> = temp$3;

     label1:
        nop;
        return;
    }

    private final void startNewLine()
    {
        CH.ifa.draw.util.StorableOutput this;
        java.io.PrintWriter temp$0;
        int i, temp$1, temp$2, temp$3;

        this := @this: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void println()>();
        i = 0;

     label0:
        nop;
        temp$1 = this.<CH.ifa.draw.util.StorableOutput: int fIndent>;
        if i < temp$1 goto label1;

        goto label2;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.util.StorableOutput: void space()>();
        nop;
        temp$2 = i;
        temp$3 = temp$2 + 1;
        i = temp$3;
        goto label0;

     label2:
        nop;
        return;
    }

    private final void space()
    {
        CH.ifa.draw.util.StorableOutput this;
        java.io.PrintWriter temp$0;

        this := @this: CH.ifa.draw.util.StorableOutput;
        temp$0 = this.<CH.ifa.draw.util.StorableOutput: java.io.PrintWriter fStream>;
        virtualinvoke temp$0.<java.io.PrintWriter: void print(char)>(32);
        return;
    }
}
