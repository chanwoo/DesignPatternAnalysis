public class CH.ifa.draw.contrib.CustomToolBar extends javax.swing.JToolBar
{
    private java.util.Vector standardTools;
    private java.util.Vector editTools;
    private java.util.Vector currentTools;
    private boolean needsUpdate;

    public void <init>()
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        java.util.Vector temp$0, temp$1, temp$2;
        boolean temp$3;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        specialinvoke this.<javax.swing.JToolBar: void <init>()>();
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools> = temp$0;
        temp$1 = new java.util.Vector;
        specialinvoke temp$1.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector editTools> = temp$1;
        temp$2 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools>;
        this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools> = temp$2;
        temp$3 = 0;
        this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate> = temp$3;
        return;
    }

    public void switchToolBar()
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        java.util.Vector temp$0, temp$1;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        temp$0 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools>;
        temp$1 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools>;
        if temp$0 == temp$1 goto label0;

        goto label1;

     label0:
        nop;
        virtualinvoke this.<CH.ifa.draw.contrib.CustomToolBar: void switchToEditTools()>();
        goto label2;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.contrib.CustomToolBar: void switchToStandardTools()>();

     label2:
        nop;
        return;
    }

    public void switchToEditTools()
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        java.util.Vector temp$0, temp$1, temp$2;
        boolean temp$3;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        temp$0 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools>;
        temp$1 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector editTools>;
        if temp$0 != temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector editTools>;
        this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools> = temp$2;
        temp$3 = 1;
        this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate> = temp$3;

     label1:
        nop;
        return;
    }

    public void switchToStandardTools()
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        java.util.Vector temp$0, temp$1, temp$2;
        boolean temp$3;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        temp$0 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools>;
        temp$1 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools>;
        if temp$0 != temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools>;
        this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools> = temp$2;
        temp$3 = 1;
        this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate> = temp$3;

     label1:
        nop;
        return;
    }

    public void activateTools()
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        boolean temp$0, temp$3, temp$7;
        javax.swing.JComponent currentTool, temp$5;
        java.util.Enumeration enum1, temp$2;
        java.util.Vector temp$1;
        java.lang.Object temp$4;
        java.awt.Component temp$6;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        temp$0 = this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate>;
        if temp$0 == 0 goto label0;

        goto label1;

     label0:
        nop;
        return;

     label1:
        nop;
        virtualinvoke this.<CH.ifa.draw.contrib.CustomToolBar: void removeAll()>();
        currentTool = null;
        temp$1 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: java.util.Enumeration elements()>();
        enum1 = temp$2;

     label2:
        nop;
        temp$3 = interfaceinvoke enum1.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$3 == 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$4 = interfaceinvoke enum1.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$5 = (javax.swing.JComponent) temp$4;
        currentTool = temp$5;
        temp$6 = specialinvoke this.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(currentTool);
        goto label2;

     label4:
        nop;
        virtualinvoke this.<CH.ifa.draw.contrib.CustomToolBar: void validate()>();
        temp$7 = 0;
        this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate> = temp$7;
        return;
    }

    public java.awt.Component add(java.awt.Component)
    {
        CH.ifa.draw.contrib.CustomToolBar this;
        java.awt.Component newTool, temp$5;
        java.util.Vector temp$0, temp$1, temp$2, temp$3;
        boolean temp$4;

        this := @this: CH.ifa.draw.contrib.CustomToolBar;
        newTool := @parameter0: java.awt.Component;
        temp$0 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector currentTools>;
        temp$1 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector editTools>;
        if temp$0 == temp$1 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector editTools>;
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(newTool);
        goto label2;

     label1:
        nop;
        temp$3 = this.<CH.ifa.draw.contrib.CustomToolBar: java.util.Vector standardTools>;
        virtualinvoke temp$3.<java.util.Vector: void addElement(java.lang.Object)>(newTool);

     label2:
        nop;
        temp$4 = 1;
        this.<CH.ifa.draw.contrib.CustomToolBar: boolean needsUpdate> = temp$4;
        temp$5 = specialinvoke this.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(newTool);
        return temp$5;
    }
}
