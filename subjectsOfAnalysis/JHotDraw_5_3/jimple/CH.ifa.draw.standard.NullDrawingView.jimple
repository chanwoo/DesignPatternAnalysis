public class CH.ifa.draw.standard.NullDrawingView extends javax.swing.JPanel implements CH.ifa.draw.framework.DrawingView
{
    private CH.ifa.draw.framework.DrawingEditor myDrawingEditor;
    private CH.ifa.draw.framework.Drawing myDrawing;
    private CH.ifa.draw.framework.Painter myUpdateStrategy;
    private CH.ifa.draw.framework.Tool myTool;
    private java.awt.Color myBackgroundColor;
    private static java.util.Hashtable drawingViewManager;

    static void <clinit>()
    {
        java.util.Hashtable temp$0;

        temp$0 = new java.util.Hashtable;
        specialinvoke temp$0.<java.util.Hashtable: void <init>()>();
        <CH.ifa.draw.standard.NullDrawingView: java.util.Hashtable drawingViewManager> = temp$0;
        return;
    }

    public void <init>(CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.DrawingEditor editor, temp$1;
        CH.ifa.draw.standard.SelectionTool temp$0;
        CH.ifa.draw.standard.StandardDrawing temp$2;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        editor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        specialinvoke this.<javax.swing.JPanel: void <init>()>();
        virtualinvoke this.<CH.ifa.draw.standard.NullDrawingView: void setEditor(CH.ifa.draw.framework.DrawingEditor)>(editor);
        temp$0 = new CH.ifa.draw.standard.SelectionTool;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.DrawingEditor editor()>();
        specialinvoke temp$0.<CH.ifa.draw.standard.SelectionTool: void <init>(CH.ifa.draw.framework.DrawingEditor)>(temp$1);
        this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Tool myTool> = temp$0;
        temp$2 = new CH.ifa.draw.standard.StandardDrawing;
        specialinvoke temp$2.<CH.ifa.draw.standard.StandardDrawing: void <init>()>();
        virtualinvoke this.<CH.ifa.draw.standard.NullDrawingView: void setDrawing(CH.ifa.draw.framework.Drawing)>(temp$2);
        return;
    }

    public void setEditor(CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.DrawingEditor editor;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        editor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.DrawingEditor myDrawingEditor> = editor;
        return;
    }

    public CH.ifa.draw.framework.Tool tool()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Tool temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Tool myTool>;
        return temp$0;
    }

    public CH.ifa.draw.framework.Drawing drawing()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Drawing temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Drawing myDrawing>;
        return temp$0;
    }

    public void setDrawing(CH.ifa.draw.framework.Drawing)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Drawing d;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        d := @parameter0: CH.ifa.draw.framework.Drawing;
        this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Drawing myDrawing> = d;
        return;
    }

    public CH.ifa.draw.framework.DrawingEditor editor()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.DrawingEditor temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.DrawingEditor myDrawingEditor>;
        return temp$0;
    }

    public CH.ifa.draw.framework.Figure add(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure figure;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        return figure;
    }

    public CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure figure;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        return figure;
    }

    public void addAll(java.util.Vector)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.util.Vector figures;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figures := @parameter0: java.util.Vector;
        return;
    }

    public java.awt.Dimension getSize()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Dimension temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.awt.Dimension;
        specialinvoke temp$0.<java.awt.Dimension: void <init>()>();
        return temp$0;
    }

    public java.awt.Dimension getMinimumSize()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Dimension temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.awt.Dimension;
        specialinvoke temp$0.<java.awt.Dimension: void <init>()>();
        return temp$0;
    }

    public java.awt.Dimension getPreferredSize()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Dimension temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.awt.Dimension;
        specialinvoke temp$0.<java.awt.Dimension: void <init>()>();
        return temp$0;
    }

    public void setDisplayUpdate(CH.ifa.draw.framework.Painter)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Painter newUpdateStrategy;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        newUpdateStrategy := @parameter0: CH.ifa.draw.framework.Painter;
        this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Painter myUpdateStrategy> = newUpdateStrategy;
        return;
    }

    public CH.ifa.draw.framework.Painter getDisplayUpdate()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Painter temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.Painter myUpdateStrategy>;
        return temp$0;
    }

    public java.util.Vector selection()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(0);
        return temp$0;
    }

    public CH.ifa.draw.framework.FigureEnumeration selectionElements()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.FigureEnumeration temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = staticinvoke <CH.ifa.draw.standard.FigureEnumerator: CH.ifa.draw.framework.FigureEnumeration getEmptyEnumeration()>();
        return temp$0;
    }

    public java.util.Vector selectionZOrdered()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(0);
        return temp$0;
    }

    public int selectionCount()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        int temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = 0;
        return temp$0;
    }

    public boolean isFigureSelected(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure checkFigure;
        boolean temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        checkFigure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = 0;
        return temp$0;
    }

    public void addToSelection(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure figure;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        return;
    }

    public void addToSelectionAll(java.util.Vector)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.util.Vector figures;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figures := @parameter0: java.util.Vector;
        return;
    }

    public void addToSelectionAll(CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.FigureEnumeration fe;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;
        return;
    }

    public void removeFromSelection(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure figure;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        return;
    }

    public void toggleSelection(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure figure;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        return;
    }

    public void clearSelection()
    {
        CH.ifa.draw.standard.NullDrawingView this;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        return;
    }

    public CH.ifa.draw.framework.FigureSelection getFigureSelection()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.standard.StandardFigureSelection temp$0;
        CH.ifa.draw.framework.FigureEnumeration temp$1;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new CH.ifa.draw.standard.StandardFigureSelection;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.NullDrawingView: CH.ifa.draw.framework.FigureEnumeration selectionElements()>();
        specialinvoke temp$0.<CH.ifa.draw.standard.StandardFigureSelection: void <init>(CH.ifa.draw.framework.FigureEnumeration,int)>(temp$1, 0);
        return temp$0;
    }

    public CH.ifa.draw.framework.Handle findHandle(int, int)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        int x, y;
        CH.ifa.draw.framework.Handle temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        x := @parameter0: int;
        y := @parameter1: int;
        temp$0 = null;
        return temp$0;
    }

    public java.awt.Point lastClick()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Point temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = new java.awt.Point;
        specialinvoke temp$0.<java.awt.Point: void <init>()>();
        return temp$0;
    }

    public void setConstrainer(CH.ifa.draw.framework.PointConstrainer)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.PointConstrainer p;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        p := @parameter0: CH.ifa.draw.framework.PointConstrainer;
        return;
    }

    public CH.ifa.draw.framework.PointConstrainer getConstrainer()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.PointConstrainer temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = null;
        return temp$0;
    }

    public void checkDamage()
    {
        CH.ifa.draw.standard.NullDrawingView this;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        return;
    }

    public void repairDamage()
    {
        CH.ifa.draw.standard.NullDrawingView this;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        return;
    }

    public void paint(java.awt.Graphics)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public java.awt.Image createImage(int, int)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        int width, height;
        java.awt.Image temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        width := @parameter0: int;
        height := @parameter1: int;
        temp$0 = null;
        return temp$0;
    }

    public java.awt.Graphics getGraphics()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = null;
        return temp$0;
    }

    public java.awt.Color getBackground()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Color temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = this.<CH.ifa.draw.standard.NullDrawingView: java.awt.Color myBackgroundColor>;
        return temp$0;
    }

    public void setBackground(java.awt.Color)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Color c;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        c := @parameter0: java.awt.Color;
        this.<CH.ifa.draw.standard.NullDrawingView: java.awt.Color myBackgroundColor> = c;
        return;
    }

    public void drawAll(java.awt.Graphics)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public void draw(java.awt.Graphics, CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;
        CH.ifa.draw.framework.FigureEnumeration fe;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        fe := @parameter1: CH.ifa.draw.framework.FigureEnumeration;
        return;
    }

    public void drawHandles(java.awt.Graphics)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public void drawDrawing(java.awt.Graphics)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public void drawBackground(java.awt.Graphics)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Graphics g;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        g := @parameter0: java.awt.Graphics;
        return;
    }

    public void setCursor(java.awt.Cursor)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        java.awt.Cursor c;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        c := @parameter0: java.awt.Cursor;
        return;
    }

    public void freezeView()
    {
        CH.ifa.draw.standard.NullDrawingView this;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        return;
    }

    public void unfreezeView()
    {
        CH.ifa.draw.standard.NullDrawingView this;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        return;
    }

    public void addFigureSelectionListener(CH.ifa.draw.framework.FigureSelectionListener)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.FigureSelectionListener fsl;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        fsl := @parameter0: CH.ifa.draw.framework.FigureSelectionListener;
        return;
    }

    public void removeFigureSelectionListener(CH.ifa.draw.framework.FigureSelectionListener)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.FigureSelectionListener fsl;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        fsl := @parameter0: CH.ifa.draw.framework.FigureSelectionListener;
        return;
    }

    public java.util.Vector getConnectionFigures(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.Figure inFigure;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        inFigure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(0);
        return temp$0;
    }

    public CH.ifa.draw.framework.FigureEnumeration insertFigures(CH.ifa.draw.framework.FigureEnumeration, int, int, boolean)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.FigureEnumeration inFigures, temp$0;
        int dx, dy;
        boolean bCheck;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        inFigures := @parameter0: CH.ifa.draw.framework.FigureEnumeration;
        dx := @parameter1: int;
        dy := @parameter2: int;
        bCheck := @parameter3: boolean;
        temp$0 = staticinvoke <CH.ifa.draw.standard.FigureEnumerator: CH.ifa.draw.framework.FigureEnumeration getEmptyEnumeration()>();
        return temp$0;
    }

    public void drawingInvalidated(CH.ifa.draw.framework.DrawingChangeEvent)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.DrawingChangeEvent e;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        e := @parameter0: CH.ifa.draw.framework.DrawingChangeEvent;
        return;
    }

    public void drawingRequestUpdate(CH.ifa.draw.framework.DrawingChangeEvent)
    {
        CH.ifa.draw.standard.NullDrawingView this;
        CH.ifa.draw.framework.DrawingChangeEvent e;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        e := @parameter0: CH.ifa.draw.framework.DrawingChangeEvent;
        return;
    }

    public boolean isInteractive()
    {
        CH.ifa.draw.standard.NullDrawingView this;
        boolean temp$0;

        this := @this: CH.ifa.draw.standard.NullDrawingView;
        temp$0 = 0;
        return temp$0;
    }

    public static synchronized CH.ifa.draw.framework.DrawingView getManagedDrawingView(CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.framework.DrawingEditor editor;
        java.util.Hashtable temp$0, temp$2, temp$6;
        boolean temp$1;
        java.lang.Object temp$3, temp$7;
        CH.ifa.draw.framework.DrawingView temp$4, newDrawingView;
        CH.ifa.draw.standard.NullDrawingView temp$5;

        editor := @parameter0: CH.ifa.draw.framework.DrawingEditor;
        temp$0 = <CH.ifa.draw.standard.NullDrawingView: java.util.Hashtable drawingViewManager>;
        temp$1 = virtualinvoke temp$0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(editor);
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = <CH.ifa.draw.standard.NullDrawingView: java.util.Hashtable drawingViewManager>;
        temp$3 = virtualinvoke temp$2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(editor);
        temp$4 = (CH.ifa.draw.framework.DrawingView) temp$3;
        return temp$4;

     label1:
        nop;
        temp$5 = new CH.ifa.draw.standard.NullDrawingView;
        specialinvoke temp$5.<CH.ifa.draw.standard.NullDrawingView: void <init>(CH.ifa.draw.framework.DrawingEditor)>(editor);
        newDrawingView = temp$5;
        temp$6 = <CH.ifa.draw.standard.NullDrawingView: java.util.Hashtable drawingViewManager>;
        temp$7 = virtualinvoke temp$6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(editor, newDrawingView);
        return newDrawingView;
    }
}
