public abstract class CH.ifa.draw.standard.FigureTransferCommand extends CH.ifa.draw.standard.AbstractCommand
{

    protected void <init>(java.lang.String, CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.standard.FigureTransferCommand this;
        java.lang.String name;
        CH.ifa.draw.framework.DrawingEditor newDrawingEditor;

        this := @this: CH.ifa.draw.standard.FigureTransferCommand;
        name := @parameter0: java.lang.String;
        newDrawingEditor := @parameter1: CH.ifa.draw.framework.DrawingEditor;
        specialinvoke this.<CH.ifa.draw.standard.AbstractCommand: void <init>(java.lang.String,CH.ifa.draw.framework.DrawingEditor)>(name, newDrawingEditor);
        return;
    }

    protected void deleteFigures(CH.ifa.draw.framework.FigureEnumeration)
    {
        CH.ifa.draw.standard.FigureTransferCommand this;
        CH.ifa.draw.framework.FigureEnumeration fe;
        boolean temp$0;
        CH.ifa.draw.framework.DrawingView temp$1, temp$5;
        CH.ifa.draw.framework.Drawing temp$2;
        CH.ifa.draw.framework.Figure temp$3, temp$4;

        this := @this: CH.ifa.draw.standard.FigureTransferCommand;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;

     label0:
        nop;
        temp$0 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$1 = virtualinvoke this.<CH.ifa.draw.standard.FigureTransferCommand: CH.ifa.draw.framework.DrawingView view()>();
        temp$2 = interfaceinvoke temp$1.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.Drawing drawing()>();
        temp$3 = interfaceinvoke fe.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$4 = interfaceinvoke temp$2.<CH.ifa.draw.framework.Drawing: CH.ifa.draw.framework.Figure orphan(CH.ifa.draw.framework.Figure)>(temp$3);
        goto label0;

     label2:
        nop;
        temp$5 = virtualinvoke this.<CH.ifa.draw.standard.FigureTransferCommand: CH.ifa.draw.framework.DrawingView view()>();
        interfaceinvoke temp$5.<CH.ifa.draw.framework.DrawingView: void clearSelection()>();
        return;
    }

    protected void copyFigures(CH.ifa.draw.framework.FigureEnumeration, int)
    {
        CH.ifa.draw.standard.FigureTransferCommand this;
        CH.ifa.draw.framework.FigureEnumeration fe;
        int figureCount;
        CH.ifa.draw.util.Clipboard temp$0;
        CH.ifa.draw.standard.StandardFigureSelection temp$1;

        this := @this: CH.ifa.draw.standard.FigureTransferCommand;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;
        figureCount := @parameter1: int;
        temp$0 = staticinvoke <CH.ifa.draw.util.Clipboard: CH.ifa.draw.util.Clipboard getClipboard()>();
        temp$1 = new CH.ifa.draw.standard.StandardFigureSelection;
        specialinvoke temp$1.<CH.ifa.draw.standard.StandardFigureSelection: void <init>(CH.ifa.draw.framework.FigureEnumeration,int)>(fe, figureCount);
        virtualinvoke temp$0.<CH.ifa.draw.util.Clipboard: void setContents(java.lang.Object)>(temp$1);
        return;
    }

    CH.ifa.draw.framework.FigureEnumeration insertFigures(CH.ifa.draw.framework.FigureEnumeration, int, int)
    {
        CH.ifa.draw.standard.FigureTransferCommand this;
        CH.ifa.draw.framework.FigureEnumeration fe, temp$1;
        int dx, dy;
        CH.ifa.draw.framework.DrawingView temp$0;

        this := @this: CH.ifa.draw.standard.FigureTransferCommand;
        fe := @parameter0: CH.ifa.draw.framework.FigureEnumeration;
        dx := @parameter1: int;
        dy := @parameter2: int;
        temp$0 = virtualinvoke this.<CH.ifa.draw.standard.FigureTransferCommand: CH.ifa.draw.framework.DrawingView view()>();
        temp$1 = interfaceinvoke temp$0.<CH.ifa.draw.framework.DrawingView: CH.ifa.draw.framework.FigureEnumeration insertFigures(CH.ifa.draw.framework.FigureEnumeration,int,int,boolean)>(fe, dx, dy, 0);
        return temp$1;
    }
}
