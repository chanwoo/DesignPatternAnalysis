public static class CH.ifa.draw.standard.AbstractTool$EventDispatcher extends java.lang.Object
{
    private java.util.Vector myRegisteredListeners;
    private CH.ifa.draw.framework.Tool myObservedTool;

    public void <init>(CH.ifa.draw.framework.Tool)
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        CH.ifa.draw.framework.Tool newObservedTool;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        newObservedTool := @parameter0: CH.ifa.draw.framework.Tool;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners> = temp$0;
        this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool> = newObservedTool;
        return;
    }

    public void fireToolUsableEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolUsable(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void fireToolUnusableEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolUnusable(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void fireToolActivatedEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolActivated(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void fireToolDeactivatedEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolDeactivated(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void fireToolEnabledEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolEnabled(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void fireToolDisabledEvent()
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        java.util.Enumeration le, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.framework.ToolListener temp$4;
        java.util.EventObject temp$5;
        CH.ifa.draw.framework.Tool temp$6;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        le = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke le.<java.util.Enumeration: boolean hasMoreElements()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke le.<java.util.Enumeration: java.lang.Object nextElement()>();
        temp$4 = (CH.ifa.draw.framework.ToolListener) temp$3;
        temp$5 = new java.util.EventObject;
        temp$6 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: CH.ifa.draw.framework.Tool myObservedTool>;
        specialinvoke temp$5.<java.util.EventObject: void <init>(java.lang.Object)>(temp$6);
        interfaceinvoke temp$4.<CH.ifa.draw.framework.ToolListener: void toolDisabled(java.util.EventObject)>(temp$5);
        goto label0;

     label2:
        nop;
        return;
    }

    public void addToolListener(CH.ifa.draw.framework.ToolListener)
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        CH.ifa.draw.framework.ToolListener newToolListener;
        java.util.Vector temp$0, temp$2;
        boolean temp$1, temp$3;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        newToolListener := @parameter0: CH.ifa.draw.framework.ToolListener;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(newToolListener);
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: boolean add(java.lang.Object)>(newToolListener);

     label1:
        nop;
        return;
    }

    public void removeToolListener(CH.ifa.draw.framework.ToolListener)
    {
        CH.ifa.draw.standard.AbstractTool$EventDispatcher this;
        CH.ifa.draw.framework.ToolListener oldToolListener;
        java.util.Vector temp$0, temp$2;
        boolean temp$1, temp$3;

        this := @this: CH.ifa.draw.standard.AbstractTool$EventDispatcher;
        oldToolListener := @parameter0: CH.ifa.draw.framework.ToolListener;
        temp$0 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(oldToolListener);
        if temp$1 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.AbstractTool$EventDispatcher: java.util.Vector myRegisteredListeners>;
        temp$3 = virtualinvoke temp$2.<java.util.Vector: boolean remove(java.lang.Object)>(oldToolListener);

     label1:
        nop;
        return;
    }
}
