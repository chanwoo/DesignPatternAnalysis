public class CH.ifa.draw.standard.StandardDrawing extends CH.ifa.draw.standard.CompositeFigure implements CH.ifa.draw.framework.Drawing
{
    private java.util.Vector fListeners;
    private java.lang.Thread fDrawingLockHolder;
    private java.lang.String myTitle;
    private static final long serialVersionUID;
    private int drawingSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = -2602151437447962046L;
        <CH.ifa.draw.standard.StandardDrawing: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.lang.Thread temp$0;
        int temp$1;
        java.util.Vector temp$2;
        java.awt.Rectangle temp$3;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        specialinvoke this.<CH.ifa.draw.standard.CompositeFigure: void <init>()>();
        temp$0 = null;
        this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder> = temp$0;
        temp$1 = 1;
        this.<CH.ifa.draw.standard.StandardDrawing: int drawingSerializedDataVersion> = temp$1;
        temp$2 = new java.util.Vector;
        specialinvoke temp$2.<java.util.Vector: void <init>(int)>(2);
        this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners> = temp$2;
        temp$3 = new java.awt.Rectangle;
        specialinvoke temp$3.<java.awt.Rectangle: void <init>(int,int,int,int)>(-500, -500, 2000, 2000);
        virtualinvoke this.<CH.ifa.draw.standard.StandardDrawing: void init(java.awt.Rectangle)>(temp$3);
        return;
    }

    public void addDrawingChangeListener(CH.ifa.draw.framework.DrawingChangeListener)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.DrawingChangeListener listener;
        java.util.Vector temp$0, temp$1, temp$2;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        listener := @parameter0: CH.ifa.draw.framework.DrawingChangeListener;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        if temp$0 == null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = new java.util.Vector;
        specialinvoke temp$1.<java.util.Vector: void <init>(int)>(2);
        this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners> = temp$1;

     label1:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        virtualinvoke temp$2.<java.util.Vector: void addElement(java.lang.Object)>(listener);
        return;
    }

    public void removeDrawingChangeListener(CH.ifa.draw.framework.DrawingChangeListener)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.DrawingChangeListener listener;
        java.util.Vector temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        listener := @parameter0: CH.ifa.draw.framework.DrawingChangeListener;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean removeElement(java.lang.Object)>(listener);
        return;
    }

    public java.util.Enumeration drawingChangeListeners()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.util.Vector temp$0;
        java.util.Enumeration temp$1;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: java.util.Enumeration elements()>();
        return temp$1;
    }

    public synchronized CH.ifa.draw.framework.Figure remove(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.Figure figure, temp$3;
        CH.ifa.draw.framework.FigureChangeListener temp$0, temp$1;
        CH.ifa.draw.framework.FigureChangeEvent temp$2;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        figure := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = interfaceinvoke figure.<CH.ifa.draw.framework.Figure: CH.ifa.draw.framework.FigureChangeListener listener()>();
        temp$2 = new CH.ifa.draw.framework.FigureChangeEvent;
        specialinvoke temp$2.<CH.ifa.draw.framework.FigureChangeEvent: void <init>(CH.ifa.draw.framework.Figure,java.awt.Rectangle)>(figure, null);
        interfaceinvoke temp$1.<CH.ifa.draw.framework.FigureChangeListener: void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)>(temp$2);
        return figure;

     label1:
        nop;
        temp$3 = null;
        return temp$3;
    }

    public void figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        CH.ifa.draw.framework.Figure figure, temp$0;
        java.util.Vector temp$1, temp$3;
        boolean temp$2, temp$4;
        java.io.PrintStream temp$5;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = virtualinvoke e.<CH.ifa.draw.framework.FigureChangeEvent: CH.ifa.draw.framework.Figure getFigure()>();
        figure = temp$0;
        temp$1 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fFigures>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: boolean contains(java.lang.Object)>(figure);
        if temp$2 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fFigures>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: boolean removeElement(java.lang.Object)>(figure);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void removeFromContainer(CH.ifa.draw.framework.FigureChangeListener)>(this);
        interfaceinvoke figure.<CH.ifa.draw.framework.Figure: void release()>();
        goto label2;

     label1:
        nop;
        temp$5 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>("Attempt to remove non-existing figure");

     label2:
        nop;
        return;
    }

    public void figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        java.util.Vector temp$0, temp$1, temp$3;
        int i, temp$2, temp$7, temp$8;
        CH.ifa.draw.framework.DrawingChangeListener l;
        java.lang.Object temp$4;
        CH.ifa.draw.framework.DrawingChangeEvent temp$5;
        java.awt.Rectangle temp$6;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        if temp$0 != null goto label0;

        goto label4;

     label0:
        nop;
        i = 0;

     label1:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: int size()>();
        if i < temp$2 goto label2;

        goto label3;

     label2:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        l = (CH.ifa.draw.framework.DrawingChangeListener) temp$4;
        temp$5 = new CH.ifa.draw.framework.DrawingChangeEvent;
        temp$6 = virtualinvoke e.<CH.ifa.draw.framework.FigureChangeEvent: java.awt.Rectangle getInvalidatedRectangle()>();
        specialinvoke temp$5.<CH.ifa.draw.framework.DrawingChangeEvent: void <init>(CH.ifa.draw.framework.Drawing,java.awt.Rectangle)>(this, temp$6);
        interfaceinvoke l.<CH.ifa.draw.framework.DrawingChangeListener: void drawingInvalidated(CH.ifa.draw.framework.DrawingChangeEvent)>(temp$5);
        nop;
        temp$7 = i;
        temp$8 = temp$7 + 1;
        i = temp$8;
        goto label1;

     label3:
        nop;

     label4:
        nop;
        return;
    }

    public void figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        CH.ifa.draw.framework.FigureChangeEvent e;
        java.util.Vector temp$0, temp$1, temp$3;
        int i, temp$2, temp$6, temp$7;
        CH.ifa.draw.framework.DrawingChangeListener l;
        java.lang.Object temp$4;
        CH.ifa.draw.framework.DrawingChangeEvent temp$5;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        e := @parameter0: CH.ifa.draw.framework.FigureChangeEvent;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        if temp$0 != null goto label0;

        goto label4;

     label0:
        nop;
        i = 0;

     label1:
        nop;
        temp$1 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: int size()>();
        if i < temp$2 goto label2;

        goto label3;

     label2:
        nop;
        temp$3 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners>;
        temp$4 = virtualinvoke temp$3.<java.util.Vector: java.lang.Object elementAt(int)>(i);
        l = (CH.ifa.draw.framework.DrawingChangeListener) temp$4;
        temp$5 = new CH.ifa.draw.framework.DrawingChangeEvent;
        specialinvoke temp$5.<CH.ifa.draw.framework.DrawingChangeEvent: void <init>(CH.ifa.draw.framework.Drawing,java.awt.Rectangle)>(this, null);
        interfaceinvoke l.<CH.ifa.draw.framework.DrawingChangeListener: void drawingRequestUpdate(CH.ifa.draw.framework.DrawingChangeEvent)>(temp$5);
        nop;
        temp$6 = i;
        temp$7 = temp$6 + 1;
        i = temp$7;
        goto label1;

     label3:
        nop;

     label4:
        nop;
        return;
    }

    public java.util.Vector handles()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.util.Vector handles, temp$0;
        CH.ifa.draw.standard.NullHandle temp$1, temp$3, temp$5, temp$7;
        CH.ifa.draw.framework.Locator temp$2, temp$4, temp$6, temp$8;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>()>();
        handles = temp$0;
        temp$1 = new CH.ifa.draw.standard.NullHandle;
        temp$2 = staticinvoke <CH.ifa.draw.standard.RelativeLocator: CH.ifa.draw.framework.Locator northWest()>();
        specialinvoke temp$1.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$2);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$1);
        temp$3 = new CH.ifa.draw.standard.NullHandle;
        temp$4 = staticinvoke <CH.ifa.draw.standard.RelativeLocator: CH.ifa.draw.framework.Locator northEast()>();
        specialinvoke temp$3.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$4);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$3);
        temp$5 = new CH.ifa.draw.standard.NullHandle;
        temp$6 = staticinvoke <CH.ifa.draw.standard.RelativeLocator: CH.ifa.draw.framework.Locator southWest()>();
        specialinvoke temp$5.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$6);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$5);
        temp$7 = new CH.ifa.draw.standard.NullHandle;
        temp$8 = staticinvoke <CH.ifa.draw.standard.RelativeLocator: CH.ifa.draw.framework.Locator southEast()>();
        specialinvoke temp$7.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$8);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$7);
        return handles;
    }

    public java.awt.Rectangle displayBox()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.util.Vector temp$0;
        int temp$1;
        CH.ifa.draw.framework.FigureEnumeration k, temp$2;
        java.awt.Rectangle r, temp$4, temp$7, temp$8;
        CH.ifa.draw.framework.Figure temp$3, temp$6;
        boolean temp$5;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fFigures>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: int size()>();
        if temp$1 > 0 goto label0;

        goto label4;

     label0:
        nop;
        temp$2 = virtualinvoke this.<CH.ifa.draw.standard.StandardDrawing: CH.ifa.draw.framework.FigureEnumeration figures()>();
        k = temp$2;
        temp$3 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$4 = interfaceinvoke temp$3.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        r = temp$4;

     label1:
        nop;
        temp$5 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: boolean hasMoreElements()>();
        if temp$5 == 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$6 = interfaceinvoke k.<CH.ifa.draw.framework.FigureEnumeration: CH.ifa.draw.framework.Figure nextFigure()>();
        temp$7 = interfaceinvoke temp$6.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        virtualinvoke r.<java.awt.Rectangle: void add(java.awt.Rectangle)>(temp$7);
        goto label1;

     label3:
        nop;
        return r;

     label4:
        nop;
        temp$8 = new java.awt.Rectangle;
        specialinvoke temp$8.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, 0, 0);
        return temp$8;
    }

    public void basicDisplayBox(java.awt.Point, java.awt.Point)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.awt.Point p1, p2;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        p1 := @parameter0: java.awt.Point;
        p2 := @parameter1: java.awt.Point;
        return;
    }

    public synchronized void lock()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.lang.Thread current, temp$0, temp$1, temp$2;
        java.lang.InterruptedException ex;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        current = temp$0;
        temp$1 = this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder>;
        if temp$1 == current goto label0;

        goto label1;

     label0:
        nop;
        return;

     label1:
        nop;

     label2:
        nop;
        temp$2 = this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder>;
        if temp$2 != null goto label3;

        goto label7;

     label3:
        nop;

     label4:
        nop;
        virtualinvoke this.<CH.ifa.draw.standard.StandardDrawing: void wait()>();
        goto label6;

     label5:
        nop;
        ex := @caughtexception;
        nop;
        goto label6;

     label6:
        nop;
        goto label2;

     label7:
        nop;
        this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder> = current;
        return;

        catch java.lang.InterruptedException from label4 to label5 with label5;
    }

    public synchronized void unlock()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.lang.Thread temp$0, temp$1;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder>;
        if temp$0 != null goto label0;

        goto label1;

     label0:
        nop;
        temp$1 = null;
        this.<CH.ifa.draw.standard.StandardDrawing: java.lang.Thread fDrawingLockHolder> = temp$1;
        virtualinvoke this.<CH.ifa.draw.standard.StandardDrawing: void notifyAll()>();

     label1:
        nop;
        return;
    }

    private final void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.io.ObjectInputStream s;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        s := @parameter0: java.io.ObjectInputStream;
        virtualinvoke s.<java.io.ObjectInputStream: void defaultReadObject()>();
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(2);
        this.<CH.ifa.draw.standard.StandardDrawing: java.util.Vector fListeners> = temp$0;
        return;
    }

    public java.lang.String getTitle()
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.lang.String temp$0;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        temp$0 = this.<CH.ifa.draw.standard.StandardDrawing: java.lang.String myTitle>;
        return temp$0;
    }

    public void setTitle(java.lang.String)
    {
        CH.ifa.draw.standard.StandardDrawing this;
        java.lang.String newTitle;

        this := @this: CH.ifa.draw.standard.StandardDrawing;
        newTitle := @parameter0: java.lang.String;
        this.<CH.ifa.draw.standard.StandardDrawing: java.lang.String myTitle> = newTitle;
        return;
    }
}
