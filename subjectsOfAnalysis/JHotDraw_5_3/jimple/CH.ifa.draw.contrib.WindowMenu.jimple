public class CH.ifa.draw.contrib.WindowMenu extends CH.ifa.draw.util.CommandMenu
{
    private CH.ifa.draw.contrib.MDIDesktopPane desktop;
    private CH.ifa.draw.util.Command cascadeCommand;
    private CH.ifa.draw.util.Command tileCommand;

    public void <init>(java.lang.String, CH.ifa.draw.contrib.MDIDesktopPane, CH.ifa.draw.framework.DrawingEditor)
    {
        CH.ifa.draw.contrib.WindowMenu this;
        java.lang.String newText;
        CH.ifa.draw.contrib.MDIDesktopPane desktop;
        CH.ifa.draw.framework.DrawingEditor editor;
        CH.ifa.draw.contrib.WindowMenu$1Anonymous0 temp$0;
        CH.ifa.draw.contrib.WindowMenu$4Anonymous1 temp$1;
        CH.ifa.draw.contrib.WindowMenu$3Anonymous2 temp$2;

        this := @this: CH.ifa.draw.contrib.WindowMenu;
        newText := @parameter0: java.lang.String;
        desktop := @parameter1: CH.ifa.draw.contrib.MDIDesktopPane;
        editor := @parameter2: CH.ifa.draw.framework.DrawingEditor;
        specialinvoke this.<CH.ifa.draw.util.CommandMenu: void <init>(java.lang.String)>(newText);
        this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.contrib.MDIDesktopPane desktop> = desktop;
        temp$0 = new CH.ifa.draw.contrib.WindowMenu$1Anonymous0;
        specialinvoke temp$0.<CH.ifa.draw.contrib.WindowMenu$1Anonymous0: void <init>(CH.ifa.draw.contrib.WindowMenu,java.lang.String,CH.ifa.draw.framework.DrawingEditor)>(this, "Cascade", editor);
        this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.util.Command cascadeCommand> = temp$0;
        temp$1 = new CH.ifa.draw.contrib.WindowMenu$4Anonymous1;
        specialinvoke temp$1.<CH.ifa.draw.contrib.WindowMenu$4Anonymous1: void <init>(CH.ifa.draw.contrib.WindowMenu,java.lang.String,CH.ifa.draw.framework.DrawingEditor)>(this, "Tile", editor);
        this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.util.Command tileCommand> = temp$1;
        temp$2 = new CH.ifa.draw.contrib.WindowMenu$3Anonymous2;
        specialinvoke temp$2.<CH.ifa.draw.contrib.WindowMenu$3Anonymous2: void <init>(CH.ifa.draw.contrib.WindowMenu)>(this);
        virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: void addMenuListener(javax.swing.event.MenuListener)>(temp$2);
        return;
    }

    private final void buildChildMenus()
    {
        CH.ifa.draw.contrib.WindowMenu this;
        CH.ifa.draw.contrib.WindowMenu$ChildMenuItem menu, temp$6;
        javax.swing.JInternalFrame[] array, temp$1, temp$7, temp$12;
        CH.ifa.draw.contrib.MDIDesktopPane temp$0;
        CH.ifa.draw.util.Command temp$2, temp$3;
        int temp$4, i, temp$5, temp$8, temp$13, temp$17, temp$18;
        javax.swing.JInternalFrame temp$9, temp$14;
        boolean temp$10;
        CH.ifa.draw.contrib.WindowMenu$2Anonymous3 temp$11;
        javax.swing.Icon temp$15;
        javax.swing.JMenuItem temp$16;

        this := @this: CH.ifa.draw.contrib.WindowMenu;
        temp$0 = this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        temp$1 = virtualinvoke temp$0.<CH.ifa.draw.contrib.MDIDesktopPane: javax.swing.JInternalFrame[] getAllFrames()>();
        array = temp$1;
        temp$2 = this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.util.Command cascadeCommand>;
        virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: void add(CH.ifa.draw.util.Command)>(temp$2);
        temp$3 = this.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.util.Command tileCommand>;
        virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: void add(CH.ifa.draw.util.Command)>(temp$3);
        temp$4 = lengthof array;
        if temp$4 > 0 goto label0;

        goto label1;

     label0:
        nop;
        virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: void addSeparator()>();

     label1:
        nop;
        i = 0;

     label2:
        nop;
        temp$5 = lengthof array;
        if i < temp$5 goto label3;

        goto label7;

     label3:
        nop;
        temp$6 = new CH.ifa.draw.contrib.WindowMenu$ChildMenuItem;
        temp$7 = array;
        temp$8 = i;
        temp$9 = temp$7[temp$8];
        specialinvoke temp$6.<CH.ifa.draw.contrib.WindowMenu$ChildMenuItem: void <init>(CH.ifa.draw.contrib.WindowMenu,javax.swing.JInternalFrame)>(this, temp$9);
        menu = temp$6;
        if i == 0 goto label5;

        goto label4;

     label4:
        nop;
        temp$10 = 0;
        goto label6;

     label5:
        nop;
        temp$10 = 1;

     label6:
        nop;
        virtualinvoke menu.<CH.ifa.draw.contrib.WindowMenu$ChildMenuItem: void setState(boolean)>(temp$10);
        temp$11 = new CH.ifa.draw.contrib.WindowMenu$2Anonymous3;
        specialinvoke temp$11.<CH.ifa.draw.contrib.WindowMenu$2Anonymous3: void <init>(CH.ifa.draw.contrib.WindowMenu)>(this);
        virtualinvoke menu.<CH.ifa.draw.contrib.WindowMenu$ChildMenuItem: void addActionListener(java.awt.event.ActionListener)>(temp$11);
        temp$12 = array;
        temp$13 = i;
        temp$14 = temp$12[temp$13];
        temp$15 = virtualinvoke temp$14.<javax.swing.JInternalFrame: javax.swing.Icon getFrameIcon()>();
        virtualinvoke menu.<CH.ifa.draw.contrib.WindowMenu$ChildMenuItem: void setIcon(javax.swing.Icon)>(temp$15);
        temp$16 = virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(menu);
        nop;
        temp$17 = i;
        temp$18 = temp$17 + 1;
        i = temp$18;
        goto label2;

     label7:
        nop;
        return;
    }

    public static CH.ifa.draw.contrib.MDIDesktopPane get$desktop$access$0(CH.ifa.draw.contrib.WindowMenu)
    {
        CH.ifa.draw.contrib.WindowMenu that;
        CH.ifa.draw.contrib.MDIDesktopPane temp$0;

        that := @parameter0: CH.ifa.draw.contrib.WindowMenu;
        temp$0 = that.<CH.ifa.draw.contrib.WindowMenu: CH.ifa.draw.contrib.MDIDesktopPane desktop>;
        return temp$0;
    }

    public void buildChildMenus$access$1()
    {
        CH.ifa.draw.contrib.WindowMenu this;

        this := @this: CH.ifa.draw.contrib.WindowMenu;
        virtualinvoke this.<CH.ifa.draw.contrib.WindowMenu: void buildChildMenus()>();
        return;
    }
}
