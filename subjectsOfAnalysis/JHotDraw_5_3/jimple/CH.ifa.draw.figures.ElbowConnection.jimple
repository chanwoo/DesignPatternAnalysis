public class CH.ifa.draw.figures.ElbowConnection extends CH.ifa.draw.figures.LineConnection
{
    private static final long serialVersionUID;
    private int elbowConnectionSerializedDataVersion;

    static void <clinit>()
    {
        long temp$0;

        temp$0 = 2193968743082078559L;
        <CH.ifa.draw.figures.ElbowConnection: long serialVersionUID> = temp$0;
        return;
    }

    public void <init>()
    {
        CH.ifa.draw.figures.ElbowConnection this;
        int temp$0;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        specialinvoke this.<CH.ifa.draw.figures.LineConnection: void <init>()>();
        temp$0 = 1;
        this.<CH.ifa.draw.figures.ElbowConnection: int elbowConnectionSerializedDataVersion> = temp$0;
        return;
    }

    public void updateConnection()
    {
        CH.ifa.draw.figures.ElbowConnection this;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        specialinvoke this.<CH.ifa.draw.figures.LineConnection: void updateConnection()>();
        virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: void updatePoints()>();
        return;
    }

    public void layoutConnection()
    {
        CH.ifa.draw.figures.ElbowConnection this;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        return;
    }

    public java.util.Vector handles()
    {
        CH.ifa.draw.figures.ElbowConnection this;
        java.util.Vector handles, temp$0, temp$1, temp$5, temp$13;
        int temp$2, temp$3, i, temp$6, temp$7, temp$10, temp$11, i, temp$14, temp$15, temp$17, temp$18;
        CH.ifa.draw.standard.ChangeConnectionStartHandle temp$4;
        CH.ifa.draw.standard.NullHandle temp$8;
        CH.ifa.draw.framework.Locator temp$9;
        CH.ifa.draw.standard.ChangeConnectionEndHandle temp$12;
        CH.ifa.draw.figures.ElbowHandle temp$16;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        temp$0 = new java.util.Vector;
        temp$1 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$2 = virtualinvoke temp$1.<java.util.Vector: int size()>();
        temp$3 = temp$2 * 2;
        specialinvoke temp$0.<java.util.Vector: void <init>(int)>(temp$3);
        handles = temp$0;
        temp$4 = new CH.ifa.draw.standard.ChangeConnectionStartHandle;
        specialinvoke temp$4.<CH.ifa.draw.standard.ChangeConnectionStartHandle: void <init>(CH.ifa.draw.framework.Figure)>(this);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$4);
        i = 1;

     label0:
        nop;
        temp$5 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$6 = virtualinvoke temp$5.<java.util.Vector: int size()>();
        temp$7 = temp$6 - 1;
        if i < temp$7 goto label1;

        goto label2;

     label1:
        nop;
        temp$8 = new CH.ifa.draw.standard.NullHandle;
        temp$9 = staticinvoke <CH.ifa.draw.figures.ElbowConnection: CH.ifa.draw.framework.Locator locator(int)>(i);
        specialinvoke temp$8.<CH.ifa.draw.standard.NullHandle: void <init>(CH.ifa.draw.framework.Figure,CH.ifa.draw.framework.Locator)>(this, temp$9);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$8);
        nop;
        temp$10 = i;
        temp$11 = temp$10 + 1;
        i = temp$11;
        goto label0;

     label2:
        nop;
        temp$12 = new CH.ifa.draw.standard.ChangeConnectionEndHandle;
        specialinvoke temp$12.<CH.ifa.draw.standard.ChangeConnectionEndHandle: void <init>(CH.ifa.draw.framework.Figure)>(this);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$12);
        i = 0;

     label3:
        nop;
        temp$13 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$14 = virtualinvoke temp$13.<java.util.Vector: int size()>();
        temp$15 = temp$14 - 1;
        if i < temp$15 goto label4;

        goto label5;

     label4:
        nop;
        temp$16 = new CH.ifa.draw.figures.ElbowHandle;
        specialinvoke temp$16.<CH.ifa.draw.figures.ElbowHandle: void <init>(CH.ifa.draw.figures.LineConnection,int)>(this, i);
        virtualinvoke handles.<java.util.Vector: void addElement(java.lang.Object)>(temp$16);
        nop;
        temp$17 = i;
        temp$18 = temp$17 + 1;
        i = temp$18;
        goto label3;

     label5:
        nop;
        return handles;
    }

    public CH.ifa.draw.framework.Locator connectedTextLocator(CH.ifa.draw.framework.Figure)
    {
        CH.ifa.draw.figures.ElbowConnection this;
        CH.ifa.draw.framework.Figure f;
        CH.ifa.draw.figures.ElbowTextLocator temp$0;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        f := @parameter0: CH.ifa.draw.framework.Figure;
        temp$0 = new CH.ifa.draw.figures.ElbowTextLocator;
        specialinvoke temp$0.<CH.ifa.draw.figures.ElbowTextLocator: void <init>()>();
        return temp$0;
    }

    protected void updatePoints()
    {
        CH.ifa.draw.figures.ElbowConnection this;
        java.awt.Point start, temp$0, end, temp$1, temp$33, temp$40, temp$47, temp$54;
        java.util.Vector temp$2, temp$3, temp$8, temp$32, temp$39, temp$46, temp$53, temp$60;
        int temp$4, temp$5, temp$6, temp$7, x1, y1, x2, y2, dir, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$34, temp$35, temp$36, temp$37, temp$38, temp$41, temp$42, temp$43, temp$44, temp$45, temp$48, temp$49, temp$50, temp$51, temp$52, temp$55, temp$56, temp$57, temp$58, temp$59;
        java.awt.Rectangle r1, temp$11, r2, temp$14;
        CH.ifa.draw.framework.Connector temp$9, temp$12;
        CH.ifa.draw.framework.Figure temp$10, temp$13;

        this := @this: CH.ifa.draw.figures.ElbowConnection;
        virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: void willChange()>();
        temp$0 = virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: java.awt.Point startPoint()>();
        start = temp$0;
        temp$1 = virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: java.awt.Point endPoint()>();
        end = temp$1;
        temp$2 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        virtualinvoke temp$2.<java.util.Vector: void removeAllElements()>();
        temp$3 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        virtualinvoke temp$3.<java.util.Vector: void addElement(java.lang.Object)>(start);
        temp$4 = start.<java.awt.Point: int x>;
        temp$5 = end.<java.awt.Point: int x>;
        if temp$4 == temp$5 goto label1;

        goto label0;

     label0:
        nop;
        temp$6 = start.<java.awt.Point: int y>;
        temp$7 = end.<java.awt.Point: int y>;
        if temp$6 == temp$7 goto label1;

        goto label2;

        goto label2;

     label1:
        nop;
        temp$8 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        virtualinvoke temp$8.<java.util.Vector: void addElement(java.lang.Object)>(end);
        goto label7;

     label2:
        nop;
        temp$9 = virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: CH.ifa.draw.framework.Connector getStartConnector()>();
        temp$10 = interfaceinvoke temp$9.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        temp$11 = interfaceinvoke temp$10.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        r1 = temp$11;
        temp$12 = virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: CH.ifa.draw.framework.Connector getEndConnector()>();
        temp$13 = interfaceinvoke temp$12.<CH.ifa.draw.framework.Connector: CH.ifa.draw.framework.Figure owner()>();
        temp$14 = interfaceinvoke temp$13.<CH.ifa.draw.framework.Figure: java.awt.Rectangle displayBox()>();
        r2 = temp$14;
        temp$15 = r1.<java.awt.Rectangle: int x>;
        temp$16 = r1.<java.awt.Rectangle: int width>;
        temp$17 = temp$16 / 2;
        temp$18 = temp$15 + temp$17;
        temp$19 = r1.<java.awt.Rectangle: int y>;
        temp$20 = r1.<java.awt.Rectangle: int height>;
        temp$21 = temp$20 / 2;
        temp$22 = temp$19 + temp$21;
        temp$23 = r2.<java.awt.Rectangle: int x>;
        temp$24 = r2.<java.awt.Rectangle: int width>;
        temp$25 = temp$24 / 2;
        temp$26 = temp$23 + temp$25;
        temp$27 = r2.<java.awt.Rectangle: int y>;
        temp$28 = r2.<java.awt.Rectangle: int height>;
        temp$29 = temp$28 / 2;
        temp$30 = temp$27 + temp$29;
        temp$31 = staticinvoke <CH.ifa.draw.util.Geom: int direction(int,int,int,int)>(temp$18, temp$22, temp$26, temp$30);
        dir = temp$31;
        if dir == 1 goto label4;

        goto label3;

     label3:
        nop;
        if dir == 2 goto label4;

        goto label5;

        goto label5;

     label4:
        nop;
        temp$32 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$33 = new java.awt.Point;
        temp$34 = start.<java.awt.Point: int x>;
        temp$35 = start.<java.awt.Point: int y>;
        temp$36 = end.<java.awt.Point: int y>;
        temp$37 = temp$35 + temp$36;
        temp$38 = temp$37 / 2;
        specialinvoke temp$33.<java.awt.Point: void <init>(int,int)>(temp$34, temp$38);
        virtualinvoke temp$32.<java.util.Vector: void addElement(java.lang.Object)>(temp$33);
        temp$39 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$40 = new java.awt.Point;
        temp$41 = end.<java.awt.Point: int x>;
        temp$42 = start.<java.awt.Point: int y>;
        temp$43 = end.<java.awt.Point: int y>;
        temp$44 = temp$42 + temp$43;
        temp$45 = temp$44 / 2;
        specialinvoke temp$40.<java.awt.Point: void <init>(int,int)>(temp$41, temp$45);
        virtualinvoke temp$39.<java.util.Vector: void addElement(java.lang.Object)>(temp$40);
        goto label6;

     label5:
        nop;
        temp$46 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$47 = new java.awt.Point;
        temp$48 = start.<java.awt.Point: int x>;
        temp$49 = end.<java.awt.Point: int x>;
        temp$50 = temp$48 + temp$49;
        temp$51 = temp$50 / 2;
        temp$52 = start.<java.awt.Point: int y>;
        specialinvoke temp$47.<java.awt.Point: void <init>(int,int)>(temp$51, temp$52);
        virtualinvoke temp$46.<java.util.Vector: void addElement(java.lang.Object)>(temp$47);
        temp$53 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        temp$54 = new java.awt.Point;
        temp$55 = start.<java.awt.Point: int x>;
        temp$56 = end.<java.awt.Point: int x>;
        temp$57 = temp$55 + temp$56;
        temp$58 = temp$57 / 2;
        temp$59 = end.<java.awt.Point: int y>;
        specialinvoke temp$54.<java.awt.Point: void <init>(int,int)>(temp$58, temp$59);
        virtualinvoke temp$53.<java.util.Vector: void addElement(java.lang.Object)>(temp$54);

     label6:
        nop;
        temp$60 = this.<CH.ifa.draw.figures.ElbowConnection: java.util.Vector fPoints>;
        virtualinvoke temp$60.<java.util.Vector: void addElement(java.lang.Object)>(end);

     label7:
        nop;
        virtualinvoke this.<CH.ifa.draw.figures.ElbowConnection: void changed()>();
        return;
    }
}
