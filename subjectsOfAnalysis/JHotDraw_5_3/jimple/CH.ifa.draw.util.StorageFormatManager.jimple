public class CH.ifa.draw.util.StorageFormatManager extends java.lang.Object
{
    private java.util.Vector myStorageFormats;
    private CH.ifa.draw.util.StorageFormat myDefaultStorageFormat;

    public void <init>()
    {
        CH.ifa.draw.util.StorageFormatManager this;
        java.util.Vector temp$0;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = new java.util.Vector;
        specialinvoke temp$0.<java.util.Vector: void <init>()>();
        this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats> = temp$0;
        return;
    }

    public void addStorageFormat(CH.ifa.draw.util.StorageFormat)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        CH.ifa.draw.util.StorageFormat newStorageFormat;
        java.util.Vector temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        newStorageFormat := @parameter0: CH.ifa.draw.util.StorageFormat;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean add(java.lang.Object)>(newStorageFormat);
        return;
    }

    public void removeStorageFormat(CH.ifa.draw.util.StorageFormat)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        CH.ifa.draw.util.StorageFormat oldStorageFormat;
        java.util.Vector temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        oldStorageFormat := @parameter0: CH.ifa.draw.util.StorageFormat;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean remove(java.lang.Object)>(oldStorageFormat);
        return;
    }

    public boolean containsStorageFormat(CH.ifa.draw.util.StorageFormat)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        CH.ifa.draw.util.StorageFormat checkStorageFormat;
        java.util.Vector temp$0;
        boolean temp$1;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        checkStorageFormat := @parameter0: CH.ifa.draw.util.StorageFormat;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats>;
        temp$1 = virtualinvoke temp$0.<java.util.Vector: boolean contains(java.lang.Object)>(checkStorageFormat);
        return temp$1;
    }

    public void setDefaultStorageFormat(CH.ifa.draw.util.StorageFormat)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        CH.ifa.draw.util.StorageFormat newDefaultStorageFormat;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        newDefaultStorageFormat := @parameter0: CH.ifa.draw.util.StorageFormat;
        this.<CH.ifa.draw.util.StorageFormatManager: CH.ifa.draw.util.StorageFormat myDefaultStorageFormat> = newDefaultStorageFormat;
        return;
    }

    public CH.ifa.draw.util.StorageFormat getDefaultStorageFormat()
    {
        CH.ifa.draw.util.StorageFormatManager this;
        CH.ifa.draw.util.StorageFormat temp$0;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: CH.ifa.draw.util.StorageFormat myDefaultStorageFormat>;
        return temp$0;
    }

    public void registerFileFilters(javax.swing.JFileChooser)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        javax.swing.JFileChooser fileChooser;
        java.util.Iterator formatsIterator, temp$1;
        java.util.Vector temp$0;
        boolean temp$2;
        java.lang.Object temp$3;
        CH.ifa.draw.util.StorageFormat temp$4, temp$6, temp$7;
        javax.swing.filechooser.FileFilter temp$5, temp$8;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        fileChooser := @parameter0: javax.swing.JFileChooser;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats>;
        temp$1 = virtualinvoke temp$0.<java.util.AbstractList: java.util.Iterator iterator()>();
        formatsIterator = temp$1;

     label0:
        nop;
        temp$2 = interfaceinvoke formatsIterator.<java.util.Iterator: boolean hasNext()>();
        if temp$2 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke formatsIterator.<java.util.Iterator: java.lang.Object next()>();
        temp$4 = (CH.ifa.draw.util.StorageFormat) temp$3;
        temp$5 = interfaceinvoke temp$4.<CH.ifa.draw.util.StorageFormat: javax.swing.filechooser.FileFilter getFileFilter()>();
        virtualinvoke fileChooser.<javax.swing.JFileChooser: void addChoosableFileFilter(javax.swing.filechooser.FileFilter)>(temp$5);
        goto label0;

     label2:
        nop;
        temp$6 = virtualinvoke this.<CH.ifa.draw.util.StorageFormatManager: CH.ifa.draw.util.StorageFormat getDefaultStorageFormat()>();
        if temp$6 != null goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = virtualinvoke this.<CH.ifa.draw.util.StorageFormatManager: CH.ifa.draw.util.StorageFormat getDefaultStorageFormat()>();
        temp$8 = interfaceinvoke temp$7.<CH.ifa.draw.util.StorageFormat: javax.swing.filechooser.FileFilter getFileFilter()>();
        virtualinvoke fileChooser.<javax.swing.JFileChooser: void setFileFilter(javax.swing.filechooser.FileFilter)>(temp$8);

     label4:
        nop;
        return;
    }

    public CH.ifa.draw.util.StorageFormat findStorageFormat(javax.swing.filechooser.FileFilter)
    {
        CH.ifa.draw.util.StorageFormatManager this;
        javax.swing.filechooser.FileFilter findFileFilter, temp$5;
        java.util.Iterator formatsIterator, temp$1;
        java.util.Vector temp$0;
        CH.ifa.draw.util.StorageFormat currentStorageFormat, temp$4, temp$7;
        boolean temp$2, temp$6;
        java.lang.Object temp$3;

        this := @this: CH.ifa.draw.util.StorageFormatManager;
        findFileFilter := @parameter0: javax.swing.filechooser.FileFilter;
        temp$0 = this.<CH.ifa.draw.util.StorageFormatManager: java.util.Vector myStorageFormats>;
        temp$1 = virtualinvoke temp$0.<java.util.AbstractList: java.util.Iterator iterator()>();
        formatsIterator = temp$1;
        currentStorageFormat = null;

     label0:
        nop;
        temp$2 = interfaceinvoke formatsIterator.<java.util.Iterator: boolean hasNext()>();
        if temp$2 == 0 goto label4;

        goto label1;

     label1:
        nop;
        temp$3 = interfaceinvoke formatsIterator.<java.util.Iterator: java.lang.Object next()>();
        temp$4 = (CH.ifa.draw.util.StorageFormat) temp$3;
        currentStorageFormat = temp$4;
        temp$5 = interfaceinvoke currentStorageFormat.<CH.ifa.draw.util.StorageFormat: javax.swing.filechooser.FileFilter getFileFilter()>();
        temp$6 = virtualinvoke temp$5.<javax.swing.filechooser.FileFilter: boolean equals(java.lang.Object)>(findFileFilter);
        if temp$6 == 0 goto label3;

        goto label2;

     label2:
        nop;
        return currentStorageFormat;

     label3:
        nop;
        goto label0;

     label4:
        nop;
        temp$7 = null;
        return temp$7;
    }
}
