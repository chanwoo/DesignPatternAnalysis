<AnalysisResult><AbstractType>CH.ifa.draw.framework.Handle</AbstractType><CallerList><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDown(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDrag(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseUp(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.StandardDrawingView: void drawHandles(java.awt.Graphics)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$3.{CH.ifa.draw.framework.Handle: void draw(java.awt.Graphics)}(g)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}(x, y, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void draw(java.awt.Graphics)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void draw(java.awt.Graphics)}(g)</CallStatement></CallStatementList></RoleList></Method></CallerList><ReferenceFlowPathList><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDown(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDown(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1)</CallStatement></CallStatementList></RoleList></Method><Field><ToString>{CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void {init}(CH.ifa.draw.framework.DrawingEditor,CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDrag(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseDrag(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Field><ToString>{CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void {init}(CH.ifa.draw.framework.DrawingEditor,CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseUp(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void mouseUp(java.awt.event.MouseEvent,int,int)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, temp$1, temp$2, temp$3)</CallStatement></CallStatementList></RoleList></Method><Field><ToString>{CH.ifa.draw.standard.HandleTracker: CH.ifa.draw.framework.Handle fAnchorHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.standard.HandleTracker: void {init}(CH.ifa.draw.framework.DrawingEditor,CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}(x, y, drawing)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.Drawing)}(x, y, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, view)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStart(int,int,CH.ifa.draw.framework.DrawingView)}(x, y, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeStep(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,int,int,CH.ifa.draw.framework.DrawingView)}(x, y, anchorX, anchorY, view)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void invokeEnd(int,int,CH.ifa.draw.framework.Drawing)}(dx, dy, drawing)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void draw(java.awt.Graphics)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void draw(java.awt.Graphics)}(g)</CallStatement></CallStatementList></RoleList></Method><Path><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void draw(java.awt.Graphics)}</ToString><RoleList><Role>Caller</Role><CallStatementList><CallStatement>interfaceinvoke temp$0.{CH.ifa.draw.framework.Handle: void draw(java.awt.Graphics)}(g)</CallStatement></CallStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle getWrappedHandle()}</ToString><RoleList></RoleList></Method><Field><ToString>{CH.ifa.draw.util.UndoableHandle: CH.ifa.draw.framework.Handle myWrappedHandle}</ToString><Role></Role></Field><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void setWrappedHandle(CH.ifa.draw.framework.Handle)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.util.UndoableHandle: void {init}(CH.ifa.draw.framework.Handle,CH.ifa.draw.framework.DrawingView)}</ToString><RoleList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method></Path></ReferenceFlowPathList><CreatorList><Method><ToString>{CH.ifa.draw.contrib.PolygonFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$3 = new CH.ifa.draw.contrib.PolygonHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.contrib.PolygonScaleHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.contrib.TriangleFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.contrib.TriangleRotationHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.ElbowConnection: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$4 = new CH.ifa.draw.standard.ChangeConnectionStartHandle</CreateStatement><CreateStatement>temp$8 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$12 = new CH.ifa.draw.standard.ChangeConnectionEndHandle</CreateStatement><CreateStatement>temp$16 = new CH.ifa.draw.figures.ElbowHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.GroupFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.figures.GroupHandle</CreateStatement><CreateStatement>temp$3 = new CH.ifa.draw.figures.GroupHandle</CreateStatement><CreateStatement>temp$5 = new CH.ifa.draw.figures.GroupHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.figures.GroupHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.LineConnection: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$3 = new CH.ifa.draw.standard.ChangeConnectionStartHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.figures.PolyLineHandle</CreateStatement><CreateStatement>temp$11 = new CH.ifa.draw.standard.ChangeConnectionEndHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.PolyLineFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$5 = new CH.ifa.draw.figures.PolyLineHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.RoundRectangleFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.figures.RadiusHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.figures.TextFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$3 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$5 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.figures.FontSizeHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.samples.net.NodeFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.standard.ConnectionHandle</CreateStatement><CreateStatement>temp$4 = new CH.ifa.draw.standard.ConnectionHandle</CreateStatement><CreateStatement>temp$6 = new CH.ifa.draw.standard.ConnectionHandle</CreateStatement><CreateStatement>temp$8 = new CH.ifa.draw.standard.ConnectionHandle</CreateStatement><CreateStatement>temp$10 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$12 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$14 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$16 = new CH.ifa.draw.standard.NullHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.samples.pert.PertDependency: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.standard.NullHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.samples.pert.PertFigure: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$3 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$5 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$9 = new CH.ifa.draw.standard.ConnectionHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle south(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.SouthHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle southEast(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.SouthEastHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle southWest(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.SouthWestHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle north(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.NorthHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle northEast(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.NorthEastHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle northWest(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.NorthWestHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle east(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.EastHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.BoxHandleKit: CH.ifa.draw.framework.Handle west(CH.ifa.draw.framework.Figure)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$0 = new CH.ifa.draw.standard.WestHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.SelectionTool: CH.ifa.draw.framework.Tool createHandleTracker(CH.ifa.draw.framework.DrawingView,CH.ifa.draw.framework.Handle)}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$2 = new CH.ifa.draw.util.UndoableHandle</CreateStatement></CreateStatementList></RoleList></Method><Method><ToString>{CH.ifa.draw.standard.StandardDrawing: java.util.Vector handles()}</ToString><RoleList><Role>Creator</Role><CreateStatementList><CreateStatement>temp$1 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$3 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$5 = new CH.ifa.draw.standard.NullHandle</CreateStatement><CreateStatement>temp$7 = new CH.ifa.draw.standard.NullHandle</CreateStatement></CreateStatementList></RoleList></Method></CreatorList></AnalysisResult>