public abstract class Duck extends java.lang.Object
{
    FlyBehavior flyBehavior;
    QuackBehavior quackBehavior;

    public void <init>()
    {
        Duck this;

        this := @this: Duck;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void setFlyBehavior(FlyBehavior)
    {
        Duck this;
        FlyBehavior fb;

        this := @this: Duck;
        fb := @parameter0: FlyBehavior;
        this.<Duck: FlyBehavior flyBehavior> = fb;
        return;
    }

    public void setQuackBehavior(QuackBehavior)
    {
        Duck this;
        QuackBehavior qb;

        this := @this: Duck;
        qb := @parameter0: QuackBehavior;
        this.<Duck: QuackBehavior quackBehavior> = qb;
        return;
    }

    public void performFly()
    {
        Duck this;
        FlyBehavior temp$0;

        this := @this: Duck;
        temp$0 = this.<Duck: FlyBehavior flyBehavior>;
        interfaceinvoke temp$0.<FlyBehavior: void fly()>();
        return;
    }

    public void performQuack()
    {
        Duck this;
        QuackBehavior temp$0;

        this := @this: Duck;
        temp$0 = this.<Duck: QuackBehavior quackBehavior>;
        interfaceinvoke temp$0.<QuackBehavior: void quack()>();
        return;
    }
}
