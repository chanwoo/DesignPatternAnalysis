<?xml version="1.0" encoding="UTF-8" ?><ClassList><Class><ToString>CeilingFan</ToString><FieldList><Field><ToString>{CeilingFan: java.util.ArrayList currentStateList}</ToString><Type>java.util.ArrayList</Type><Name>currentStateList</Name></Field><Field><ToString>{CeilingFan: double myPi}</ToString><Type>double</Type><Name>myPi</Name></Field><Field><ToString>{CeilingFan: State highState}</ToString><Type>State</Type><Name>highState</Name></Field></FieldList><MethodList><Method><ToString>{CeilingFan: void {clinit}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>temp$0 = 3.14</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>double</Type></DefBox0><UseBox0><ToString>VB(3.14)</ToString><Type>double</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>3.14</RightOp></Unit><Unit><ToString>{CeilingFan: double myPi} = temp$0</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB({CeilingFan: double myPi})</ToString><Type>double</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>double</Type></UseBox0><LeftOp>{CeilingFan: double myPi}</LeftOp><RightOp>temp$0</RightOp></Unit><Unit><ToString>temp$1 = new HighSpeed</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>HighSpeed</Type></DefBox0><UseBox0><ToString>VB(new HighSpeed)</ToString><Type>HighSpeed</Type></UseBox0><LeftOp>temp$1</LeftOp><RightOp>new HighSpeed</RightOp></Unit><Unit><ToString>specialinvoke temp$1.{HighSpeed: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>HighSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$1.{HighSpeed: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{HighSpeed: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>{CeilingFan: State highState} = temp$1</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB({CeilingFan: State highState})</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(temp$1)</ToString><Type>HighSpeed</Type></UseBox0><LeftOp>{CeilingFan: State highState}</LeftOp><RightOp>temp$1</RightOp></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{CeilingFan: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@this: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: CeilingFan</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>temp$0 = new Off</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>Off</Type></DefBox0><UseBox0><ToString>VB(new Off)</ToString><Type>Off</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new Off</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{Off: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>Off</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{Off: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{Off: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>s = temp$0</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(s)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>Off</Type></UseBox0><LeftOp>s</LeftOp><RightOp>temp$0</RightOp></Unit><Unit><ToString>temp$1 = this.{CeilingFan: java.util.ArrayList currentStateList}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.util.ArrayList</Type></DefBox0><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(this.{CeilingFan: java.util.ArrayList currentStateList})</ToString><Type>java.util.ArrayList</Type></UseBox1><LeftOp>temp$1</LeftOp><RightOp>this.{CeilingFan: java.util.ArrayList currentStateList}</RightOp></Unit><Unit><ToString>temp$2 = virtualinvoke temp$1.{java.util.ArrayList: boolean add(java.lang.Object)}(s)</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$2)</ToString><Type>boolean</Type></DefBox0><UseBox0><ToString>VB(temp$1)</ToString><Type>java.util.ArrayList</Type></UseBox0><UseBox1><ToString>VB(s)</ToString><Type>State</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$1.{java.util.ArrayList: boolean add(java.lang.Object)}(s))</ToString><Type>boolean</Type></UseBox2><LeftOp>temp$2</LeftOp><RightOp>virtualinvoke temp$1.{java.util.ArrayList: boolean add(java.lang.Object)}(s)</RightOp></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{CeilingFan: void setState(State)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>State</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@this: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: CeilingFan</RightOp></Unit><Unit><ToString>s := @parameter0: State</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(s)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(@parameter0: State)</ToString><Type>State</Type></UseBox0><LeftOp>s</LeftOp><RightOp>@parameter0: State</RightOp></Unit><Unit><ToString>temp$0 = this.{CeilingFan: java.util.ArrayList currentStateList}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></DefBox0><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(this.{CeilingFan: java.util.ArrayList currentStateList})</ToString><Type>java.util.ArrayList</Type></UseBox1><LeftOp>temp$0</LeftOp><RightOp>this.{CeilingFan: java.util.ArrayList currentStateList}</RightOp></Unit><Unit><ToString>temp$1 = virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(s)</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>boolean</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></UseBox0><UseBox1><ToString>VB(s)</ToString><Type>State</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(s))</ToString><Type>boolean</Type></UseBox2><LeftOp>temp$1</LeftOp><RightOp>virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(s)</RightOp></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{CeilingFan: void changeSpeed()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@this: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = virtualinvoke this.{CeilingFan: State getState()}()</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke this.{CeilingFan: State getState()}())</ToString><Type>State</Type></UseBox1><LeftOp>temp$0</LeftOp><RightOp>virtualinvoke this.{CeilingFan: State getState()}()</RightOp></Unit><Unit><ToString>state = temp$0</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(state)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>State</Type></UseBox0><LeftOp>state</LeftOp><RightOp>temp$0</RightOp></Unit><Unit><ToString>interfaceinvoke state.{State: void changeSpeed(CeilingFan)}(this)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(state)</ToString><Type>State</Type></UseBox0><UseBox1><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox1><UseBox2><ToString>VB(interfaceinvoke state.{State: void changeSpeed(CeilingFan)}(this))</ToString><Type>void</Type></UseBox2><InvokeMethod>{State: void changeSpeed(CeilingFan)}</InvokeMethod><ArgumentList><Argument>this</Argument></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{CeilingFan: State getState()}</ToString><ReturnType>State</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@this: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = this.{CeilingFan: java.util.ArrayList currentStateList}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></DefBox0><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(this.{CeilingFan: java.util.ArrayList currentStateList})</ToString><Type>java.util.ArrayList</Type></UseBox1><LeftOp>temp$0</LeftOp><RightOp>this.{CeilingFan: java.util.ArrayList currentStateList}</RightOp></Unit><Unit><ToString>temp$1 = this.{CeilingFan: java.util.ArrayList currentStateList}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.util.ArrayList</Type></DefBox0><UseBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(this.{CeilingFan: java.util.ArrayList currentStateList})</ToString><Type>java.util.ArrayList</Type></UseBox1><LeftOp>temp$1</LeftOp><RightOp>this.{CeilingFan: java.util.ArrayList currentStateList}</RightOp></Unit><Unit><ToString>temp$2 = virtualinvoke temp$1.{java.util.ArrayList: int size()}()</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$2)</ToString><Type>int</Type></DefBox0><UseBox0><ToString>VB(temp$1)</ToString><Type>java.util.ArrayList</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke temp$1.{java.util.ArrayList: int size()}())</ToString><Type>int</Type></UseBox1><LeftOp>temp$2</LeftOp><RightOp>virtualinvoke temp$1.{java.util.ArrayList: int size()}()</RightOp></Unit><Unit><ToString>temp$3 = temp$2 - 1</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$3)</ToString><Type>int</Type></DefBox0><UseBox0><ToString>VB(temp$2)</ToString><Type>int</Type></UseBox0><UseBox1><ToString>VB(1)</ToString><Type>int</Type></UseBox1><UseBox2><ToString>VB(temp$2 - 1)</ToString><Type>int</Type></UseBox2><LeftOp>temp$3</LeftOp><RightOp>temp$2 - 1</RightOp></Unit><Unit><ToString>temp$4 = virtualinvoke temp$0.{java.util.ArrayList: java.lang.Object get(int)}(temp$3)</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$4)</ToString><Type>java.lang.Object</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></UseBox0><UseBox1><ToString>VB(temp$3)</ToString><Type>int</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$0.{java.util.ArrayList: java.lang.Object get(int)}(temp$3))</ToString><Type>java.lang.Object</Type></UseBox2><LeftOp>temp$4</LeftOp><RightOp>virtualinvoke temp$0.{java.util.ArrayList: java.lang.Object get(int)}(temp$3)</RightOp></Unit><Unit><ToString>temp$5 = (State) temp$4</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$5)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB(temp$4)</ToString><Type>java.lang.Object</Type></UseBox0><UseBox1><ToString>VB((State) temp$4)</ToString><Type>State</Type></UseBox1><LeftOp>temp$5</LeftOp><RightOp>(State) temp$4</RightOp></Unit><Unit><ToString>return temp$5</ToString><UnitClass>soot.jimple.internal.JReturnStmt</UnitClass><UseBox0><ToString>VB(temp$5)</ToString><Type>State</Type></UseBox0></Unit></UnitList></Method><Method><ToString>{CeilingFan: java.lang.String addString(java.lang.String,java.lang.String)}</ToString><ReturnType>java.lang.String</ReturnType><ParameterList><Parameter0>java.lang.String</Parameter0><Parameter0>java.lang.String</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@this: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: CeilingFan</RightOp></Unit><Unit><ToString>a := @parameter0: java.lang.String</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(a)</ToString><Type>java.lang.String</Type></DefBox0><UseBox0><ToString>VB(@parameter0: java.lang.String)</ToString><Type>java.lang.String</Type></UseBox0><LeftOp>a</LeftOp><RightOp>@parameter0: java.lang.String</RightOp></Unit><Unit><ToString>b := @parameter1: java.lang.String</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(b)</ToString><Type>java.lang.String</Type></DefBox0><UseBox0><ToString>VB(@parameter1: java.lang.String)</ToString><Type>java.lang.String</Type></UseBox0><LeftOp>b</LeftOp><RightOp>@parameter1: java.lang.String</RightOp></Unit><Unit><ToString>temp$0 = new java.lang.StringBuffer</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>java.lang.StringBuffer</Type></DefBox0><UseBox0><ToString>VB(new java.lang.StringBuffer)</ToString><Type>java.lang.StringBuffer</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new java.lang.StringBuffer</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{java.lang.StringBuffer: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>java.lang.StringBuffer</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{java.lang.StringBuffer: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.StringBuffer: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}(a)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>java.lang.StringBuffer</Type></UseBox0><UseBox1><ToString>VB(a)</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}(a))</ToString><Type>java.lang.StringBuffer</Type></UseBox2><InvokeMethod>{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}</InvokeMethod><ArgumentList><Argument>a</Argument></ArgumentList></Unit><Unit><ToString>virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}(b)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>java.lang.StringBuffer</Type></UseBox0><UseBox1><ToString>VB(b)</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}(b))</ToString><Type>java.lang.StringBuffer</Type></UseBox2><InvokeMethod>{java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)}</InvokeMethod><ArgumentList><Argument>b</Argument></ArgumentList></Unit><Unit><ToString>temp$1 = virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.String toString()}()</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.lang.String</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>java.lang.StringBuffer</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.String toString()}())</ToString><Type>java.lang.String</Type></UseBox1><LeftOp>temp$1</LeftOp><RightOp>virtualinvoke temp$0.{java.lang.StringBuffer: java.lang.String toString()}()</RightOp></Unit><Unit><ToString>return temp$1</ToString><UnitClass>soot.jimple.internal.JReturnStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>java.lang.String</Type></UseBox0></Unit></UnitList></Method></MethodList></Class><Class><ToString>HighSpeed</ToString><FieldList></FieldList><MethodList><Method><ToString>{HighSpeed: void changeSpeed(CeilingFan)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>CeilingFan</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: HighSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>HighSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: HighSpeed)</ToString><Type>HighSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: HighSpeed</RightOp></Unit><Unit><ToString>fan := @parameter0: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@parameter0: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>fan</LeftOp><RightOp>@parameter0: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = new Off</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>Off</Type></DefBox0><UseBox0><ToString>VB(new Off)</ToString><Type>Off</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new Off</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{Off: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>Off</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{Off: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{Off: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(temp$0)</ToString><Type>Off</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0))</ToString><Type>void</Type></UseBox2><InvokeMethod>{CeilingFan: void setState(State)}</InvokeMethod><ArgumentList><Argument>temp$0</Argument></ArgumentList></Unit><Unit><ToString>temp$1 = {java.lang.System: java.io.PrintStream out}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></DefBox0><UseBox0><ToString>VB({java.lang.System: java.io.PrintStream out})</ToString><Type>java.io.PrintStream</Type></UseBox0><LeftOp>temp$1</LeftOp><RightOp>{java.lang.System: java.io.PrintStream out}</RightOp></Unit><Unit><ToString>virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("off")</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></UseBox0><UseBox1><ToString>VB("off")</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("off"))</ToString><Type>void</Type></UseBox2><InvokeMethod>{java.io.PrintStream: void println(java.lang.String)}</InvokeMethod><ArgumentList><Argument>"off"</Argument></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{HighSpeed: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: HighSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>HighSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: HighSpeed)</ToString><Type>HighSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: HighSpeed</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>HighSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method></MethodList></Class><Class><ToString>LowSpeed</ToString><FieldList></FieldList><MethodList><Method><ToString>{LowSpeed: void changeSpeed(CeilingFan)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>CeilingFan</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: LowSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>LowSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: LowSpeed)</ToString><Type>LowSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: LowSpeed</RightOp></Unit><Unit><ToString>fan := @parameter0: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@parameter0: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>fan</LeftOp><RightOp>@parameter0: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = new MediumSpeed</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>MediumSpeed</Type></DefBox0><UseBox0><ToString>VB(new MediumSpeed)</ToString><Type>MediumSpeed</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new MediumSpeed</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{MediumSpeed: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>MediumSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{MediumSpeed: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{MediumSpeed: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(temp$0)</ToString><Type>MediumSpeed</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0))</ToString><Type>void</Type></UseBox2><InvokeMethod>{CeilingFan: void setState(State)}</InvokeMethod><ArgumentList><Argument>temp$0</Argument></ArgumentList></Unit><Unit><ToString>temp$1 = {java.lang.System: java.io.PrintStream out}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></DefBox0><UseBox0><ToString>VB({java.lang.System: java.io.PrintStream out})</ToString><Type>java.io.PrintStream</Type></UseBox0><LeftOp>temp$1</LeftOp><RightOp>{java.lang.System: java.io.PrintStream out}</RightOp></Unit><Unit><ToString>virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("medium speed")</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></UseBox0><UseBox1><ToString>VB("medium speed")</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("medium speed"))</ToString><Type>void</Type></UseBox2><InvokeMethod>{java.io.PrintStream: void println(java.lang.String)}</InvokeMethod><ArgumentList><Argument>"medium speed"</Argument></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{LowSpeed: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: LowSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>LowSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: LowSpeed)</ToString><Type>LowSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: LowSpeed</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>LowSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method></MethodList></Class><Class><ToString>MediumSpeed</ToString><FieldList></FieldList><MethodList><Method><ToString>{MediumSpeed: void changeSpeed(CeilingFan)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>CeilingFan</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: MediumSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>MediumSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: MediumSpeed)</ToString><Type>MediumSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: MediumSpeed</RightOp></Unit><Unit><ToString>fan := @parameter0: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@parameter0: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>fan</LeftOp><RightOp>@parameter0: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = new HighSpeed</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>HighSpeed</Type></DefBox0><UseBox0><ToString>VB(new HighSpeed)</ToString><Type>HighSpeed</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new HighSpeed</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{HighSpeed: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>HighSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{HighSpeed: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{HighSpeed: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0)</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(temp$0)</ToString><Type>HighSpeed</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke fan.{CeilingFan: void setState(State)}(temp$0))</ToString><Type>void</Type></UseBox2><InvokeMethod>{CeilingFan: void setState(State)}</InvokeMethod><ArgumentList><Argument>temp$0</Argument></ArgumentList></Unit><Unit><ToString>temp$1 = {java.lang.System: java.io.PrintStream out}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></DefBox0><UseBox0><ToString>VB({java.lang.System: java.io.PrintStream out})</ToString><Type>java.io.PrintStream</Type></UseBox0><LeftOp>temp$1</LeftOp><RightOp>{java.lang.System: java.io.PrintStream out}</RightOp></Unit><Unit><ToString>virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("high speed")</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>java.io.PrintStream</Type></UseBox0><UseBox1><ToString>VB("high speed")</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$1.{java.io.PrintStream: void println(java.lang.String)}("high speed"))</ToString><Type>void</Type></UseBox2><InvokeMethod>{java.io.PrintStream: void println(java.lang.String)}</InvokeMethod><ArgumentList><Argument>"high speed"</Argument></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{MediumSpeed: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: MediumSpeed</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>MediumSpeed</Type></DefBox0><UseBox0><ToString>VB(@this: MediumSpeed)</ToString><Type>MediumSpeed</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: MediumSpeed</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>MediumSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method></MethodList></Class><Class><ToString>MiniCeilingFanSimulator</ToString><FieldList></FieldList><MethodList><Method><ToString>{MiniCeilingFanSimulator: void main(java.lang.String[])}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>java.lang.String[]</Parameter0></ParameterList><UnitList><Unit><ToString>args := @parameter0: java.lang.String[]</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(args)</ToString><Type>java.lang.String[]</Type></DefBox0><UseBox0><ToString>VB(@parameter0: java.lang.String[])</ToString><Type>java.lang.String[]</Type></UseBox0><LeftOp>args</LeftOp><RightOp>@parameter0: java.lang.String[]</RightOp></Unit><Unit><ToString>temp$0 = new CeilingFan</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(new CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>temp$0</LeftOp><RightOp>new CeilingFan</RightOp></Unit><Unit><ToString>specialinvoke temp$0.{CeilingFan: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$0)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$0.{CeilingFan: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>fan = temp$0</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>fan</LeftOp><RightOp>temp$0</RightOp></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>virtualinvoke fan.{CeilingFan: void changeSpeed()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(virtualinvoke fan.{CeilingFan: void changeSpeed()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{CeilingFan: void changeSpeed()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>temp$1 = virtualinvoke fan.{CeilingFan: java.lang.String addString(java.lang.String,java.lang.String)}("a", "b")</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>java.lang.String</Type></DefBox0><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB("a")</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB("b")</ToString><Type>java.lang.String</Type></UseBox2><UseBox3><ToString>VB(virtualinvoke fan.{CeilingFan: java.lang.String addString(java.lang.String,java.lang.String)}("a", "b"))</ToString><Type>java.lang.String</Type></UseBox3><LeftOp>temp$1</LeftOp><RightOp>virtualinvoke fan.{CeilingFan: java.lang.String addString(java.lang.String,java.lang.String)}("a", "b")</RightOp></Unit><Unit><ToString>s = temp$1</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(s)</ToString><Type>java.lang.String</Type></DefBox0><UseBox0><ToString>VB(temp$1)</ToString><Type>java.lang.String</Type></UseBox0><LeftOp>s</LeftOp><RightOp>temp$1</RightOp></Unit><Unit><ToString>pi = 3.14</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(pi)</ToString><Type>double</Type></DefBox0><UseBox0><ToString>VB(3.14)</ToString><Type>double</Type></UseBox0><LeftOp>pi</LeftOp><RightOp>3.14</RightOp></Unit><Unit><ToString>state = {CeilingFan: State highState}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(state)</ToString><Type>State</Type></DefBox0><UseBox0><ToString>VB({CeilingFan: State highState})</ToString><Type>State</Type></UseBox0><LeftOp>state</LeftOp><RightOp>{CeilingFan: State highState}</RightOp></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{MiniCeilingFanSimulator: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: MiniCeilingFanSimulator</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>MiniCeilingFanSimulator</Type></DefBox0><UseBox0><ToString>VB(@this: MiniCeilingFanSimulator)</ToString><Type>MiniCeilingFanSimulator</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: MiniCeilingFanSimulator</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>MiniCeilingFanSimulator</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method></MethodList></Class><Class><ToString>Off</ToString><FieldList></FieldList><MethodList><Method><ToString>{Off: void changeSpeed(CeilingFan)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>CeilingFan</Parameter0></ParameterList><UnitList><Unit><ToString>this := @this: Off</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>Off</Type></DefBox0><UseBox0><ToString>VB(@this: Off)</ToString><Type>Off</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: Off</RightOp></Unit><Unit><ToString>fan := @parameter0: CeilingFan</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></DefBox0><UseBox0><ToString>VB(@parameter0: CeilingFan)</ToString><Type>CeilingFan</Type></UseBox0><LeftOp>fan</LeftOp><RightOp>@parameter0: CeilingFan</RightOp></Unit><Unit><ToString>temp$0 = fan.{CeilingFan: java.util.ArrayList currentStateList}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></DefBox0><UseBox0><ToString>VB(fan)</ToString><Type>CeilingFan</Type></UseBox0><UseBox1><ToString>VB(fan.{CeilingFan: java.util.ArrayList currentStateList})</ToString><Type>java.util.ArrayList</Type></UseBox1><LeftOp>temp$0</LeftOp><RightOp>fan.{CeilingFan: java.util.ArrayList currentStateList}</RightOp></Unit><Unit><ToString>temp$1 = new LowSpeed</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$1)</ToString><Type>LowSpeed</Type></DefBox0><UseBox0><ToString>VB(new LowSpeed)</ToString><Type>LowSpeed</Type></UseBox0><LeftOp>temp$1</LeftOp><RightOp>new LowSpeed</RightOp></Unit><Unit><ToString>specialinvoke temp$1.{LowSpeed: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$1)</ToString><Type>LowSpeed</Type></UseBox0><UseBox1><ToString>VB(specialinvoke temp$1.{LowSpeed: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{LowSpeed: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>temp$2 = virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(temp$1)</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$2)</ToString><Type>boolean</Type></DefBox0><UseBox0><ToString>VB(temp$0)</ToString><Type>java.util.ArrayList</Type></UseBox0><UseBox1><ToString>VB(temp$1)</ToString><Type>LowSpeed</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(temp$1))</ToString><Type>boolean</Type></UseBox2><LeftOp>temp$2</LeftOp><RightOp>virtualinvoke temp$0.{java.util.ArrayList: boolean add(java.lang.Object)}(temp$1)</RightOp></Unit><Unit><ToString>temp$3 = {java.lang.System: java.io.PrintStream out}</ToString><UnitClass>soot.jimple.internal.JAssignStmt</UnitClass><DefBox0><ToString>VB(temp$3)</ToString><Type>java.io.PrintStream</Type></DefBox0><UseBox0><ToString>VB({java.lang.System: java.io.PrintStream out})</ToString><Type>java.io.PrintStream</Type></UseBox0><LeftOp>temp$3</LeftOp><RightOp>{java.lang.System: java.io.PrintStream out}</RightOp></Unit><Unit><ToString>virtualinvoke temp$3.{java.io.PrintStream: void println(java.lang.String)}("low speed")</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(temp$3)</ToString><Type>java.io.PrintStream</Type></UseBox0><UseBox1><ToString>VB("low speed")</ToString><Type>java.lang.String</Type></UseBox1><UseBox2><ToString>VB(virtualinvoke temp$3.{java.io.PrintStream: void println(java.lang.String)}("low speed"))</ToString><Type>void</Type></UseBox2><InvokeMethod>{java.io.PrintStream: void println(java.lang.String)}</InvokeMethod><ArgumentList><Argument>"low speed"</Argument></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method><Method><ToString>{Off: void {init}()}</ToString><ReturnType>void</ReturnType><ParameterList></ParameterList><UnitList><Unit><ToString>this := @this: Off</ToString><UnitClass>soot.jimple.internal.JIdentityStmt</UnitClass><DefBox0><ToString>VB(this)</ToString><Type>Off</Type></DefBox0><UseBox0><ToString>VB(@this: Off)</ToString><Type>Off</Type></UseBox0><LeftOp>this</LeftOp><RightOp>@this: Off</RightOp></Unit><Unit><ToString>specialinvoke this.{java.lang.Object: void {init}()}()</ToString><UnitClass>soot.jimple.internal.JInvokeStmt</UnitClass><UseBox0><ToString>VB(this)</ToString><Type>Off</Type></UseBox0><UseBox1><ToString>VB(specialinvoke this.{java.lang.Object: void {init}()}())</ToString><Type>void</Type></UseBox1><InvokeMethod>{java.lang.Object: void {init}()}</InvokeMethod><ArgumentList></ArgumentList></Unit><Unit><ToString>return</ToString><UnitClass>soot.jimple.internal.JReturnVoidStmt</UnitClass></Unit></UnitList></Method></MethodList></Class><Class><ToString>State</ToString><FieldList></FieldList><MethodList><Method><ToString>{State: void changeSpeed(CeilingFan)}</ToString><ReturnType>void</ReturnType><ParameterList><Parameter0>CeilingFan</Parameter0></ParameterList><UnitList></UnitList></Method></MethodList></Class></ClassList>